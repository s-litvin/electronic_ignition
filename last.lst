
AVRASM ver. 2.1.30  E:\Электроника\NEW_FUOZ\Новая папка\last.asm Fri Jul 20 14:36:19 2012

E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1059): warning: Register r5 already defined by the .DEF directive
E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1060): warning: Register r6 already defined by the .DEF directive
E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1061): warning: Register r8 already defined by the .DEF directive
E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1062): warning: Register r10 already defined by the .DEF directive
E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1063): warning: Register r12 already defined by the .DEF directive
E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1064): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 16,000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : No
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _devices=R5
                 	.DEF _oper=R6
                 	.DEF _yes=R8
                 	.DEF _oboroty=R10
                 	.DEF _ob_y=R12
                 	.DEF __lcd_x=R4
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0134 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0251 	JMP  _timer1_compa_isr
00000e 940c 0252 	JMP  _timer1_compb_isr
000010 940c 0239 	JMP  _timer1_ovf_isr
000012 940c 0164 	JMP  _timer0_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _conv_delay_G101:
00002a 0064
00002b 00c8
00002c 0190
00002d 0320      	.DB  0x64,0x0,0xC8,0x0,0x90,0x1,0x20,0x3
                 _bit_mask_G101:
00002e fff8
00002f fffc
000030 fffe
000031 ffff      	.DB  0xF8,0xFF,0xFC,0xFF,0xFE,0xFF,0xFF,0xFF
                 
                 _0x3:
E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1101): warning: .cseg .db misalignment - padding zero byte
000032 0002      	.DB  0x2
                 _0x4:
E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1103): warning: .cseg .db misalignment - padding zero byte
000033 0007      	.DB  0x7
                 _0x5:
000034 01e0
000035 01e0
000036 01e0
000037 01e0      	.DB  0xE0,0x1,0xE0,0x1,0xE0,0x1,0xE0,0x1
000038 01e0
000039 01e0
00003a 01e0
00003b 01e0      	.DB  0xE0,0x1,0xE0,0x1,0xE0,0x1,0xE0,0x1
00003c 01e0
00003d 01e0
00003e 01e0
00003f 01e0      	.DB  0xE0,0x1,0xE0,0x1,0xE0,0x1,0xE0,0x1
000040 01e0
000041 01e0
000042 01e0      	.DB  0xE0,0x1,0xE0,0x1,0xE0,0x1
                 _0x89:
000043 0000
000044 0000
000045 0000
000046 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000047 2020
000048 6425
000049 0078
00004a 6425      	.DB  0x20,0x20,0x25,0x64,0x78,0x0,0x25,0x64
00004b 2500
00004c 3c00
00004d 2032
00004e 3e33      	.DB  0x0,0x25,0x0,0x3C,0x32,0x20,0x33,0x3E
00004f 3420
000050 007e
000051 b7a5
000052 2ebc      	.DB  0x20,0x34,0x7E,0x0,0xA5,0xB7,0xBC,0x2E
000053 2520
000054 0064
000055 2025
000056 3c00      	.DB  0x20,0x25,0x64,0x0,0x25,0x20,0x0,0x3C
000057 3220
000058 2020
000059 2033
00005a 003e      	.DB  0x20,0x32,0x20,0x20,0x33,0x20,0x3E,0x0
00005b 2020
00005c f720
00005d 2020
00005e 2020      	.DB  0x20,0x20,0x20,0xF7,0x20,0x20,0x20,0x20
00005f 2500
000060 2764
000061 ff00
000062 6400      	.DB  0x0,0x25,0x64,0x27,0x0,0xFF,0x0,0x64
000063 7665
000064 6369
000065 3d65
000066 7525      	.DB  0x65,0x76,0x69,0x63,0x65,0x3D,0x25,0x75
000067 7200
000068 6165
000069 6964
00006a 676e      	.DB  0x0,0x72,0x65,0x61,0x64,0x69,0x6E,0x67
00006b 4800
00006c bf65
00006d bf20
00006e bc65      	.DB  0x0,0x48,0x65,0xBF,0x20,0xBF,0x65,0xBC
00006f e3be
000070 bf61
000071 b8c0
000072 6fba      	.DB  0xBE,0xE3,0x61,0xBF,0xC0,0xB8,0xBA,0x6F
000073 00b3
000074 5f73
000075 696c
000076 2074      	.DB  0xB3,0x0,0x73,0x5F,0x6C,0x69,0x74,0x20
000077 2040
000078 7520
000079 726b
00007a 6e2e      	.DB  0x40,0x20,0x20,0x75,0x6B,0x72,0x2E,0x6E
00007b 7465
00007c a400
00007d b361
00007e e365      	.DB  0x65,0x74,0x0,0xA4,0x61,0xB3,0x65,0xE3
00007f 20b8
000080 2020
000081 2020
000082 61b2      	.DB  0xB8,0x20,0x20,0x20,0x20,0x20,0xB2,0x61
000083 bab9
000084 4800
000085 b261
000086 7065      	.DB  0xB9,0xBA,0x0,0x48,0x61,0xB2,0x65,0x70
000087 20b8
000088 3120
000089 3030
00008a 6f30      	.DB  0xB8,0x20,0x20,0x31,0x30,0x30,0x30,0x6F
00008b 2fb2
00008c 00bc
00008d 2020
00008e 2020      	.DB  0xB2,0x2F,0xBC,0x0,0x20,0x20,0x20,0x20
00008f 3a20
000090 6425
000091 2020
000092 0020      	.DB  0x20,0x3A,0x25,0x64,0x20,0x20,0x20,0x0
000093 6425
000094 2020
000095 2020
000096 2020      	.DB  0x25,0x64,0x20,0x20,0x20,0x20,0x20,0x20
000097 4100
000098 5256
000099 253a
00009a 0064      	.DB  0x0,0x41,0x56,0x52,0x3A,0x25,0x64,0x0
00009b a9aa
00009c a44f
00009d 2020
00009e 2020      	.DB  0xAA,0xA9,0x4F,0xA4,0x20,0x20,0x20,0x20
00009f 2020
0000a0 2020
0000a1 4220
0000a2 bbba      	.DB  0x20,0x20,0x20,0x20,0x20,0x42,0xBA,0xBB
0000a3 aa00
0000a4 4fa9
0000a5 20a4
0000a6 2020      	.DB  0x0,0xAA,0xA9,0x4F,0xA4,0x20,0x20,0x20
0000a7 2020
0000a8 2020
0000a9 4220
0000aa bac3      	.DB  0x20,0x20,0x20,0x20,0x20,0x42,0xC3,0xBA
0000ab 00bb
0000ac 70a8
0000ad b46f
0000ae 6570      	.DB  0xBB,0x0,0xA8,0x70,0x6F,0xB4,0x70,0x65
0000af 20b3
0000b0 b363
0000b1 c065
0000b2 b965      	.DB  0xB3,0x20,0x63,0xB3,0x65,0xC0,0x65,0xB9
0000b3 2e2e
0000b4 2000
0000b5 6fa1
0000b6 6fbf      	.DB  0x2E,0x2E,0x0,0x20,0xA1,0x6F,0xBF,0x6F
0000b7 6fb3
0000b8 4300
0000b9 61bd
0000ba 61c0      	.DB  0xB3,0x6F,0x0,0x43,0xBD,0x61,0xC0,0x61
0000bb 61bb
0000bc 2020
0000bd 61b7
0000be bbb4      	.DB  0xBB,0x61,0x20,0x20,0xB7,0x61,0xB4,0xBB
0000bf c179
0000c0 00b8
0000c1 b4a9
0000c2 c3bb      	.DB  0x79,0xC1,0xB8,0x0,0xA9,0xB4,0xBB,0xC3
0000c3 be20
0000c4 206f
0000c5 bc79
0000c6 bb6f      	.DB  0x20,0xBE,0x6F,0x20,0x79,0xBC,0x6F,0xBB
0000c7 61c0
0000c8 2ebd
0000c9 4300
0000ca 70b2      	.DB  0xC0,0x61,0xBD,0x2E,0x0,0x43,0xB2,0x70
0000cb 636f
0000cc 20c4
0000cd 6f20
0000ce 6fb2      	.DB  0x6F,0x63,0xC4,0x20,0x20,0x6F,0xB2,0x6F
0000cf 6f70
0000d0 c3bf
0000d1 2000
0000d2 2020      	.DB  0x70,0x6F,0xBF,0xC3,0x0,0x20,0x20,0x20
0000d3 2020
0000d4 3dce
0000d5 6425
0000d6 2500      	.DB  0x20,0x20,0xCE,0x3D,0x25,0x64,0x0,0x25
0000d7 2020
0000d8 2000
0000d9 2020
0000da b320      	.DB  0x20,0x20,0x0,0x20,0x20,0x20,0x20,0xB3
0000db bac3
0000dc 25bb
0000dd 0064      	.DB  0xC3,0xBA,0xBB,0x25,0x64,0x0
                 _0x2000000:
0000de 4e2d
0000df 4e41
E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1151): warning: .cseg .db misalignment - padding zero byte
0000e0 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2040003:
0000e1 c080      	.DB  0x80,0xC0
                 _0x20C0060:
E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1155): warning: .cseg .db misalignment - padding zero byte
0000e2 0001      	.DB  0x1
                 _0x20C0000:
0000e3 4e2d
0000e4 4e41
0000e5 4900
0000e6 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\Электроника\NEW_FUOZ\Новая папка\last.asm(1158): warning: .cseg .db misalignment - padding zero byte
0000e7 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0000e8 0001      	.DW  0x01
0000e9 027e      	.DW  _sek
0000ea 0064      	.DW  _0x3*2
                 
0000eb 0001      	.DW  0x01
0000ec 028a      	.DW  _kk
0000ed 0066      	.DW  _0x4*2
                 
0000ee 001e      	.DW  0x1E
0000ef 028c      	.DW  _temp_ugly
0000f0 0068      	.DW  _0x5*2
                 
0000f1 0002      	.DW  0x02
0000f2 0160      	.DW  _0x24
0000f3 0097      	.DW  _0x0*2+9
                 
0000f4 0009      	.DW  0x09
0000f5 0162      	.DW  _0x24+2
0000f6 0099      	.DW  _0x0*2+11
                 
0000f7 0003      	.DW  0x03
0000f8 016b      	.DW  _0x25
0000f9 00aa      	.DW  _0x0*2+28
                 
0000fa 0009      	.DW  0x09
0000fb 016e      	.DW  _0x25+3
0000fc 00ad      	.DW  _0x0*2+31
                 
0000fd 0009      	.DW  0x09
0000fe 0177      	.DW  _0x26
0000ff 00b6      	.DW  _0x0*2+40
                 
000100 0008      	.DW  0x08
000101 0180      	.DW  _0x2D
000102 00cf      	.DW  _0x0*2+65
                 
000103 0011      	.DW  0x11
000104 0188      	.DW  _0x2D+8
000105 00d7      	.DW  _0x0*2+73
                 
000106 0011      	.DW  0x11
000107 0199      	.DW  _0x2D+25
000108 00e8      	.DW  _0x0*2+90
                 
000109 0010      	.DW  0x10
00010a 01aa      	.DW  _0x2D+42
00010b 00f9      	.DW  _0x0*2+107
                 
00010c 0011      	.DW  0x11
00010d 01ba      	.DW  _0x2D+58
00010e 0109      	.DW  _0x0*2+123
                 
00010f 0011      	.DW  0x11
000110 01cb      	.DW  _0x2D+75
000111 0136      	.DW  _0x0*2+168
                 
000112 0011      	.DW  0x11
000113 01dc      	.DW  _0x2D+92
000114 0147      	.DW  _0x0*2+185
                 
000115 0011      	.DW  0x11
000116 01ed      	.DW  _0x2D+109
000117 0158      	.DW  _0x0*2+202
                 
000118 0008      	.DW  0x08
000119 01fe      	.DW  _0x2D+126
00011a 0169      	.DW  _0x0*2+219
                 
00011b 0011      	.DW  0x11
00011c 0206      	.DW  _0x2D+134
00011d 0171      	.DW  _0x0*2+227
                 
00011e 0011      	.DW  0x11
00011f 0217      	.DW  _0x2D+151
000120 0182      	.DW  _0x0*2+244
                 
000121 0011      	.DW  0x11
000122 0228      	.DW  _0x2D+168
000123 00e8      	.DW  _0x0*2+90
                 
000124 0010      	.DW  0x10
000125 0239      	.DW  _0x2D+185
000126 0193      	.DW  _0x0*2+261
                 
000127 0004      	.DW  0x04
000128 0249      	.DW  _0x2D+201
000129 01ad      	.DW  _0x0*2+287
                 
00012a 0008      	.DW  0x08
00012b 0006      	.DW  0x06
00012c 0086      	.DW  _0x89*2
                 
00012d 0002      	.DW  0x02
00012e 02aa      	.DW  __base_y_G102
00012f 01c2      	.DW  _0x2040003*2
                 
000130 0001      	.DW  0x01
000131 02b0      	.DW  __seed_G106
000132 01c4      	.DW  _0x20C0060*2
                 
                 _0xFFFFFFFF:
000133 0000      	.DW  0
                 
                 __RESET:
000134 94f8      	CLI
000135 27ee      	CLR  R30
000136 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000137 e0f1      	LDI  R31,1
000138 bffb      	OUT  GICR,R31
000139 bfeb      	OUT  GICR,R30
00013a bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00013b e1f8      	LDI  R31,0x18
00013c bdf1      	OUT  WDTCR,R31
00013d bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00013e e08d      	LDI  R24,(14-2)+1
00013f e0a2      	LDI  R26,2
000140 27bb      	CLR  R27
                 __CLEAR_REG:
000141 93ed      	ST   X+,R30
000142 958a      	DEC  R24
000143 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000144 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000145 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000146 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000147 93ed      	ST   X+,R30
000148 9701      	SBIW R24,1
000149 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00014a ede0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00014b e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00014c 9185      	LPM  R24,Z+
00014d 9195      	LPM  R25,Z+
00014e 9700      	SBIW R24,0
00014f f061      	BREQ __GLOBAL_INI_END
000150 91a5      	LPM  R26,Z+
000151 91b5      	LPM  R27,Z+
000152 9005      	LPM  R0,Z+
000153 9015      	LPM  R1,Z+
000154 01bf      	MOVW R22,R30
000155 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000156 9005      	LPM  R0,Z+
000157 920d      	ST   X+,R0
000158 9701      	SBIW R24,1
000159 f7e1      	BRNE __GLOBAL_INI_LOOP
00015a 01fb      	MOVW R30,R22
00015b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00015c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00015d bfed      	OUT  SPL,R30
00015e e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00015f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000160 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000161 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000162 940c 0456 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;
                 ;//
                 ;//Warning: E:\Электроника\NEW_FUOZ\Новая папка\last.c(31): the 'double' data type will be supported only in the 'Professional' version, defaulting to 'float'
                 ;//
                 ;//
                 ;//
                 ;//    ПЕРЕКОМПИЛИРОВАТЬ В ПОЛНОЙ ВЕРСИИ
                 ;//
                 ;//
                 ;//
                 ;//
                 ;
                 ;
                 ;
                 ;
                 ;/*****************************************************
                 ;Date                : 16.03.2012
                 ;Chip type           : ATmega16
                 ;Program type        : Application
                 ;Clock frequency     : 16,000000 MHz
                 ;Memory model        : Small
                 ;External SRAM size  : 0
                 ;Data Stack size     : 256
                 ;*****************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;
                 ;// 1 Wire Bus functions
                 ;//#asm
                 ;//   .equ __w1_port=0x1B ;PORTA
                 ;//   .equ __w1_bit=2
                 ;//#endasm
                 ;//#include <1wire.h>
                 ;#include <ds18b20.h>
                 ;#include <alcd.h>
                 ;
                 ;unsigned char devices;
                 ;unsigned char RomCode[2][9];
                 ;
                 ;
                 ;char buffer[16];
                 ;int oper=0,yes=0,oboroty=0,ob_y=0,uoz_i=0,zn1=0,zn2=0,sek=2,ob_min=0,temp1,temp2,temp_buf,i=0,kk=7;
                 
                 	.DSEG
                 ;int temp_ugly[15]={480,480,480,480,480,480,480,480,480,480,480,480,480,480,480};
                 ;
                 ;
                 ;
                 ;eeprom int temp_f,f,percent[4][8],prer_ugly[8];
                 ;
                 ;
                 ;
                 ;
                 ;// скорость счета 16 000 000, размер таймера 256, т.е. в секунду он переполнится около 62500 раз
                 ;// чтобы кол-во переполнений было точным (64 прер/мс), уменьшим размер таймера до 250, значит стартовать он должен с 5 (0x05)
                 ;// максимальная скорость прохода модулятора 2.22 мс при 9000 об/мин. (120 градусов)
                 ;// значит прерывание сработает 2.2*64=140.8 раз
                 ;// а максимальное время прохода при 900 об/мин составит 22.2мс = 1420.8 раз
                 ;
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 003F {
                 
                 	.CSEG
                 _timer0_ovf_isr:
000164 920a      	ST   -Y,R0
000165 921a      	ST   -Y,R1
000166 939a      	ST   -Y,R25
000167 93aa      	ST   -Y,R26
000168 93ba      	ST   -Y,R27
000169 93ea      	ST   -Y,R30
00016a 93fa      	ST   -Y,R31
00016b b7ef      	IN   R30,SREG
00016c 93ea      	ST   -Y,R30
                 ; 0000 0040 
                 ; 0000 0041 // Reinitialize Timer 0 value
                 ; 0000 0042 TCNT0=0x05;
00016d e0e5      	LDI  R30,LOW(5)
00016e bfe2      	OUT  0x32,R30
                 ; 0000 0043 ////////////////////////////////////////////////////
                 ; 0000 0044 //опрашиваем датчик 64 раза в 1 мс
                 ; 0000 0045 
                 ; 0000 0046 zn1=zn2;             // сохраняем предыдущее значение
00016f 91e0 027c 	LDS  R30,_zn2
000171 91f0 027d 	LDS  R31,_zn2+1
000173 93e0 027a 	STS  _zn1,R30
000175 93f0 027b 	STS  _zn1+1,R31
                 ; 0000 0047 zn2=PINA.6;          // считываем новое              //PIND.2 !!!
000177 e0e0      	LDI  R30,0
000178 99ce      	SBIC 0x19,6
000179 e0e1      	LDI  R30,1
00017a e0f0      	LDI  R31,0
00017b 93e0 027c 	STS  _zn2,R30
00017d 93f0 027d 	STS  _zn2+1,R31
                 ; 0000 0048 
                 ; 0000 0049 //if(f==4)             // f=4 ФУОЗ отключен
                 ; 0000 004A //   {
                 ; 0000 004B //          PORTD.3=PINA.6;        //PORTD.6 = PIND.2 !!!
                 ; 0000 004C //           if((zn1==0) && (zn2==1)) ob_min++;
                 ; 0000 004D //   }
                 ; 0000 004E //
                 ; 0000 004F //else
                 ; 0000 0050 //{
                 ; 0000 0051    if(zn1==zn2)
00017f 91a0 027a 	LDS  R26,_zn1
000181 91b0 027b 	LDS  R27,_zn1+1
000183 17ea      	CP   R30,R26
000184 07fb      	CPC  R31,R27
000185 f501      	BRNE _0x6
                 ; 0000 0052 
                 ; 0000 0053       if(zn2==1)
000186 91a0 027c 	LDS  R26,_zn2
000188 91b0 027d 	LDS  R27,_zn2+1
00018a 9711      	SBIW R26,1
00018b f481      	BRNE _0x7
                 ; 0000 0054          if(yes<(prer_ugly[7]+prer_ugly[7])) yes++;
                +
00018c e5a2     +LDI R26 , LOW ( _prer_ugly + ( 14 ) )
00018d e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 14 ) )
                 	__POINTW2MN _prer_ugly,14
00018e 940e 166d 	CALL __EEPROMRDW
000190 010f      	MOVW R0,R30
000191 0de0      	ADD  R30,R0
000192 1df1      	ADC  R31,R1
000193 168e      	CP   R8,R30
000194 069f      	CPC  R9,R31
000195 f424      	BRGE _0x8
000196 01f4      	MOVW R30,R8
000197 9631      	ADIW R30,1
000198 014f      	MOVW R8,R30
                 ; 0000 0055          else PORTD.3=0;                                 //PORTD.6 !!!
000199 c001      	RJMP _0x9
                 _0x8:
00019a 9893      	CBI  0x12,3
                 ; 0000 0056       else
                 _0x9:
00019b c009      	RJMP _0xC
                 _0x7:
                 ; 0000 0057          if(yes>0) yes--;
00019c 2400      	CLR  R0
00019d 1408      	CP   R0,R8
00019e 0409      	CPC  R0,R9
00019f f424      	BRGE _0xD
0001a0 01f4      	MOVW R30,R8
0001a1 9731      	SBIW R30,1
0001a2 014f      	MOVW R8,R30
                 ; 0000 0058          else PORTD.3=0;        //PORTD.6 !!!
0001a3 c001      	RJMP _0xE
                 _0xD:
0001a4 9893      	CBI  0x12,3
                 ; 0000 0059 
                 ; 0000 005A     else
                 _0xE:
                 _0xC:
0001a5 c089      	RJMP _0x11
                 _0x6:
                 ; 0000 005B 
                 ; 0000 005C       if(yes==0) {PORTD.3=1; ob_min++;}   //PORTD.6 !!!
0001a6 2c08      	MOV  R0,R8
0001a7 2809      	OR   R0,R9
0001a8 f449      	BRNE _0x12
0001a9 9a93      	SBI  0x12,3
0001aa e8a0      	LDI  R26,LOW(_ob_min)
0001ab e0b2      	LDI  R27,HIGH(_ob_min)
0001ac 91ed      	LD   R30,X+
0001ad 91fd      	LD   R31,X+
0001ae 9631      	ADIW R30,1
0001af 93fe      	ST   -X,R31
0001b0 93ee      	ST   -X,R30
                 ; 0000 005D       else
0001b1 c07d      	RJMP _0x15
                 _0x12:
                 ; 0000 005E        {
                 ; 0000 005F 
                 ; 0000 0060         if(yes>prer_ugly[3])                   // дерево выбора оборотов
                +
0001b2 e4aa     +LDI R26 , LOW ( _prer_ugly + ( 6 ) )
0001b3 e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 6 ) )
                 	__POINTW2MN _prer_ugly,6
0001b4 940e 166d 	CALL __EEPROMRDW
0001b6 15e8      	CP   R30,R8
0001b7 05f9      	CPC  R31,R9
0001b8 f54c      	BRGE _0x16
                 ; 0000 0061            if(yes>prer_ugly[5])
                +
0001b9 e4ae     +LDI R26 , LOW ( _prer_ugly + ( 10 ) )
0001ba e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 10 ) )
                 	__POINTW2MN _prer_ugly,10
0001bb 940e 166d 	CALL __EEPROMRDW
0001bd 15e8      	CP   R30,R8
0001be 05f9      	CPC  R31,R9
0001bf f48c      	BRGE _0x17
                 ; 0000 0062              if(yes>prer_ugly[6]) kk=7;
                +
0001c0 e5a0     +LDI R26 , LOW ( _prer_ugly + ( 12 ) )
0001c1 e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 12 ) )
                 	__POINTW2MN _prer_ugly,12
0001c2 940e 166d 	CALL __EEPROMRDW
0001c4 15e8      	CP   R30,R8
0001c5 05f9      	CPC  R31,R9
0001c6 f41c      	BRGE _0x18
0001c7 e0e7      	LDI  R30,LOW(7)
0001c8 e0f0      	LDI  R31,HIGH(7)
0001c9 c002      	RJMP _0x84
                 ; 0000 0063              else kk=6;
                 _0x18:
0001ca e0e6      	LDI  R30,LOW(6)
0001cb e0f0      	LDI  R31,HIGH(6)
                 _0x84:
0001cc 93e0 028a 	STS  _kk,R30
0001ce 93f0 028b 	STS  _kk+1,R31
                 ; 0000 0064            else
0001d0 c010      	RJMP _0x1A
                 _0x17:
                 ; 0000 0065              if(yes>prer_ugly[4]) kk=5;
                +
0001d1 e4ac     +LDI R26 , LOW ( _prer_ugly + ( 8 ) )
0001d2 e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 8 ) )
                 	__POINTW2MN _prer_ugly,8
0001d3 940e 166d 	CALL __EEPROMRDW
0001d5 15e8      	CP   R30,R8
0001d6 05f9      	CPC  R31,R9
0001d7 f41c      	BRGE _0x1B
0001d8 e0e5      	LDI  R30,LOW(5)
0001d9 e0f0      	LDI  R31,HIGH(5)
0001da c002      	RJMP _0x85
                 ; 0000 0066              else kk=4;
                 _0x1B:
0001db e0e4      	LDI  R30,LOW(4)
0001dc e0f0      	LDI  R31,HIGH(4)
                 _0x85:
0001dd 93e0 028a 	STS  _kk,R30
0001df 93f0 028b 	STS  _kk+1,R31
                 ; 0000 0067         else
                 _0x1A:
0001e1 c02b      	RJMP _0x1D
                 _0x16:
                 ; 0000 0068            if(yes>prer_ugly[1])
                +
0001e2 e4a6     +LDI R26 , LOW ( _prer_ugly + ( 2 ) )
0001e3 e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 2 ) )
                 	__POINTW2MN _prer_ugly,2
0001e4 940e 166d 	CALL __EEPROMRDW
0001e6 15e8      	CP   R30,R8
0001e7 05f9      	CPC  R31,R9
0001e8 f48c      	BRGE _0x1E
                 ; 0000 0069              if(yes>prer_ugly[2]) kk=3;
                +
0001e9 e4a8     +LDI R26 , LOW ( _prer_ugly + ( 4 ) )
0001ea e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 4 ) )
                 	__POINTW2MN _prer_ugly,4
0001eb 940e 166d 	CALL __EEPROMRDW
0001ed 15e8      	CP   R30,R8
0001ee 05f9      	CPC  R31,R9
0001ef f41c      	BRGE _0x1F
0001f0 e0e3      	LDI  R30,LOW(3)
0001f1 e0f0      	LDI  R31,HIGH(3)
0001f2 c002      	RJMP _0x86
                 ; 0000 006A              else kk=2;
                 _0x1F:
0001f3 e0e2      	LDI  R30,LOW(2)
0001f4 e0f0      	LDI  R31,HIGH(2)
                 _0x86:
0001f5 93e0 028a 	STS  _kk,R30
0001f7 93f0 028b 	STS  _kk+1,R31
                 ; 0000 006B            else
0001f9 c013      	RJMP _0x21
                 _0x1E:
                 ; 0000 006C              if(yes>prer_ugly[0]) kk=1;
0001fa e4a4      	LDI  R26,LOW(_prer_ugly)
0001fb e0b0      	LDI  R27,HIGH(_prer_ugly)
0001fc 940e 166d 	CALL __EEPROMRDW
0001fe 15e8      	CP   R30,R8
0001ff 05f9      	CPC  R31,R9
000200 f43c      	BRGE _0x22
000201 e0e1      	LDI  R30,LOW(1)
000202 e0f0      	LDI  R31,HIGH(1)
000203 93e0 028a 	STS  _kk,R30
000205 93f0 028b 	STS  _kk+1,R31
                 ; 0000 006D              else kk=0;
000207 c005      	RJMP _0x23
                 _0x22:
000208 e0e0      	LDI  R30,LOW(0)
000209 93e0 028a 	STS  _kk,R30
00020b 93e0 028b 	STS  _kk+1,R30
                 ; 0000 006E 
                 ; 0000 006F          ob_y=yes;
                 _0x23:
                 _0x21:
                 _0x1D:
00020d 0164      	MOVW R12,R8
                 ; 0000 0070          oper=yes-((yes*percent[f][kk])/100);
00020e e0a2      	LDI  R26,LOW(_f)
00020f e0b0      	LDI  R27,HIGH(_f)
000210 940e 166d 	CALL __EEPROMRDW
000212 940e 15a3 	CALL __LSLW4
000214 5fec      	SUBI R30,LOW(-_percent)
000215 4fff      	SBCI R31,HIGH(-_percent)
000216 01df      	MOVW R26,R30
000217 91e0 028a 	LDS  R30,_kk
000219 91f0 028b 	LDS  R31,_kk+1
00021b 0fee      	LSL  R30
00021c 1fff      	ROL  R31
00021d 0fae      	ADD  R26,R30
00021e 1fbf      	ADC  R27,R31
00021f 940e 166d 	CALL __EEPROMRDW
000221 01d4      	MOVW R26,R8
000222 940e 15c4 	CALL __MULW12
000224 01df      	MOVW R26,R30
000225 e6e4      	LDI  R30,LOW(100)
000226 e0f0      	LDI  R31,HIGH(100)
000227 940e 15ef 	CALL __DIVW21
000229 01df      	MOVW R26,R30
00022a 01f4      	MOVW R30,R8
00022b 1bea      	SUB  R30,R26
00022c 0bfb      	SBC  R31,R27
00022d 013f      	MOVW R6,R30
                 ; 0000 0071          yes=oper;
00022e 0143      	MOVW R8,R6
                 ; 0000 0072          }
                 _0x15:
                 _0x11:
                 ; 0000 0073 //}
                 ; 0000 0074 }
00022f 91e9      	LD   R30,Y+
000230 bfef      	OUT  SREG,R30
000231 91f9      	LD   R31,Y+
000232 91e9      	LD   R30,Y+
000233 91b9      	LD   R27,Y+
000234 91a9      	LD   R26,Y+
000235 9199      	LD   R25,Y+
000236 9019      	LD   R1,Y+
000237 9009      	LD   R0,Y+
000238 9518      	RETI
                 ;
                 ;// Timer 1 overflow interrupt service routine
                 ;// 65536 - 62500 = 3036; 31250=
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0079 {
                 _timer1_ovf_isr:
000239 93aa      	ST   -Y,R26
00023a 93ba      	ST   -Y,R27
00023b 93ea      	ST   -Y,R30
00023c 93fa      	ST   -Y,R31
00023d b7ef      	IN   R30,SREG
00023e 93ea      	ST   -Y,R30
                 ; 0000 007A TCNT1=34000;   //34000
00023f ede0      	LDI  R30,LOW(34000)
000240 e8f4      	LDI  R31,HIGH(34000)
000241 bdfd      	OUT  0x2C+1,R31
000242 bdec      	OUT  0x2C,R30
                 ; 0000 007B sek++;
000243 e7ae      	LDI  R26,LOW(_sek)
000244 e0b2      	LDI  R27,HIGH(_sek)
000245 91ed      	LD   R30,X+
000246 91fd      	LD   R31,X+
000247 9631      	ADIW R30,1
000248 93fe      	ST   -X,R31
000249 93ee      	ST   -X,R30
                 ; 0000 007C }
00024a 91e9      	LD   R30,Y+
00024b bfef      	OUT  SREG,R30
00024c 91f9      	LD   R31,Y+
00024d 91e9      	LD   R30,Y+
00024e 91b9      	LD   R27,Y+
00024f 91a9      	LD   R26,Y+
000250 9518      	RETI
                 ;
                 ;// Timer 1 output compare A interrupt service routine
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
                 ; 0000 0080 {
                 _timer1_compa_isr:
                 ; 0000 0081 }
000251 9518      	RETI
                 ;
                 ;// Timer 1 output compare B interrupt service routine
                 ;interrupt [TIM1_COMPB] void timer1_compb_isr(void)
                 ; 0000 0085 {
                 _timer1_compb_isr:
                 ; 0000 0086 }
000252 9518      	RETI
                 ;
                 ;
                 ;void menu1(void)
                 ; 0000 008A {
                 _menu1:
                 ; 0000 008B         lcd_clear();
000253 940e 10d8 	CALL _lcd_clear
                 ; 0000 008C         sprintf(buffer,"  %dx",uoz_i); //
000255 e6e8      	LDI  R30,LOW(_buffer)
000256 e0f2      	LDI  R31,HIGH(_buffer)
000257 93fa      	ST   -Y,R31
000258 93ea      	ST   -Y,R30
                +
000259 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00025a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00025b 93fa      	ST   -Y,R31
00025c 93ea      	ST   -Y,R30
00025d 91e0 0278 	LDS  R30,_uoz_i
00025f 91f0 0279 	LDS  R31,_uoz_i+1
000261 940e 15b2 	CALL __CWD1
000263 940e 165b 	CALL __PUTPARD1
000265 e084      	LDI  R24,4
000266 940e 0f60 	CALL _sprintf
000268 9628      	ADIW R28,8
                 ; 0000 008D         lcd_puts(buffer);
000269 e6e8      	LDI  R30,LOW(_buffer)
00026a e0f2      	LDI  R31,HIGH(_buffer)
00026b 93fa      	ST   -Y,R31
00026c 93ea      	ST   -Y,R30
00026d 940e 110d 	CALL _lcd_puts
                 ; 0000 008E         sprintf(buffer,"%d",percent[f][7-uoz_i]);
00026f e6e8      	LDI  R30,LOW(_buffer)
000270 e0f2      	LDI  R31,HIGH(_buffer)
000271 93fa      	ST   -Y,R31
000272 93ea      	ST   -Y,R30
                +
000273 e9e4     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
000274 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000275 93fa      	ST   -Y,R31
000276 93ea      	ST   -Y,R30
000277 e0a2      	LDI  R26,LOW(_f)
000278 e0b0      	LDI  R27,HIGH(_f)
000279 940e 166d 	CALL __EEPROMRDW
00027b 940e 15a3 	CALL __LSLW4
00027d 5fec      	SUBI R30,LOW(-_percent)
00027e 4fff      	SBCI R31,HIGH(-_percent)
00027f 010f      	MOVW R0,R30
000280 91a0 0278 	LDS  R26,_uoz_i
000282 91b0 0279 	LDS  R27,_uoz_i+1
000284 e0e7      	LDI  R30,LOW(7)
000285 e0f0      	LDI  R31,HIGH(7)
000286 1bea      	SUB  R30,R26
000287 0bfb      	SBC  R31,R27
000288 01d0      	MOVW R26,R0
000289 0fee      	LSL  R30
00028a 1fff      	ROL  R31
00028b 0fae      	ADD  R26,R30
00028c 1fbf      	ADC  R27,R31
00028d 940e 166d 	CALL __EEPROMRDW
00028f 940e 15b2 	CALL __CWD1
000291 940e 165b 	CALL __PUTPARD1
000293 e084      	LDI  R24,4
000294 940e 0f60 	CALL _sprintf
000296 9628      	ADIW R28,8
                 ; 0000 008F         lcd_puts(buffer);
000297 e6e8      	LDI  R30,LOW(_buffer)
000298 e0f2      	LDI  R31,HIGH(_buffer)
000299 93fa      	ST   -Y,R31
00029a 93ea      	ST   -Y,R30
00029b 940e 110d 	CALL _lcd_puts
                 ; 0000 0090         lcd_puts("\x25");   // symbol %
                +
00029d e6e0     +LDI R30 , LOW ( _0x24 + ( 0 ) )
00029e e0f1     +LDI R31 , HIGH ( _0x24 + ( 0 ) )
                 	__POINTW1MN _0x24,0
00029f 93fa      	ST   -Y,R31
0002a0 93ea      	ST   -Y,R30
0002a1 940e 110d 	CALL _lcd_puts
                 ; 0000 0091         lcd_gotoxy(0,1);
0002a3 e0e0      	LDI  R30,LOW(0)
0002a4 93ea      	ST   -Y,R30
0002a5 e0e1      	LDI  R30,LOW(1)
0002a6 93ea      	ST   -Y,R30
0002a7 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 0092         lcd_puts("<2 3> 4\x7E");
                +
0002a9 e6e2     +LDI R30 , LOW ( _0x24 + ( 2 ) )
0002aa e0f1     +LDI R31 , HIGH ( _0x24 + ( 2 ) )
                 	__POINTW1MN _0x24,2
0002ab 93fa      	ST   -Y,R31
0002ac 93ea      	ST   -Y,R30
0002ad 940e 110d 	CALL _lcd_puts
                 ; 0000 0093 
                 ; 0000 0094 
                 ; 0000 0095         ////  sprintf(buffer,"%.0f\x27",UOZ_proc[8-uoz_i]); // вывод вещественного числа на экран
                 ; 0000 0096 }
0002af 9508      	RET
                 
                 	.DSEG
                 _0x24:
000160           	.BYTE 0xB
                 ;
                 ;void menu2(void)
                 ; 0000 0099 {       lcd_gotoxy(0,0);
                 
                 	.CSEG
                 _menu2:
0002b0 e0e0      	LDI  R30,LOW(0)
0002b1 93ea      	ST   -Y,R30
0002b2 93ea      	ST   -Y,R30
0002b3 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 009A           //New:
                 ; 0000 009B         sprintf(buffer,"\xA5\xB7\xBC. %d",percent[f][7-uoz_i]);
0002b5 e6e8      	LDI  R30,LOW(_buffer)
0002b6 e0f2      	LDI  R31,HIGH(_buffer)
0002b7 93fa      	ST   -Y,R31
0002b8 93ea      	ST   -Y,R30
                +
0002b9 eae2     +LDI R30 , LOW ( 2 * _0x0 + ( 20 ) )
0002ba e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW1FN _0x0,20
0002bb 93fa      	ST   -Y,R31
0002bc 93ea      	ST   -Y,R30
0002bd e0a2      	LDI  R26,LOW(_f)
0002be e0b0      	LDI  R27,HIGH(_f)
0002bf 940e 166d 	CALL __EEPROMRDW
0002c1 940e 15a3 	CALL __LSLW4
0002c3 5fec      	SUBI R30,LOW(-_percent)
0002c4 4fff      	SBCI R31,HIGH(-_percent)
0002c5 010f      	MOVW R0,R30
0002c6 91a0 0278 	LDS  R26,_uoz_i
0002c8 91b0 0279 	LDS  R27,_uoz_i+1
0002ca e0e7      	LDI  R30,LOW(7)
0002cb e0f0      	LDI  R31,HIGH(7)
0002cc 1bea      	SUB  R30,R26
0002cd 0bfb      	SBC  R31,R27
0002ce 01d0      	MOVW R26,R0
0002cf 0fee      	LSL  R30
0002d0 1fff      	ROL  R31
0002d1 0fae      	ADD  R26,R30
0002d2 1fbf      	ADC  R27,R31
0002d3 940e 166d 	CALL __EEPROMRDW
0002d5 940e 15b2 	CALL __CWD1
0002d7 940e 165b 	CALL __PUTPARD1
0002d9 e084      	LDI  R24,4
0002da 940e 0f60 	CALL _sprintf
0002dc 9628      	ADIW R28,8
                 ; 0000 009C         lcd_puts(buffer);
0002dd e6e8      	LDI  R30,LOW(_buffer)
0002de e0f2      	LDI  R31,HIGH(_buffer)
0002df 93fa      	ST   -Y,R31
0002e0 93ea      	ST   -Y,R30
0002e1 940e 110d 	CALL _lcd_puts
                 ; 0000 009D         lcd_puts("\x25 ");   // symbol %
                +
0002e3 e6eb     +LDI R30 , LOW ( _0x25 + ( 0 ) )
0002e4 e0f1     +LDI R31 , HIGH ( _0x25 + ( 0 ) )
                 	__POINTW1MN _0x25,0
0002e5 93fa      	ST   -Y,R31
0002e6 93ea      	ST   -Y,R30
0002e7 940e 110d 	CALL _lcd_puts
                 ; 0000 009E         lcd_gotoxy(0,1);
0002e9 e0e0      	LDI  R30,LOW(0)
0002ea 93ea      	ST   -Y,R30
0002eb e0e1      	LDI  R30,LOW(1)
0002ec 93ea      	ST   -Y,R30
0002ed 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 009F         lcd_puts("< 2  3 >");
                +
0002ef e6ee     +LDI R30 , LOW ( _0x25 + ( 3 ) )
0002f0 e0f1     +LDI R31 , HIGH ( _0x25 + ( 3 ) )
                 	__POINTW1MN _0x25,3
0002f1 93fa      	ST   -Y,R31
0002f2 93ea      	ST   -Y,R30
0002f3 940e 110d 	CALL _lcd_puts
                 ; 0000 00A0         delay_ms(20);
0002f5 e1e4      	LDI  R30,LOW(20)
0002f6 e0f0      	LDI  R31,HIGH(20)
0002f7 c06a      	RJMP _0x20E000A
                 ; 0000 00A1 
                 ; 0000 00A2 }
                 
                 	.DSEG
                 _0x25:
00016b           	.BYTE 0xC
                 ;
                 ;void menu_temp(void)
                 ; 0000 00A5 {
                 
                 	.CSEG
                 _menu_temp:
                 ; 0000 00A6 
                 ; 0000 00A7         lcd_puts("   \xF7    ");
                +
0002f8 e7e7     +LDI R30 , LOW ( _0x26 + ( 0 ) )
0002f9 e0f1     +LDI R31 , HIGH ( _0x26 + ( 0 ) )
                 	__POINTW1MN _0x26,0
0002fa 93fa      	ST   -Y,R31
0002fb 93ea      	ST   -Y,R30
0002fc 940e 110d 	CALL _lcd_puts
                 ; 0000 00A8 
                 ; 0000 00A9         if (temp1>1000)                   //если датчик 1 выдает больше 1000
0002fe 91a0 0282 	LDS  R26,_temp1
000300 91b0 0283 	LDS  R27,_temp1+1
000302 3ea9      	CPI  R26,LOW(0x3E9)
000303 e0e3      	LDI  R30,HIGH(0x3E9)
000304 07be      	CPC  R27,R30
000305 f064      	BRLT _0x27
                 ; 0000 00AA           temp1=(-1)*(4096-temp1);        //отнимем от данных 4096 и ставим знак "минус"
000306 e0e0      	LDI  R30,LOW(4096)
000307 e1f0      	LDI  R31,HIGH(4096)
000308 1bea      	SUB  R30,R26
000309 0bfb      	SBC  R31,R27
00030a efaf      	LDI  R26,LOW(65535)
00030b efbf      	LDI  R27,HIGH(65535)
00030c 940e 15c4 	CALL __MULW12
00030e 93e0 0282 	STS  _temp1,R30
000310 93f0 0283 	STS  _temp1+1,R31
                 ; 0000 00AB 
                 ; 0000 00AC 
                 ; 0000 00AD         sprintf(buffer,"%d\x27",temp1);
                 _0x27:
000312 e6e8      	LDI  R30,LOW(_buffer)
000313 e0f2      	LDI  R31,HIGH(_buffer)
000314 93fa      	ST   -Y,R31
000315 93ea      	ST   -Y,R30
                +
000316 ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 49 ) )
000317 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 49 ) )
                 	__POINTW1FN _0x0,49
000318 93fa      	ST   -Y,R31
000319 93ea      	ST   -Y,R30
00031a 91e0 0282 	LDS  R30,_temp1
00031c 91f0 0283 	LDS  R31,_temp1+1
00031e 940e 15b2 	CALL __CWD1
000320 940e 165b 	CALL __PUTPARD1
000322 e084      	LDI  R24,4
000323 940e 0f60 	CALL _sprintf
000325 9628      	ADIW R28,8
                 ; 0000 00AE         lcd_puts(buffer);
000326 e6e8      	LDI  R30,LOW(_buffer)
000327 e0f2      	LDI  R31,HIGH(_buffer)
000328 93fa      	ST   -Y,R31
000329 93ea      	ST   -Y,R30
00032a 940e 110d 	CALL _lcd_puts
                 ; 0000 00AF 
                 ; 0000 00B0 
                 ; 0000 00B1 
                 ; 0000 00B2         if (temp2>1000)                   //если датчик 2 выдает больше 1000
00032c 91a0 0284 	LDS  R26,_temp2
00032e 91b0 0285 	LDS  R27,_temp2+1
000330 3ea9      	CPI  R26,LOW(0x3E9)
000331 e0e3      	LDI  R30,HIGH(0x3E9)
000332 07be      	CPC  R27,R30
000333 f064      	BRLT _0x28
                 ; 0000 00B3           temp2=(-1)*(4096-temp2);        //отнимем от данных 4096 и ставим знак "минус"
000334 e0e0      	LDI  R30,LOW(4096)
000335 e1f0      	LDI  R31,HIGH(4096)
000336 1bea      	SUB  R30,R26
000337 0bfb      	SBC  R31,R27
000338 efaf      	LDI  R26,LOW(65535)
000339 efbf      	LDI  R27,HIGH(65535)
00033a 940e 15c4 	CALL __MULW12
00033c 93e0 0284 	STS  _temp2,R30
00033e 93f0 0285 	STS  _temp2+1,R31
                 ; 0000 00B4 
                 ; 0000 00B5 
                 ; 0000 00B6         lcd_gotoxy(5,1);
                 _0x28:
000340 e0e5      	LDI  R30,LOW(5)
000341 93ea      	ST   -Y,R30
000342 e0e1      	LDI  R30,LOW(1)
000343 93ea      	ST   -Y,R30
000344 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 00B7         sprintf(buffer,"%d\x27",temp2);
000346 e6e8      	LDI  R30,LOW(_buffer)
000347 e0f2      	LDI  R31,HIGH(_buffer)
000348 93fa      	ST   -Y,R31
000349 93ea      	ST   -Y,R30
                +
00034a ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 49 ) )
00034b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 49 ) )
                 	__POINTW1FN _0x0,49
00034c 93fa      	ST   -Y,R31
00034d 93ea      	ST   -Y,R30
00034e 91e0 0284 	LDS  R30,_temp2
000350 91f0 0285 	LDS  R31,_temp2+1
000352 940e 15b2 	CALL __CWD1
000354 940e 165b 	CALL __PUTPARD1
000356 e084      	LDI  R24,4
000357 940e 0f60 	CALL _sprintf
000359 9628      	ADIW R28,8
                 ; 0000 00B8         lcd_puts(buffer);
00035a e6e8      	LDI  R30,LOW(_buffer)
00035b e0f2      	LDI  R31,HIGH(_buffer)
00035c 93fa      	ST   -Y,R31
00035d 93ea      	ST   -Y,R30
00035e 940e 110d 	CALL _lcd_puts
                 ; 0000 00B9 
                 ; 0000 00BA         delay_ms(1000);
000360 eee8      	LDI  R30,LOW(1000)
000361 e0f3      	LDI  R31,HIGH(1000)
                 _0x20E000A:
000362 93fa      	ST   -Y,R31
000363 93ea      	ST   -Y,R30
000364 940e 1305 	CALL _delay_ms
                 ; 0000 00BB 
                 ; 0000 00BC }
000366 9508      	RET
                 
                 	.DSEG
                 _0x26:
000177           	.BYTE 0x9
                 ;
                 ;void default_set (void)
                 ; 0000 00BF {
                 
                 	.CSEG
                 _default_set:
                 ; 0000 00C0 
                 ; 0000 00C1  //таблица времени прохода шторки в прерываниях
                 ; 0000 00C2 
                 ; 0000 00C3  prer_ugly[0]=60;
000367 e4a4      	LDI  R26,LOW(_prer_ugly)
000368 e0b0      	LDI  R27,HIGH(_prer_ugly)
000369 e3ec      	LDI  R30,LOW(60)
00036a e0f0      	LDI  R31,HIGH(60)
00036b 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00C4  prer_ugly[1]=69;
                +
00036d e4a6     +LDI R26 , LOW ( _prer_ugly + ( 2 ) )
00036e e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 2 ) )
                 	__POINTW2MN _prer_ugly,2
00036f e4e5      	LDI  R30,LOW(69)
000370 e0f0      	LDI  R31,HIGH(69)
000371 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00C5  prer_ugly[2]=80;
                +
000373 e4a8     +LDI R26 , LOW ( _prer_ugly + ( 4 ) )
000374 e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 4 ) )
                 	__POINTW2MN _prer_ugly,4
000375 e5e0      	LDI  R30,LOW(80)
000376 e0f0      	LDI  R31,HIGH(80)
000377 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00C6  prer_ugly[3]=96;
                +
000379 e4aa     +LDI R26 , LOW ( _prer_ugly + ( 6 ) )
00037a e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 6 ) )
                 	__POINTW2MN _prer_ugly,6
00037b e6e0      	LDI  R30,LOW(96)
00037c e0f0      	LDI  R31,HIGH(96)
00037d 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00C7  prer_ugly[4]=120;
                +
00037f e4ac     +LDI R26 , LOW ( _prer_ugly + ( 8 ) )
000380 e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 8 ) )
                 	__POINTW2MN _prer_ugly,8
000381 e7e8      	LDI  R30,LOW(120)
000382 e0f0      	LDI  R31,HIGH(120)
000383 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00C8  prer_ugly[5]=160;
                +
000385 e4ae     +LDI R26 , LOW ( _prer_ugly + ( 10 ) )
000386 e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 10 ) )
                 	__POINTW2MN _prer_ugly,10
000387 eae0      	LDI  R30,LOW(160)
000388 e0f0      	LDI  R31,HIGH(160)
000389 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00C9  prer_ugly[6]=240;
                +
00038b e5a0     +LDI R26 , LOW ( _prer_ugly + ( 12 ) )
00038c e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 12 ) )
                 	__POINTW2MN _prer_ugly,12
00038d efe0      	LDI  R30,LOW(240)
00038e e0f0      	LDI  R31,HIGH(240)
00038f 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00CA  prer_ugly[7]=480;
                +
000391 e5a2     +LDI R26 , LOW ( _prer_ugly + ( 14 ) )
000392 e0b0     +LDI R27 , HIGH ( _prer_ugly + ( 14 ) )
                 	__POINTW2MN _prer_ugly,14
000393 eee0      	LDI  R30,LOW(480)
000394 e0f1      	LDI  R31,HIGH(480)
000395 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00CB 
                 ; 0000 00CC 
                 ; 0000 00CD  // таблица процентов опережения
                 ; 0000 00CE  percent[0][0]=98;  percent[1][0]=62;  percent[2][0]=58;   percent[3][0]=68;   // от 7000 до 8000 об/мин
000397 e0a4      	LDI  R26,LOW(_percent)
000398 e0b0      	LDI  R27,HIGH(_percent)
000399 e6e2      	LDI  R30,LOW(98)
00039a e0f0      	LDI  R31,HIGH(98)
00039b 940e 167d 	CALL __EEPROMWRW
                +
00039d e1a4     +LDI R26 , LOW ( _percent + ( 16 ) )
00039e e0b0     +LDI R27 , HIGH ( _percent + ( 16 ) )
                 	__POINTW2MN _percent,16
00039f e3ee      	LDI  R30,LOW(62)
0003a0 e0f0      	LDI  R31,HIGH(62)
0003a1 940e 167d 	CALL __EEPROMWRW
                +
0003a3 e2a4     +LDI R26 , LOW ( _percent + ( 32 ) )
0003a4 e0b0     +LDI R27 , HIGH ( _percent + ( 32 ) )
                 	__POINTW2MN _percent,32
0003a5 e3ea      	LDI  R30,LOW(58)
0003a6 e0f0      	LDI  R31,HIGH(58)
0003a7 940e 167d 	CALL __EEPROMWRW
                +
0003a9 e3a4     +LDI R26 , LOW ( _percent + ( 48 ) )
0003aa e0b0     +LDI R27 , HIGH ( _percent + ( 48 ) )
                 	__POINTW2MN _percent,48
0003ab e4e4      	LDI  R30,LOW(68)
0003ac e0f0      	LDI  R31,HIGH(68)
0003ad 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00CF  percent[0][1]=98;  percent[1][1]=60;  percent[2][1]=57;   percent[3][1]=68;   // от 6000 до 7000 об/мин
                +
0003af e0a6     +LDI R26 , LOW ( _percent + ( 2 ) )
0003b0 e0b0     +LDI R27 , HIGH ( _percent + ( 2 ) )
                 	__POINTW2MN _percent,2
0003b1 e6e2      	LDI  R30,LOW(98)
0003b2 e0f0      	LDI  R31,HIGH(98)
0003b3 940e 167d 	CALL __EEPROMWRW
                +
0003b5 e1a6     +LDI R26 , LOW ( _percent + ( 18 ) )
0003b6 e0b0     +LDI R27 , HIGH ( _percent + ( 18 ) )
                 	__POINTW2MN _percent,18
0003b7 e3ec      	LDI  R30,LOW(60)
0003b8 e0f0      	LDI  R31,HIGH(60)
0003b9 940e 167d 	CALL __EEPROMWRW
                +
0003bb e2a6     +LDI R26 , LOW ( _percent + ( 34 ) )
0003bc e0b0     +LDI R27 , HIGH ( _percent + ( 34 ) )
                 	__POINTW2MN _percent,34
0003bd e3e9      	LDI  R30,LOW(57)
0003be e0f0      	LDI  R31,HIGH(57)
0003bf 940e 167d 	CALL __EEPROMWRW
                +
0003c1 e3a6     +LDI R26 , LOW ( _percent + ( 50 ) )
0003c2 e0b0     +LDI R27 , HIGH ( _percent + ( 50 ) )
                 	__POINTW2MN _percent,50
0003c3 e4e4      	LDI  R30,LOW(68)
0003c4 e0f0      	LDI  R31,HIGH(68)
0003c5 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00D0  percent[0][2]=98;  percent[1][2]=59;  percent[2][2]=54;   percent[3][2]=65;   // от 5000 до 6000 об/мин
                +
0003c7 e0a8     +LDI R26 , LOW ( _percent + ( 4 ) )
0003c8 e0b0     +LDI R27 , HIGH ( _percent + ( 4 ) )
                 	__POINTW2MN _percent,4
0003c9 e6e2      	LDI  R30,LOW(98)
0003ca e0f0      	LDI  R31,HIGH(98)
0003cb 940e 167d 	CALL __EEPROMWRW
                +
0003cd e1a8     +LDI R26 , LOW ( _percent + ( 20 ) )
0003ce e0b0     +LDI R27 , HIGH ( _percent + ( 20 ) )
                 	__POINTW2MN _percent,20
0003cf e3eb      	LDI  R30,LOW(59)
0003d0 e0f0      	LDI  R31,HIGH(59)
0003d1 940e 167d 	CALL __EEPROMWRW
                +
0003d3 e2a8     +LDI R26 , LOW ( _percent + ( 36 ) )
0003d4 e0b0     +LDI R27 , HIGH ( _percent + ( 36 ) )
                 	__POINTW2MN _percent,36
0003d5 e3e6      	LDI  R30,LOW(54)
0003d6 e0f0      	LDI  R31,HIGH(54)
0003d7 940e 167d 	CALL __EEPROMWRW
                +
0003d9 e3a8     +LDI R26 , LOW ( _percent + ( 52 ) )
0003da e0b0     +LDI R27 , HIGH ( _percent + ( 52 ) )
                 	__POINTW2MN _percent,52
0003db e4e1      	LDI  R30,LOW(65)
0003dc e0f0      	LDI  R31,HIGH(65)
0003dd 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00D1  percent[0][3]=98;  percent[1][3]=55;  percent[2][3]=52;   percent[3][3]=54;   // от 4000 до 5000 об/мин
                +
0003df e0aa     +LDI R26 , LOW ( _percent + ( 6 ) )
0003e0 e0b0     +LDI R27 , HIGH ( _percent + ( 6 ) )
                 	__POINTW2MN _percent,6
0003e1 e6e2      	LDI  R30,LOW(98)
0003e2 e0f0      	LDI  R31,HIGH(98)
0003e3 940e 167d 	CALL __EEPROMWRW
                +
0003e5 e1aa     +LDI R26 , LOW ( _percent + ( 22 ) )
0003e6 e0b0     +LDI R27 , HIGH ( _percent + ( 22 ) )
                 	__POINTW2MN _percent,22
0003e7 e3e7      	LDI  R30,LOW(55)
0003e8 e0f0      	LDI  R31,HIGH(55)
0003e9 940e 167d 	CALL __EEPROMWRW
                +
0003eb e2aa     +LDI R26 , LOW ( _percent + ( 38 ) )
0003ec e0b0     +LDI R27 , HIGH ( _percent + ( 38 ) )
                 	__POINTW2MN _percent,38
0003ed e3e4      	LDI  R30,LOW(52)
0003ee e0f0      	LDI  R31,HIGH(52)
0003ef 940e 167d 	CALL __EEPROMWRW
                +
0003f1 e3aa     +LDI R26 , LOW ( _percent + ( 54 ) )
0003f2 e0b0     +LDI R27 , HIGH ( _percent + ( 54 ) )
                 	__POINTW2MN _percent,54
0003f3 e3e6      	LDI  R30,LOW(54)
0003f4 e0f0      	LDI  R31,HIGH(54)
0003f5 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00D2  percent[0][4]=98;  percent[1][4]=50;  percent[2][4]=49;   percent[3][4]=49;   // от 3000 до 4000 об/мин
                +
0003f7 e0ac     +LDI R26 , LOW ( _percent + ( 8 ) )
0003f8 e0b0     +LDI R27 , HIGH ( _percent + ( 8 ) )
                 	__POINTW2MN _percent,8
0003f9 e6e2      	LDI  R30,LOW(98)
0003fa e0f0      	LDI  R31,HIGH(98)
0003fb 940e 167d 	CALL __EEPROMWRW
                +
0003fd e1ac     +LDI R26 , LOW ( _percent + ( 24 ) )
0003fe e0b0     +LDI R27 , HIGH ( _percent + ( 24 ) )
                 	__POINTW2MN _percent,24
0003ff e3e2      	LDI  R30,LOW(50)
000400 e0f0      	LDI  R31,HIGH(50)
000401 940e 167d 	CALL __EEPROMWRW
                +
000403 e2ac     +LDI R26 , LOW ( _percent + ( 40 ) )
000404 e0b0     +LDI R27 , HIGH ( _percent + ( 40 ) )
                 	__POINTW2MN _percent,40
000405 e3e1      	LDI  R30,LOW(49)
000406 e0f0      	LDI  R31,HIGH(49)
000407 940e 167d 	CALL __EEPROMWRW
                +
000409 e3ac     +LDI R26 , LOW ( _percent + ( 56 ) )
00040a e0b0     +LDI R27 , HIGH ( _percent + ( 56 ) )
                 	__POINTW2MN _percent,56
00040b 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00D3  percent[0][5]=98;  percent[1][5]=19;  percent[2][5]=48;   percent[3][5]=48;   // от 2000 до 3000 об/мин
                +
00040d e0ae     +LDI R26 , LOW ( _percent + ( 10 ) )
00040e e0b0     +LDI R27 , HIGH ( _percent + ( 10 ) )
                 	__POINTW2MN _percent,10
00040f e6e2      	LDI  R30,LOW(98)
000410 e0f0      	LDI  R31,HIGH(98)
000411 940e 167d 	CALL __EEPROMWRW
                +
000413 e1ae     +LDI R26 , LOW ( _percent + ( 26 ) )
000414 e0b0     +LDI R27 , HIGH ( _percent + ( 26 ) )
                 	__POINTW2MN _percent,26
000415 e1e3      	LDI  R30,LOW(19)
000416 e0f0      	LDI  R31,HIGH(19)
000417 940e 167d 	CALL __EEPROMWRW
                +
000419 e2ae     +LDI R26 , LOW ( _percent + ( 42 ) )
00041a e0b0     +LDI R27 , HIGH ( _percent + ( 42 ) )
                 	__POINTW2MN _percent,42
00041b e3e0      	LDI  R30,LOW(48)
00041c e0f0      	LDI  R31,HIGH(48)
00041d 940e 167d 	CALL __EEPROMWRW
                +
00041f e3ae     +LDI R26 , LOW ( _percent + ( 58 ) )
000420 e0b0     +LDI R27 , HIGH ( _percent + ( 58 ) )
                 	__POINTW2MN _percent,58
000421 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00D4  percent[0][6]=98;  percent[1][6]=5;   percent[2][6]=18;   percent[3][6]=18;   // от 1000 до 2000 об/мин
                +
000423 e1a0     +LDI R26 , LOW ( _percent + ( 12 ) )
000424 e0b0     +LDI R27 , HIGH ( _percent + ( 12 ) )
                 	__POINTW2MN _percent,12
000425 e6e2      	LDI  R30,LOW(98)
000426 e0f0      	LDI  R31,HIGH(98)
000427 940e 167d 	CALL __EEPROMWRW
                +
000429 e2a0     +LDI R26 , LOW ( _percent + ( 28 ) )
00042a e0b0     +LDI R27 , HIGH ( _percent + ( 28 ) )
                 	__POINTW2MN _percent,28
00042b e0e5      	LDI  R30,LOW(5)
00042c e0f0      	LDI  R31,HIGH(5)
00042d 940e 167d 	CALL __EEPROMWRW
                +
00042f e3a0     +LDI R26 , LOW ( _percent + ( 44 ) )
000430 e0b0     +LDI R27 , HIGH ( _percent + ( 44 ) )
                 	__POINTW2MN _percent,44
000431 e1e2      	LDI  R30,LOW(18)
000432 e0f0      	LDI  R31,HIGH(18)
000433 940e 167d 	CALL __EEPROMWRW
                +
000435 e4a0     +LDI R26 , LOW ( _percent + ( 60 ) )
000436 e0b0     +LDI R27 , HIGH ( _percent + ( 60 ) )
                 	__POINTW2MN _percent,60
000437 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00D5  percent[0][7]=0;   percent[1][7]=0;   percent[2][7]=0;    percent[3][7]=0;    // от 0 до 1000 об/мин
                +
000439 e1a2     +LDI R26 , LOW ( _percent + ( 14 ) )
00043a e0b0     +LDI R27 , HIGH ( _percent + ( 14 ) )
                 	__POINTW2MN _percent,14
00043b e0e0      	LDI  R30,LOW(0)
00043c e0f0      	LDI  R31,HIGH(0)
00043d 940e 167d 	CALL __EEPROMWRW
                +
00043f e2a2     +LDI R26 , LOW ( _percent + ( 30 ) )
000440 e0b0     +LDI R27 , HIGH ( _percent + ( 30 ) )
                 	__POINTW2MN _percent,30
000441 940e 167d 	CALL __EEPROMWRW
                +
000443 e3a2     +LDI R26 , LOW ( _percent + ( 46 ) )
000444 e0b0     +LDI R27 , HIGH ( _percent + ( 46 ) )
                 	__POINTW2MN _percent,46
000445 940e 167d 	CALL __EEPROMWRW
                +
000447 e4a2     +LDI R26 , LOW ( _percent + ( 62 ) )
000448 e0b0     +LDI R27 , HIGH ( _percent + ( 62 ) )
                 	__POINTW2MN _percent,62
000449 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00D6                                                                                // послеждний столбец активируется при режиме "без ФУОЗ"
                 ; 0000 00D7 
                 ; 0000 00D8  f=0;
00044b e0a2      	LDI  R26,LOW(_f)
00044c e0b0      	LDI  R27,HIGH(_f)
00044d 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00D9  temp_f=4;
00044f e0a0      	LDI  R26,LOW(_temp_f)
000450 e0b0      	LDI  R27,HIGH(_temp_f)
000451 e0e4      	LDI  R30,LOW(4)
000452 e0f0      	LDI  R31,HIGH(4)
000453 940e 167d 	CALL __EEPROMWRW
                 ; 0000 00DA }
000455 9508      	RET
                 ;
                 ;
                 ;void main(void)
                 ; 0000 00DE {
                 _main:
                 ; 0000 00DF // Declare your local variables here
                 ; 0000 00E0 
                 ; 0000 00E1 
                 ; 0000 00E2 PORTA=0xff;
000456 efef      	LDI  R30,LOW(255)
000457 bbeb      	OUT  0x1B,R30
                 ; 0000 00E3 DDRA=0x00;             // В новом, PORTA.6 - это вход инфракрасного датчика
000458 e0e0      	LDI  R30,LOW(0)
000459 bbea      	OUT  0x1A,R30
                 ; 0000 00E4 
                 ; 0000 00E5 PORTB=0x00;
00045a bbe8      	OUT  0x18,R30
                 ; 0000 00E6 DDRB=0xFF;
00045b efef      	LDI  R30,LOW(255)
00045c bbe7      	OUT  0x17,R30
                 ; 0000 00E7 
                 ; 0000 00E8 PORTC=0x00;
00045d e0e0      	LDI  R30,LOW(0)
00045e bbe5      	OUT  0x15,R30
                 ; 0000 00E9 DDRC=0xFF;
00045f efef      	LDI  R30,LOW(255)
000460 bbe4      	OUT  0x14,R30
                 ; 0000 00EA 
                 ; 0000 00EB PORTD=0b10110111;
000461 ebe7      	LDI  R30,LOW(183)
000462 bbe2      	OUT  0x12,R30
                 ; 0000 00EC  DDRD=0b11001000;  //   старый :DDRD=0b11000000; !!!  В новом, PORTD.3 - это выход на зажигание.
000463 ece8      	LDI  R30,LOW(200)
000464 bbe1      	OUT  0x11,R30
                 ; 0000 00ED 
                 ; 0000 00EE // Timer/Counter 0 initialization
                 ; 0000 00EF // Clock source: System Clock
                 ; 0000 00F0 // Clock value: 16000,000 kHz
                 ; 0000 00F1 // Mode: Normal top=FFh
                 ; 0000 00F2 // OC0 output: Disconnected
                 ; 0000 00F3 TCCR0=0x01;
000465 e0e1      	LDI  R30,LOW(1)
000466 bfe3      	OUT  0x33,R30
                 ; 0000 00F4 TCNT0=0x05;
000467 e0e5      	LDI  R30,LOW(5)
000468 bfe2      	OUT  0x32,R30
                 ; 0000 00F5 OCR0=0x00;
000469 e0e0      	LDI  R30,LOW(0)
00046a bfec      	OUT  0x3C,R30
                 ; 0000 00F6 
                 ; 0000 00F7 // Timer/Counter 1 initialization
                 ; 0000 00F8 // Clock source: System Clock
                 ; 0000 00F9 // Clock value: 62,500 kHz
                 ; 0000 00FA // Mode: Normal top=0xFFFF
                 ; 0000 00FB // OC1A output: Discon.
                 ; 0000 00FC // OC1B output: Discon.
                 ; 0000 00FD // Noise Canceler: Off
                 ; 0000 00FE // Input Capture on Falling Edge
                 ; 0000 00FF // Timer1 Overflow Interrupt: On
                 ; 0000 0100 // Input Capture Interrupt: Off
                 ; 0000 0101 // Compare A Match Interrupt: Off
                 ; 0000 0102 // Compare B Match Interrupt: Off
                 ; 0000 0103 TCCR1A=0x00;
00046b bdef      	OUT  0x2F,R30
                 ; 0000 0104 TCCR1B=0x04;
00046c e0e4      	LDI  R30,LOW(4)
00046d bdee      	OUT  0x2E,R30
                 ; 0000 0105 TCNT1H=0x00;
00046e e0e0      	LDI  R30,LOW(0)
00046f bded      	OUT  0x2D,R30
                 ; 0000 0106 TCNT1L=0x00;
000470 bdec      	OUT  0x2C,R30
                 ; 0000 0107 ICR1H=0x00;
000471 bde7      	OUT  0x27,R30
                 ; 0000 0108 ICR1L=0x00;
000472 bde6      	OUT  0x26,R30
                 ; 0000 0109 OCR1AH=0x00;
000473 bdeb      	OUT  0x2B,R30
                 ; 0000 010A OCR1AL=0x00;
000474 bdea      	OUT  0x2A,R30
                 ; 0000 010B OCR1BH=0x00;
000475 bde9      	OUT  0x29,R30
                 ; 0000 010C OCR1BL=0x00;
000476 bde8      	OUT  0x28,R30
                 ; 0000 010D 
                 ; 0000 010E 
                 ; 0000 010F // Timer/Counter 2 initialization
                 ; 0000 0110 // Clock source: System Clock
                 ; 0000 0111 // Clock value: Timer2 Stopped
                 ; 0000 0112 // Mode: Normal top=0xFF
                 ; 0000 0113 // OC2 output: Disconnected
                 ; 0000 0114 ASSR=0x00;
000477 bde2      	OUT  0x22,R30
                 ; 0000 0115 TCCR2=0x00;
000478 bde5      	OUT  0x25,R30
                 ; 0000 0116 TCNT2=0x00;
000479 bde4      	OUT  0x24,R30
                 ; 0000 0117 OCR2=0x00;
00047a bde3      	OUT  0x23,R30
                 ; 0000 0118 
                 ; 0000 0119 
                 ; 0000 011A // External Interrupt(s) initialization
                 ; 0000 011B // INT0: On
                 ; 0000 011C // INT0 Mode: Rising Edge
                 ; 0000 011D // INT1: Off
                 ; 0000 011E // INT2: Off
                 ; 0000 011F //GICR|=0x40;         /* Регистр General Interrupt Control Register разрешает внешние прерывания
                 ; 0000 0120 //                                      10 000000 - по выводу int1;
                 ; 0000 0121 //                                      01 000000 - по выводу into;
                 ; 0000 0122 //                                      11 000000 - по обоим выводам */
                 ; 0000 0123 //
                 ; 0000 0124 //MCUCR=0x03;          /* Регистр Micro Controller Unit Control Registr настраивает прерывание на срабатывание:
                 ; 0000 0125 //                                           0000 10 00 - по спадающему фронту сигнала на выводе int1;
                 ; 0000 0126 //                                           0000 11 00 - по нарастающему фронту сигнала на выводе int1;
                 ; 0000 0127 //                                           0000 00 00 - по низкому уровню на выводе int1;
                 ; 0000 0128 //                                           0000 01 00 - по любому изменению уровня на выводе int1 */
                 ; 0000 0129 
                 ; 0000 012A MCUCR=0x00;
00047b bfe5      	OUT  0x35,R30
                 ; 0000 012B MCUCSR=0x00;
00047c bfe4      	OUT  0x34,R30
                 ; 0000 012C 
                 ; 0000 012D // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 012E TIMSK=0x1D;
00047d e1ed      	LDI  R30,LOW(29)
00047e bfe9      	OUT  0x39,R30
                 ; 0000 012F // Analog Comparator initialization
                 ; 0000 0130 // Analog Comparator: Off
                 ; 0000 0131 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0132 ACSR=0x80;
00047f e8e0      	LDI  R30,LOW(128)
000480 b9e8      	OUT  0x8,R30
                 ; 0000 0133 SFIOR=0x00;
000481 e0e0      	LDI  R30,LOW(0)
000482 bfe0      	OUT  0x30,R30
                 ; 0000 0134 
                 ; 0000 0135 
                 ; 0000 0136 
                 ; 0000 0137 lcd_init(8);             // инициализация дисплея
000483 e0e8      	LDI  R30,LOW(8)
000484 93ea      	ST   -Y,R30
000485 940e 112b 	CALL _lcd_init
                 ; 0000 0138 lcd_clear();
000487 940e 10d8 	CALL _lcd_clear
                 ; 0000 0139 
                 ; 0000 013A for(i=0;i<8;i++)
000489 e0e0      	LDI  R30,LOW(0)
00048a 93e0 0288 	STS  _i,R30
00048c 93e0 0289 	STS  _i+1,R30
                 _0x2A:
00048e 91a0 0288 	LDS  R26,_i
000490 91b0 0289 	LDS  R27,_i+1
000492 9718      	SBIW R26,8
000493 f544      	BRGE _0x2B
                 ; 0000 013B {
                 ; 0000 013C lcd_gotoxy(i,0);
000494 91e0 0288 	LDS  R30,_i
000496 93ea      	ST   -Y,R30
000497 e0e0      	LDI  R30,LOW(0)
000498 93ea      	ST   -Y,R30
000499 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 013D lcd_putsf("\xFF");
                +
00049b ece3     +LDI R30 , LOW ( 2 * _0x0 + ( 53 ) )
00049c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 53 ) )
                 	__POINTW1FN _0x0,53
00049d 93fa      	ST   -Y,R31
00049e 93ea      	ST   -Y,R30
00049f 940e 111a 	CALL _lcd_putsf
                 ; 0000 013E lcd_gotoxy(i,1);
0004a1 91e0 0288 	LDS  R30,_i
0004a3 93ea      	ST   -Y,R30
0004a4 e0e1      	LDI  R30,LOW(1)
0004a5 93ea      	ST   -Y,R30
0004a6 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 013F lcd_putsf("\xFF");
                +
0004a8 ece3     +LDI R30 , LOW ( 2 * _0x0 + ( 53 ) )
0004a9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 53 ) )
                 	__POINTW1FN _0x0,53
0004aa 93fa      	ST   -Y,R31
0004ab 93ea      	ST   -Y,R30
0004ac 940e 111a 	CALL _lcd_putsf
                 ; 0000 0140 delay_ms(40);
0004ae e2e8      	LDI  R30,LOW(40)
0004af e0f0      	LDI  R31,HIGH(40)
0004b0 93fa      	ST   -Y,R31
0004b1 93ea      	ST   -Y,R30
0004b2 940e 1305 	CALL _delay_ms
                 ; 0000 0141 }
0004b4 e8a8      	LDI  R26,LOW(_i)
0004b5 e0b2      	LDI  R27,HIGH(_i)
0004b6 91ed      	LD   R30,X+
0004b7 91fd      	LD   R31,X+
0004b8 9631      	ADIW R30,1
0004b9 93fe      	ST   -X,R31
0004ba 93ee      	ST   -X,R30
0004bb cfd2      	RJMP _0x2A
                 _0x2B:
                 ; 0000 0142 
                 ; 0000 0143 lcd_clear();
0004bc 940e 10d8 	CALL _lcd_clear
                 ; 0000 0144 
                 ; 0000 0145 
                 ; 0000 0146 /////////////////////// SOUND TA-TA....
                 ; 0000 0147 //for(i=0;i<20;i++)
                 ; 0000 0148 //{
                 ; 0000 0149 //PORTD.6=1;
                 ; 0000 014A //delay_ms(1);
                 ; 0000 014B //PORTD.6=0;
                 ; 0000 014C //delay_ms(1);
                 ; 0000 014D //}
                 ; 0000 014E //delay_ms(60);
                 ; 0000 014F //
                 ; 0000 0150 // for(i=0;i<20;i++)
                 ; 0000 0151 //{
                 ; 0000 0152 //PORTD.6=1;
                 ; 0000 0153 //delay_ms(1);
                 ; 0000 0154 //PORTD.6=0;
                 ; 0000 0155 //delay_ms(1);
                 ; 0000 0156 //}
                 ; 0000 0157 
                 ; 0000 0158   devices=w1_search(DS18B20_SEARCH_ROM_CMD, RomCode); //поиск датчиков на линии 1-wire
0004be efe0      	LDI  R30,LOW(240)
0004bf 93ea      	ST   -Y,R30
0004c0 e5e6      	LDI  R30,LOW(_RomCode)
0004c1 e0f2      	LDI  R31,HIGH(_RomCode)
0004c2 93fa      	ST   -Y,R31
0004c3 93ea      	ST   -Y,R30
0004c4 940e 1364 	CALL _w1_search
0004c6 2e5e      	MOV  R5,R30
                 ; 0000 0159 
                 ; 0000 015A   if(devices)
0004c7 2055      	TST  R5
0004c8 f411      	BRNE PC+3
0004c9 940c 0536 	JMP _0x2C
                 ; 0000 015B   {
                 ; 0000 015C ///////////////////////// показываем найденные устройства 1-wire
                 ; 0000 015D     lcd_gotoxy(0,0);
0004cb e0e0      	LDI  R30,LOW(0)
0004cc 93ea      	ST   -Y,R30
0004cd 93ea      	ST   -Y,R30
0004ce 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 015E     sprintf(buffer,"device=%u", devices); //выводим информацию о кол-ве датчиков
0004d0 e6e8      	LDI  R30,LOW(_buffer)
0004d1 e0f2      	LDI  R31,HIGH(_buffer)
0004d2 93fa      	ST   -Y,R31
0004d3 93ea      	ST   -Y,R30
                +
0004d4 ece5     +LDI R30 , LOW ( 2 * _0x0 + ( 55 ) )
0004d5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 55 ) )
                 	__POINTW1FN _0x0,55
0004d6 93fa      	ST   -Y,R31
0004d7 93ea      	ST   -Y,R30
0004d8 2de5      	MOV  R30,R5
0004d9 27ff      	CLR  R31
0004da 2766      	CLR  R22
0004db 2777      	CLR  R23
0004dc 940e 165b 	CALL __PUTPARD1
0004de e084      	LDI  R24,4
0004df 940e 0f60 	CALL _sprintf
0004e1 9628      	ADIW R28,8
                 ; 0000 015F     lcd_puts(buffer);
0004e2 e6e8      	LDI  R30,LOW(_buffer)
0004e3 e0f2      	LDI  R31,HIGH(_buffer)
0004e4 93fa      	ST   -Y,R31
0004e5 93ea      	ST   -Y,R30
0004e6 940e 110d 	CALL _lcd_puts
                 ; 0000 0160     lcd_gotoxy( 0,1 );
0004e8 e0e0      	LDI  R30,LOW(0)
0004e9 93ea      	ST   -Y,R30
0004ea e0e1      	LDI  R30,LOW(1)
0004eb 93ea      	ST   -Y,R30
0004ec 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 0161     lcd_puts("reading");
                +
0004ee e8e0     +LDI R30 , LOW ( _0x2D + ( 0 ) )
0004ef e0f1     +LDI R31 , HIGH ( _0x2D + ( 0 ) )
                 	__POINTW1MN _0x2D,0
0004f0 93fa      	ST   -Y,R31
0004f1 93ea      	ST   -Y,R30
0004f2 940e 110d 	CALL _lcd_puts
                 ; 0000 0162     delay_ms(300);
0004f4 e2ec      	LDI  R30,LOW(300)
0004f5 e0f1      	LDI  R31,HIGH(300)
0004f6 93fa      	ST   -Y,R31
0004f7 93ea      	ST   -Y,R30
0004f8 940e 1305 	CALL _delay_ms
                 ; 0000 0163 
                 ; 0000 0164     ds18b20_init(&RomCode[0][0], 50, 140, DS18B20_9BIT_RES); //инициализация первого датчика
0004fa e5e6      	LDI  R30,LOW(_RomCode)
0004fb e0f2      	LDI  R31,HIGH(_RomCode)
0004fc 93fa      	ST   -Y,R31
0004fd 93ea      	ST   -Y,R30
0004fe e3e2      	LDI  R30,LOW(50)
0004ff 93ea      	ST   -Y,R30
000500 e8ec      	LDI  R30,LOW(140)
000501 93ea      	ST   -Y,R30
000502 e0e0      	LDI  R30,LOW(0)
000503 93ea      	ST   -Y,R30
000504 940e 1047 	CALL _ds18b20_init
                 ; 0000 0165     ds18b20_init(&RomCode[1][0], 50, 140, DS18B20_9BIT_RES); //инициализация второго датчика
                +
000506 e5ef     +LDI R30 , LOW ( _RomCode + ( 9 ) )
000507 e0f2     +LDI R31 , HIGH ( _RomCode + ( 9 ) )
                 	__POINTW1MN _RomCode,9
000508 93fa      	ST   -Y,R31
000509 93ea      	ST   -Y,R30
00050a e3e2      	LDI  R30,LOW(50)
00050b 93ea      	ST   -Y,R30
00050c e8ec      	LDI  R30,LOW(140)
00050d 93ea      	ST   -Y,R30
00050e e0e0      	LDI  R30,LOW(0)
00050f 93ea      	ST   -Y,R30
000510 940e 1047 	CALL _ds18b20_init
                 ; 0000 0166     lcd_clear();
000512 940e 10d8 	CALL _lcd_clear
                 ; 0000 0167     temp1=ds18b20_temperature(&RomCode[0][0]);//чтение температуры 1 датчика
000514 e5e6      	LDI  R30,LOW(_RomCode)
000515 e0f2      	LDI  R31,HIGH(_RomCode)
000516 93fa      	ST   -Y,R31
000517 93ea      	ST   -Y,R30
000518 940e 0fec 	CALL _ds18b20_temperature
00051a e8a2      	LDI  R26,LOW(_temp1)
00051b e0b2      	LDI  R27,HIGH(_temp1)
00051c 940e 141f 	CALL __CFD1
00051e 93ed      	ST   X+,R30
00051f 93fc      	ST   X,R31
                 ; 0000 0168     temp2=ds18b20_temperature(&RomCode[1][0]);//чтение температуры 1 датчика
                +
000520 e5ef     +LDI R30 , LOW ( _RomCode + ( 9 ) )
000521 e0f2     +LDI R31 , HIGH ( _RomCode + ( 9 ) )
                 	__POINTW1MN _RomCode,9
000522 93fa      	ST   -Y,R31
000523 93ea      	ST   -Y,R30
000524 940e 0fec 	CALL _ds18b20_temperature
000526 e8a4      	LDI  R26,LOW(_temp2)
000527 e0b2      	LDI  R27,HIGH(_temp2)
000528 940e 141f 	CALL __CFD1
00052a 93ed      	ST   X+,R30
00052b 93fc      	ST   X,R31
                 ; 0000 0169      menu_temp();
00052c ddcb      	RCALL _menu_temp
                 ; 0000 016A      delay_ms(1500);
00052d edec      	LDI  R30,LOW(1500)
00052e e0f5      	LDI  R31,HIGH(1500)
00052f 93fa      	ST   -Y,R31
000530 93ea      	ST   -Y,R30
000531 940e 1305 	CALL _delay_ms
                 ; 0000 016B      lcd_clear();
000533 940e 10d8 	CALL _lcd_clear
                 ; 0000 016C 
                 ; 0000 016D      }
                 ; 0000 016E  // else{ lcd_gotoxy(0,0); lcd_puts("NO TEMP.DEVICES"); delay_ms(1500);}
                 ; 0000 016F                                   // Нет темп. датч.
                 ; 0000 0170     else{ lcd_gotoxy(0,0); lcd_puts("\x48\x65\xBF \xBF\x65\xBC\xBE\xE3\x61\xBF\xC0\xB8\xBA\x6F\xB3"); delay_ms(1500);}
000535 c011      	RJMP _0x2E
                 _0x2C:
000536 e0e0      	LDI  R30,LOW(0)
000537 93ea      	ST   -Y,R30
000538 93ea      	ST   -Y,R30
000539 940e 10c9 	CALL _lcd_gotoxy
                +
00053b e8e8     +LDI R30 , LOW ( _0x2D + ( 8 ) )
00053c e0f1     +LDI R31 , HIGH ( _0x2D + ( 8 ) )
                 	__POINTW1MN _0x2D,8
00053d 93fa      	ST   -Y,R31
00053e 93ea      	ST   -Y,R30
00053f 940e 110d 	CALL _lcd_puts
000541 edec      	LDI  R30,LOW(1500)
000542 e0f5      	LDI  R31,HIGH(1500)
000543 93fa      	ST   -Y,R31
000544 93ea      	ST   -Y,R30
000545 940e 1305 	CALL _delay_ms
                 _0x2E:
                 ; 0000 0171 
                 ; 0000 0172 
                 ; 0000 0173 
                 ; 0000 0174 
                 ; 0000 0175 #asm("sei")       // Global enable interrupts
000547 9478      	sei
                 ; 0000 0176 TCNT1=0;
000548 e0e0      	LDI  R30,LOW(0)
000549 e0f0      	LDI  R31,HIGH(0)
00054a bdfd      	OUT  0x2C+1,R31
00054b bdec      	OUT  0x2C,R30
                 ; 0000 0177 sek=0;
00054c 93e0 027e 	STS  _sek,R30
00054e 93e0 027f 	STS  _sek+1,R30
                 ; 0000 0178              //калибровка модулятора
                 ; 0000 0179 
                 ; 0000 017A lcd_puts("s_lit \x40  ukr.net");
                +
000550 e9e9     +LDI R30 , LOW ( _0x2D + ( 25 ) )
000551 e0f1     +LDI R31 , HIGH ( _0x2D + ( 25 ) )
                 	__POINTW1MN _0x2D,25
000552 93fa      	ST   -Y,R31
000553 93ea      	ST   -Y,R30
000554 940e 110d 	CALL _lcd_puts
                 ; 0000 017B delay_ms(500);
000556 efe4      	LDI  R30,LOW(500)
000557 e0f1      	LDI  R31,HIGH(500)
000558 93fa      	ST   -Y,R31
000559 93ea      	ST   -Y,R30
00055a 940e 1305 	CALL _delay_ms
                 ; 0000 017C if(PINA.0==0)
00055c 99c8      	SBIC 0x19,0
00055d c1a0      	RJMP _0x2F
                 ; 0000 017D       {
                 ; 0000 017E        lcd_clear();
00055e 940e 10d8 	CALL _lcd_clear
                 ; 0000 017F         delay_ms(700);
000560 ebec      	LDI  R30,LOW(700)
000561 e0f2      	LDI  R31,HIGH(700)
000562 93fa      	ST   -Y,R31
000563 93ea      	ST   -Y,R30
000564 940e 1305 	CALL _delay_ms
                 ; 0000 0180         // reset all settings
                 ; 0000 0181         default_set();
000566 de00      	RCALL _default_set
                 ; 0000 0182          i=0;
000567 e0e0      	LDI  R30,LOW(0)
000568 93e0 0288 	STS  _i,R30
00056a 93e0 0289 	STS  _i+1,R30
                 ; 0000 0183 
                 ; 0000 0184         // режим Без ФУОЗ
                 ; 0000 0185         f=f+temp_f;
00056c e0a2      	LDI  R26,LOW(_f)
00056d e0b0      	LDI  R27,HIGH(_f)
00056e 940e 166d 	CALL __EEPROMRDW
000570 010f      	MOVW R0,R30
000571 e0a0      	LDI  R26,LOW(_temp_f)
000572 e0b0      	LDI  R27,HIGH(_temp_f)
000573 940e 166d 	CALL __EEPROMRDW
000575 0de0      	ADD  R30,R0
000576 1df1      	ADC  R31,R1
000577 e0a2      	LDI  R26,LOW(_f)
000578 e0b0      	LDI  R27,HIGH(_f)
000579 940e 167d 	CALL __EEPROMWRW
                 ; 0000 0186         temp_f=f-temp_f;
00057b e0a2      	LDI  R26,LOW(_f)
00057c e0b0      	LDI  R27,HIGH(_f)
00057d 940e 166d 	CALL __EEPROMRDW
00057f 010f      	MOVW R0,R30
000580 e0a0      	LDI  R26,LOW(_temp_f)
000581 e0b0      	LDI  R27,HIGH(_temp_f)
000582 940e 166d 	CALL __EEPROMRDW
000584 01df      	MOVW R26,R30
000585 01f0      	MOVW R30,R0
000586 1bea      	SUB  R30,R26
000587 0bfb      	SBC  R31,R27
000588 e0a0      	LDI  R26,LOW(_temp_f)
000589 e0b0      	LDI  R27,HIGH(_temp_f)
00058a 940e 167d 	CALL __EEPROMWRW
                 ; 0000 0187         f=f-temp_f;
00058c e0a2      	LDI  R26,LOW(_f)
00058d e0b0      	LDI  R27,HIGH(_f)
00058e 940e 166d 	CALL __EEPROMRDW
000590 010f      	MOVW R0,R30
000591 e0a0      	LDI  R26,LOW(_temp_f)
000592 e0b0      	LDI  R27,HIGH(_temp_f)
000593 940e 166d 	CALL __EEPROMRDW
000595 01df      	MOVW R26,R30
000596 01f0      	MOVW R30,R0
000597 1bea      	SUB  R30,R26
000598 0bfb      	SBC  R31,R27
000599 e0a2      	LDI  R26,LOW(_f)
00059a e0b0      	LDI  R27,HIGH(_f)
00059b 940e 167d 	CALL __EEPROMWRW
                 ; 0000 0188 
                 ; 0000 0189                                //заведи байк
                 ; 0000 018A         lcd_clear(); lcd_puts("\xA4\x61\xB3\x65\xE3\xB8     \xB2\x61\xB9\xBA"); delay_ms(3000);
00059d 940e 10d8 	CALL _lcd_clear
                +
00059f eaea     +LDI R30 , LOW ( _0x2D + ( 42 ) )
0005a0 e0f1     +LDI R31 , HIGH ( _0x2D + ( 42 ) )
                 	__POINTW1MN _0x2D,42
0005a1 93fa      	ST   -Y,R31
0005a2 93ea      	ST   -Y,R30
0005a3 940e 110d 	CALL _lcd_puts
0005a5 ebe8      	LDI  R30,LOW(3000)
0005a6 e0fb      	LDI  R31,HIGH(3000)
0005a7 93fa      	ST   -Y,R31
0005a8 93ea      	ST   -Y,R30
0005a9 940e 1305 	CALL _delay_ms
                 ; 0000 018B 
                 ; 0000 018C 
                 ; 0000 018D 
                 ; 0000 018E       // ждем, пока заведет
                 ; 0000 018F        sek=0;
0005ab e0e0      	LDI  R30,LOW(0)
0005ac 93e0 027e 	STS  _sek,R30
0005ae 93e0 027f 	STS  _sek+1,R30
                 ; 0000 0190 
                 ; 0000 0191        while(oboroty<800)
                 _0x30:
0005b0 e2e0      	LDI  R30,LOW(800)
0005b1 e0f3      	LDI  R31,HIGH(800)
0005b2 16ae      	CP   R10,R30
0005b3 06bf      	CPC  R11,R31
0005b4 f4d4      	BRGE _0x32
                 ; 0000 0192          {
                 ; 0000 0193          if(sek==1)
0005b5 91a0 027e 	LDS  R26,_sek
0005b7 91b0 027f 	LDS  R27,_sek+1
0005b9 9711      	SBIW R26,1
0005ba f499      	BRNE _0x33
                 ; 0000 0194             {
                 ; 0000 0195              sek=0;
0005bb e0e0      	LDI  R30,LOW(0)
0005bc 93e0 027e 	STS  _sek,R30
0005be 93e0 027f 	STS  _sek+1,R30
                 ; 0000 0196              oboroty=ob_min*60;
0005c0 91e0 0280 	LDS  R30,_ob_min
0005c2 91f0 0281 	LDS  R31,_ob_min+1
0005c4 e3ac      	LDI  R26,LOW(60)
0005c5 e0b0      	LDI  R27,HIGH(60)
0005c6 940e 15c4 	CALL __MULW12
0005c8 015f      	MOVW R10,R30
                 ; 0000 0197              ob_min=0;
0005c9 e0e0      	LDI  R30,LOW(0)
0005ca 93e0 0280 	STS  _ob_min,R30
0005cc 93e0 0281 	STS  _ob_min+1,R30
                 ; 0000 0198              }
                 ; 0000 0199          } // завелся
                 _0x33:
0005ce cfe1      	RJMP _0x30
                 _0x32:
                 ; 0000 019A 
                 ; 0000 019B                                //набери 1000 об/мин
                 ; 0000 019C         lcd_clear(); lcd_puts("\x48\x61\xB2\x65\x70\xB8  1000\x6F\xB2\x2F\xBC"); delay_ms(3000);
0005cf 940e 10d8 	CALL _lcd_clear
                +
0005d1 ebea     +LDI R30 , LOW ( _0x2D + ( 58 ) )
0005d2 e0f1     +LDI R31 , HIGH ( _0x2D + ( 58 ) )
                 	__POINTW1MN _0x2D,58
0005d3 93fa      	ST   -Y,R31
0005d4 93ea      	ST   -Y,R30
0005d5 940e 110d 	CALL _lcd_puts
0005d7 ebe8      	LDI  R30,LOW(3000)
0005d8 e0fb      	LDI  R31,HIGH(3000)
0005d9 93fa      	ST   -Y,R31
0005da 93ea      	ST   -Y,R30
0005db 940e 1305 	CALL _delay_ms
                 ; 0000 019D         lcd_clear();
0005dd 940e 10d8 	CALL _lcd_clear
                 ; 0000 019E             sek=0;
0005df e0e0      	LDI  R30,LOW(0)
0005e0 93e0 027e 	STS  _sek,R30
0005e2 93e0 027f 	STS  _sek+1,R30
                 ; 0000 019F             ob_min=0;
0005e4 93e0 0280 	STS  _ob_min,R30
0005e6 93e0 0281 	STS  _ob_min+1,R30
                 ; 0000 01A0 
                 ; 0000 01A1             // ждем пока наберет 1000 (+- 60) и продержит 2 сек.
                 ; 0000 01A2 
                 ; 0000 01A3        while(i<14)
                 _0x34:
0005e8 91a0 0288 	LDS  R26,_i
0005ea 91b0 0289 	LDS  R27,_i+1
0005ec 971e      	SBIW R26,14
0005ed f014      	BRLT PC+3
0005ee 940c 0676 	JMP _0x36
                 ; 0000 01A4        {
                 ; 0000 01A5 
                 ; 0000 01A6             if(sek==1)
0005f0 91a0 027e 	LDS  R26,_sek
0005f2 91b0 027f 	LDS  R27,_sek+1
0005f4 9711      	SBIW R26,1
0005f5 f011      	BREQ PC+3
0005f6 940c 0675 	JMP _0x37
                 ; 0000 01A7               {
                 ; 0000 01A8               sek=0;
0005f8 e0e0      	LDI  R30,LOW(0)
0005f9 93e0 027e 	STS  _sek,R30
0005fb 93e0 027f 	STS  _sek+1,R30
                 ; 0000 01A9               oboroty=ob_min*60;
0005fd 91e0 0280 	LDS  R30,_ob_min
0005ff 91f0 0281 	LDS  R31,_ob_min+1
000601 e3ac      	LDI  R26,LOW(60)
000602 e0b0      	LDI  R27,HIGH(60)
000603 940e 15c4 	CALL __MULW12
000605 015f      	MOVW R10,R30
                 ; 0000 01AA               ob_min=0;
000606 e0e0      	LDI  R30,LOW(0)
000607 93e0 0280 	STS  _ob_min,R30
000609 93e0 0281 	STS  _ob_min+1,R30
                 ; 0000 01AB 
                 ; 0000 01AC                if((oboroty>940)&&(oboroty<1060)) {temp_ugly[i]=ob_y; i++;}
00060b eaec      	LDI  R30,LOW(940)
00060c e0f3      	LDI  R31,HIGH(940)
00060d 15ea      	CP   R30,R10
00060e 05fb      	CPC  R31,R11
00060f f42c      	BRGE _0x39
000610 e2e4      	LDI  R30,LOW(1060)
000611 e0f4      	LDI  R31,HIGH(1060)
000612 16ae      	CP   R10,R30
000613 06bf      	CPC  R11,R31
000614 f00c      	BRLT _0x3A
                 _0x39:
000615 c014      	RJMP _0x38
                 _0x3A:
000616 91e0 0288 	LDS  R30,_i
000618 91f0 0289 	LDS  R31,_i+1
00061a e8ac      	LDI  R26,LOW(_temp_ugly)
00061b e0b2      	LDI  R27,HIGH(_temp_ugly)
00061c 0fee      	LSL  R30
00061d 1fff      	ROL  R31
00061e 0fea      	ADD  R30,R26
00061f 1ffb      	ADC  R31,R27
000620 82c0      	ST   Z,R12
000621 82d1      	STD  Z+1,R13
000622 e8a8      	LDI  R26,LOW(_i)
000623 e0b2      	LDI  R27,HIGH(_i)
000624 91ed      	LD   R30,X+
000625 91fd      	LD   R31,X+
000626 9631      	ADIW R30,1
000627 93fe      	ST   -X,R31
000628 93ee      	ST   -X,R30
                 ; 0000 01AD                 else i=0;
000629 c005      	RJMP _0x3B
                 _0x38:
00062a e0e0      	LDI  R30,LOW(0)
00062b 93e0 0288 	STS  _i,R30
00062d 93e0 0289 	STS  _i+1,R30
                 ; 0000 01AE 
                 ; 0000 01AF 
                 ; 0000 01B0               lcd_gotoxy(0,0);
                 _0x3B:
00062f e0e0      	LDI  R30,LOW(0)
000630 93ea      	ST   -Y,R30
000631 93ea      	ST   -Y,R30
000632 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 01B1               sprintf(buffer,"     :%d   ",15-i);  //wait
000634 e6e8      	LDI  R30,LOW(_buffer)
000635 e0f2      	LDI  R31,HIGH(_buffer)
000636 93fa      	ST   -Y,R31
000637 93ea      	ST   -Y,R30
                +
000638 e1ea     +LDI R30 , LOW ( 2 * _0x0 + ( 140 ) )
000639 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 140 ) )
                 	__POINTW1FN _0x0,140
00063a 93fa      	ST   -Y,R31
00063b 93ea      	ST   -Y,R30
00063c 91a0 0288 	LDS  R26,_i
00063e 91b0 0289 	LDS  R27,_i+1
000640 e0ef      	LDI  R30,LOW(15)
000641 e0f0      	LDI  R31,HIGH(15)
000642 1bea      	SUB  R30,R26
000643 0bfb      	SBC  R31,R27
000644 940e 15b2 	CALL __CWD1
000646 940e 165b 	CALL __PUTPARD1
000648 e084      	LDI  R24,4
000649 940e 0f60 	CALL _sprintf
00064b 9628      	ADIW R28,8
                 ; 0000 01B2               lcd_puts(buffer);
00064c e6e8      	LDI  R30,LOW(_buffer)
00064d e0f2      	LDI  R31,HIGH(_buffer)
00064e 93fa      	ST   -Y,R31
00064f 93ea      	ST   -Y,R30
000650 940e 110d 	CALL _lcd_puts
                 ; 0000 01B3               lcd_gotoxy(0,1);
000652 e0e0      	LDI  R30,LOW(0)
000653 93ea      	ST   -Y,R30
000654 e0e1      	LDI  R30,LOW(1)
000655 93ea      	ST   -Y,R30
000656 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 01B4               sprintf(buffer,"%d      ",oboroty);  //показывает обороты (тыс в мин)
000658 e6e8      	LDI  R30,LOW(_buffer)
000659 e0f2      	LDI  R31,HIGH(_buffer)
00065a 93fa      	ST   -Y,R31
00065b 93ea      	ST   -Y,R30
                +
00065c e2e6     +LDI R30 , LOW ( 2 * _0x0 + ( 152 ) )
00065d e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 152 ) )
                 	__POINTW1FN _0x0,152
00065e 93fa      	ST   -Y,R31
00065f 93ea      	ST   -Y,R30
000660 01f5      	MOVW R30,R10
000661 940e 15b2 	CALL __CWD1
000663 940e 165b 	CALL __PUTPARD1
000665 e084      	LDI  R24,4
000666 940e 0f60 	CALL _sprintf
000668 9628      	ADIW R28,8
                 ; 0000 01B5               lcd_puts(buffer);
000669 e6e8      	LDI  R30,LOW(_buffer)
00066a e0f2      	LDI  R31,HIGH(_buffer)
00066b 93fa      	ST   -Y,R31
00066c 93ea      	ST   -Y,R30
00066d 940e 110d 	CALL _lcd_puts
                 ; 0000 01B6               delay_ms(100);
00066f e6e4      	LDI  R30,LOW(100)
000670 e0f0      	LDI  R31,HIGH(100)
000671 93fa      	ST   -Y,R31
000672 93ea      	ST   -Y,R30
000673 940e 1305 	CALL _delay_ms
                 ; 0000 01B7               }
                 ; 0000 01B8 
                 ; 0000 01B9          } //продержал 2 сек
                 _0x37:
000675 cf72      	RJMP _0x34
                 _0x36:
                 ; 0000 01BA 
                 ; 0000 01BB           //Done
                 ; 0000 01BC         lcd_clear();
000676 940e 10d8 	CALL _lcd_clear
                 ; 0000 01BD 
                 ; 0000 01BE         for(i=0;i<14;i++)
000678 e0e0      	LDI  R30,LOW(0)
000679 93e0 0288 	STS  _i,R30
00067b 93e0 0289 	STS  _i+1,R30
                 _0x3D:
00067d 91a0 0288 	LDS  R26,_i
00067f 91b0 0289 	LDS  R27,_i+1
000681 971e      	SBIW R26,14
000682 f4f4      	BRGE _0x3E
                 ; 0000 01BF         temp_buf=temp_buf+temp_ugly[i];
000683 91e0 0288 	LDS  R30,_i
000685 91f0 0289 	LDS  R31,_i+1
000687 e8ac      	LDI  R26,LOW(_temp_ugly)
000688 e0b2      	LDI  R27,HIGH(_temp_ugly)
000689 0fee      	LSL  R30
00068a 1fff      	ROL  R31
00068b 0fae      	ADD  R26,R30
00068c 1fbf      	ADC  R27,R31
00068d 940e 1643 	CALL __GETW1P
00068f 91a0 0286 	LDS  R26,_temp_buf
000691 91b0 0287 	LDS  R27,_temp_buf+1
000693 0fea      	ADD  R30,R26
000694 1ffb      	ADC  R31,R27
000695 93e0 0286 	STS  _temp_buf,R30
000697 93f0 0287 	STS  _temp_buf+1,R31
000699 e8a8      	LDI  R26,LOW(_i)
00069a e0b2      	LDI  R27,HIGH(_i)
00069b 91ed      	LD   R30,X+
00069c 91fd      	LD   R31,X+
00069d 9631      	ADIW R30,1
00069e 93fe      	ST   -X,R31
00069f 93ee      	ST   -X,R30
0006a0 cfdc      	RJMP _0x3D
                 _0x3E:
                 ; 0000 01C1 temp_buf=temp_buf/15;
0006a1 91a0 0286 	LDS  R26,_temp_buf
0006a3 91b0 0287 	LDS  R27,_temp_buf+1
0006a5 e0ef      	LDI  R30,LOW(15)
0006a6 e0f0      	LDI  R31,HIGH(15)
0006a7 940e 15ef 	CALL __DIVW21
0006a9 93e0 0286 	STS  _temp_buf,R30
0006ab 93f0 0287 	STS  _temp_buf+1,R31
                 ; 0000 01C2 
                 ; 0000 01C3         sprintf(buffer,"AVR:%d",temp_buf);  //показывает проход шторки в прерываниях
0006ad e6e8      	LDI  R30,LOW(_buffer)
0006ae e0f2      	LDI  R31,HIGH(_buffer)
0006af 93fa      	ST   -Y,R31
0006b0 93ea      	ST   -Y,R30
                +
0006b1 e2ef     +LDI R30 , LOW ( 2 * _0x0 + ( 161 ) )
0006b2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 161 ) )
                 	__POINTW1FN _0x0,161
0006b3 93fa      	ST   -Y,R31
0006b4 93ea      	ST   -Y,R30
0006b5 91e0 0286 	LDS  R30,_temp_buf
0006b7 91f0 0287 	LDS  R31,_temp_buf+1
0006b9 940e 15b2 	CALL __CWD1
0006bb 940e 165b 	CALL __PUTPARD1
0006bd e084      	LDI  R24,4
0006be 940e 0f60 	CALL _sprintf
0006c0 9628      	ADIW R28,8
                 ; 0000 01C4         lcd_puts(buffer);
0006c1 e6e8      	LDI  R30,LOW(_buffer)
0006c2 e0f2      	LDI  R31,HIGH(_buffer)
0006c3 93fa      	ST   -Y,R31
0006c4 93ea      	ST   -Y,R30
0006c5 940e 110d 	CALL _lcd_puts
                 ; 0000 01C5 
                 ; 0000 01C6         delay_ms(3000);
0006c7 ebe8      	LDI  R30,LOW(3000)
0006c8 e0fb      	LDI  R31,HIGH(3000)
0006c9 93fa      	ST   -Y,R31
0006ca 93ea      	ST   -Y,R30
0006cb 940e 1305 	CALL _delay_ms
                 ; 0000 01C7 
                 ; 0000 01C8         f=f+temp_f;
0006cd e0a2      	LDI  R26,LOW(_f)
0006ce e0b0      	LDI  R27,HIGH(_f)
0006cf 940e 166d 	CALL __EEPROMRDW
0006d1 010f      	MOVW R0,R30
0006d2 e0a0      	LDI  R26,LOW(_temp_f)
0006d3 e0b0      	LDI  R27,HIGH(_temp_f)
0006d4 940e 166d 	CALL __EEPROMRDW
0006d6 0de0      	ADD  R30,R0
0006d7 1df1      	ADC  R31,R1
0006d8 e0a2      	LDI  R26,LOW(_f)
0006d9 e0b0      	LDI  R27,HIGH(_f)
0006da 940e 167d 	CALL __EEPROMWRW
                 ; 0000 01C9         temp_f=f-temp_f;
0006dc e0a2      	LDI  R26,LOW(_f)
0006dd e0b0      	LDI  R27,HIGH(_f)
0006de 940e 166d 	CALL __EEPROMRDW
0006e0 010f      	MOVW R0,R30
0006e1 e0a0      	LDI  R26,LOW(_temp_f)
0006e2 e0b0      	LDI  R27,HIGH(_temp_f)
0006e3 940e 166d 	CALL __EEPROMRDW
0006e5 01df      	MOVW R26,R30
0006e6 01f0      	MOVW R30,R0
0006e7 1bea      	SUB  R30,R26
0006e8 0bfb      	SBC  R31,R27
0006e9 e0a0      	LDI  R26,LOW(_temp_f)
0006ea e0b0      	LDI  R27,HIGH(_temp_f)
0006eb 940e 167d 	CALL __EEPROMWRW
                 ; 0000 01CA         f=f-temp_f;
0006ed e0a2      	LDI  R26,LOW(_f)
0006ee e0b0      	LDI  R27,HIGH(_f)
0006ef 940e 166d 	CALL __EEPROMRDW
0006f1 010f      	MOVW R0,R30
0006f2 e0a0      	LDI  R26,LOW(_temp_f)
0006f3 e0b0      	LDI  R27,HIGH(_temp_f)
0006f4 940e 166d 	CALL __EEPROMRDW
0006f6 01df      	MOVW R26,R30
0006f7 01f0      	MOVW R30,R0
0006f8 1bea      	SUB  R30,R26
0006f9 0bfb      	SBC  R31,R27
0006fa e0a2      	LDI  R26,LOW(_f)
0006fb e0b0      	LDI  R27,HIGH(_f)
0006fc 940e 167d 	CALL __EEPROMWRW
                 ; 0000 01CB         } // конец настройки
                 ; 0000 01CC 
                 ; 0000 01CD 
                 ; 0000 01CE while (1)
                 _0x2F:
                 _0x3F:
                 ; 0000 01CF       {
                 ; 0000 01D0 
                 ; 0000 01D1            // температура
                 ; 0000 01D2         if(PINA.0==0)             // если нажата кнопка №1. Температура
0006fe 99c8      	SBIC 0x19,0
0006ff c075      	RJMP _0x42
                 ; 0000 01D3             {
                 ; 0000 01D4                 delay_ms(50);
000700 e3e2      	LDI  R30,LOW(50)
000701 e0f0      	LDI  R31,HIGH(50)
000702 93fa      	ST   -Y,R31
000703 93ea      	ST   -Y,R30
000704 940e 1305 	CALL _delay_ms
                 ; 0000 01D5 
                 ; 0000 01D6                lcd_clear();
000706 940e 10d8 	CALL _lcd_clear
                 ; 0000 01D7 
                 ; 0000 01D8              while(PINA.0==0)
                 _0x43:
000708 99c8      	SBIC 0x19,0
000709 c055      	RJMP _0x45
                 ; 0000 01D9                  {
                 ; 0000 01DA                   if((sek>4)&&(oboroty<1100))
00070a 91a0 027e 	LDS  R26,_sek
00070c 91b0 027f 	LDS  R27,_sek+1
00070e 9715      	SBIW R26,5
00070f f02c      	BRLT _0x47
000710 e4ec      	LDI  R30,LOW(1100)
000711 e0f4      	LDI  R31,HIGH(1100)
000712 16ae      	CP   R10,R30
000713 06bf      	CPC  R11,R31
000714 f00c      	BRLT _0x48
                 _0x47:
000715 c048      	RJMP _0x46
                 _0x48:
                 ; 0000 01DB                   {
                 ; 0000 01DC                   f=f+temp_f;
000716 e0a2      	LDI  R26,LOW(_f)
000717 e0b0      	LDI  R27,HIGH(_f)
000718 940e 166d 	CALL __EEPROMRDW
00071a 010f      	MOVW R0,R30
00071b e0a0      	LDI  R26,LOW(_temp_f)
00071c e0b0      	LDI  R27,HIGH(_temp_f)
00071d 940e 166d 	CALL __EEPROMRDW
00071f 0de0      	ADD  R30,R0
000720 1df1      	ADC  R31,R1
000721 e0a2      	LDI  R26,LOW(_f)
000722 e0b0      	LDI  R27,HIGH(_f)
000723 940e 167d 	CALL __EEPROMWRW
                 ; 0000 01DD                   temp_f=f-temp_f;
000725 e0a2      	LDI  R26,LOW(_f)
000726 e0b0      	LDI  R27,HIGH(_f)
000727 940e 166d 	CALL __EEPROMRDW
000729 010f      	MOVW R0,R30
00072a e0a0      	LDI  R26,LOW(_temp_f)
00072b e0b0      	LDI  R27,HIGH(_temp_f)
00072c 940e 166d 	CALL __EEPROMRDW
00072e 01df      	MOVW R26,R30
00072f 01f0      	MOVW R30,R0
000730 1bea      	SUB  R30,R26
000731 0bfb      	SBC  R31,R27
000732 e0a0      	LDI  R26,LOW(_temp_f)
000733 e0b0      	LDI  R27,HIGH(_temp_f)
000734 940e 167d 	CALL __EEPROMWRW
                 ; 0000 01DE                   f=f-temp_f;
000736 e0a2      	LDI  R26,LOW(_f)
000737 e0b0      	LDI  R27,HIGH(_f)
000738 940e 166d 	CALL __EEPROMRDW
00073a 010f      	MOVW R0,R30
00073b e0a0      	LDI  R26,LOW(_temp_f)
00073c e0b0      	LDI  R27,HIGH(_temp_f)
00073d 940e 166d 	CALL __EEPROMRDW
00073f 01df      	MOVW R26,R30
000740 01f0      	MOVW R30,R0
000741 1bea      	SUB  R30,R26
000742 0bfb      	SBC  R31,R27
000743 e0a2      	LDI  R26,LOW(_f)
000744 e0b0      	LDI  R27,HIGH(_f)
000745 940e 167d 	CALL __EEPROMWRW
                 ; 0000 01DF 
                 ; 0000 01E0 
                 ; 0000 01E1                   if(f<4)
000747 e0a2      	LDI  R26,LOW(_f)
000748 e0b0      	LDI  R27,HIGH(_f)
000749 940e 166d 	CALL __EEPROMRDW
00074b 9734      	SBIW R30,4
00074c f41c      	BRGE _0x49
                 ; 0000 01E2                   //lcd_puts("FUOZ ON");
                 ; 0000 01E3                   lcd_puts("\xAA\xA9\x4F\xA4         \x42\xBA\xBB");
                +
00074d eceb     +LDI R30 , LOW ( _0x2D + ( 75 ) )
00074e e0f1     +LDI R31 , HIGH ( _0x2D + ( 75 ) )
                 	__POINTW1MN _0x2D,75
00074f c002      	RJMP _0x87
                 ; 0000 01E4                   else
                 _0x49:
                 ; 0000 01E5                   // lcd_puts("FUOZ OFF");
                 ; 0000 01E6                   lcd_puts("\xAA\xA9\x4F\xA4        \x42\xC3\xBA\xBB");
                +
000750 edec     +LDI R30 , LOW ( _0x2D + ( 92 ) )
000751 e0f1     +LDI R31 , HIGH ( _0x2D + ( 92 ) )
                 	__POINTW1MN _0x2D,92
                 _0x87:
000752 93fa      	ST   -Y,R31
000753 93ea      	ST   -Y,R30
000754 940e 110d 	CALL _lcd_puts
                 ; 0000 01E7                   delay_ms(700);
000756 ebec      	LDI  R30,LOW(700)
000757 e0f2      	LDI  R31,HIGH(700)
000758 93fa      	ST   -Y,R31
000759 93ea      	ST   -Y,R30
00075a 940e 1305 	CALL _delay_ms
                 ; 0000 01E8                   lcd_clear();}
00075c 940e 10d8 	CALL _lcd_clear
                 ; 0000 01E9                   }
                 _0x46:
00075e cfa9      	RJMP _0x43
                 _0x45:
                 ; 0000 01EA 
                 ; 0000 01EB                 if((sek<3)&&(oboroty<1400)) menu_temp();
00075f 91a0 027e 	LDS  R26,_sek
000761 91b0 027f 	LDS  R27,_sek+1
000763 9713      	SBIW R26,3
000764 f42c      	BRGE _0x4C
000765 e7e8      	LDI  R30,LOW(1400)
000766 e0f5      	LDI  R31,HIGH(1400)
000767 16ae      	CP   R10,R30
000768 06bf      	CPC  R11,R31
000769 f00c      	BRLT _0x4D
                 _0x4C:
00076a c001      	RJMP _0x4B
                 _0x4D:
00076b db8c      	RCALL _menu_temp
                 ; 0000 01EC 
                 ; 0000 01ED                  ob_min=0;
                 _0x4B:
00076c e0e0      	LDI  R30,LOW(0)
00076d 93e0 0280 	STS  _ob_min,R30
00076f 93e0 0281 	STS  _ob_min+1,R30
                 ; 0000 01EE                  sek=0;
000771 93e0 027e 	STS  _sek,R30
000773 93e0 027f 	STS  _sek+1,R30
                 ; 0000 01EF               }
                 ; 0000 01F0 
                 ; 0000 01F1 
                 ; 0000 01F2              // прогрев свечей
                 ; 0000 01F3          if(PINA.1==0)             // если кнопка нажата
                 _0x42:
000775 99c9      	SBIC 0x19,1
000776 c05a      	RJMP _0x4E
                 ; 0000 01F4             {
                 ; 0000 01F5             delay_ms(100);
000777 e6e4      	LDI  R30,LOW(100)
000778 e0f0      	LDI  R31,HIGH(100)
000779 93fa      	ST   -Y,R31
00077a 93ea      	ST   -Y,R30
00077b 940e 1305 	CALL _delay_ms
                 ; 0000 01F6             if(oboroty==0)
00077d 2c0a      	MOV  R0,R10
00077e 280b      	OR   R0,R11
00077f f5d1      	BRNE _0x4F
                 ; 0000 01F7             {
                 ; 0000 01F8             #asm("cli");
000780 94f8      	cli
                 ; 0000 01F9             lcd_clear();
000781 940e 10d8 	CALL _lcd_clear
                 ; 0000 01FA             //lcd_puts("Heating spark...");
                 ; 0000 01FB             lcd_puts("\xA8\x70\x6F\xB4\x70\x65\xB3 \x63\xB3\x65\xC0\x65\xB9..");
                +
000783 eeed     +LDI R30 , LOW ( _0x2D + ( 109 ) )
000784 e0f1     +LDI R31 , HIGH ( _0x2D + ( 109 ) )
                 	__POINTW1MN _0x2D,109
000785 93fa      	ST   -Y,R31
000786 93ea      	ST   -Y,R30
000787 940e 110d 	CALL _lcd_puts
                 ; 0000 01FC             for(i=0;i<50;i++)
000789 e0e0      	LDI  R30,LOW(0)
00078a 93e0 0288 	STS  _i,R30
00078c 93e0 0289 	STS  _i+1,R30
                 _0x51:
00078e 91a0 0288 	LDS  R26,_i
000790 91b0 0289 	LDS  R27,_i+1
000792 97d2      	SBIW R26,50
000793 f4b4      	BRGE _0x52
                 ; 0000 01FD               {
                 ; 0000 01FE                PORTD.3=1;         //PORTD.6 !!!
000794 9a93      	SBI  0x12,3
                 ; 0000 01FF                delay_ms(25);
000795 e1e9      	LDI  R30,LOW(25)
000796 e0f0      	LDI  R31,HIGH(25)
000797 93fa      	ST   -Y,R31
000798 93ea      	ST   -Y,R30
000799 940e 1305 	CALL _delay_ms
                 ; 0000 0200                PORTD.3=0;         //PORTD.6 !!!
00079b 9893      	CBI  0x12,3
                 ; 0000 0201                delay_ms(7);
00079c e0e7      	LDI  R30,LOW(7)
00079d e0f0      	LDI  R31,HIGH(7)
00079e 93fa      	ST   -Y,R31
00079f 93ea      	ST   -Y,R30
0007a0 940e 1305 	CALL _delay_ms
                 ; 0000 0202                }
0007a2 e8a8      	LDI  R26,LOW(_i)
0007a3 e0b2      	LDI  R27,HIGH(_i)
0007a4 91ed      	LD   R30,X+
0007a5 91fd      	LD   R31,X+
0007a6 9631      	ADIW R30,1
0007a7 93fe      	ST   -X,R31
0007a8 93ee      	ST   -X,R30
0007a9 cfe4      	RJMP _0x51
                 _0x52:
                 ; 0000 0203             lcd_clear();
0007aa 940e 10d8 	CALL _lcd_clear
                 ; 0000 0204             //lcd_puts("Finished");
                 ; 0000 0205             lcd_puts(" \xA1\x6F\xBF\x6F\xB3\x6F");
                +
0007ac efee     +LDI R30 , LOW ( _0x2D + ( 126 ) )
0007ad e0f1     +LDI R31 , HIGH ( _0x2D + ( 126 ) )
                 	__POINTW1MN _0x2D,126
0007ae 93fa      	ST   -Y,R31
0007af 93ea      	ST   -Y,R30
0007b0 940e 110d 	CALL _lcd_puts
                 ; 0000 0206             delay_ms(250);
0007b2 efea      	LDI  R30,LOW(250)
0007b3 e0f0      	LDI  R31,HIGH(250)
0007b4 93fa      	ST   -Y,R31
0007b5 93ea      	ST   -Y,R30
0007b6 940e 1305 	CALL _delay_ms
                 ; 0000 0207             #asm("sei");
0007b8 9478      	sei
                 ; 0000 0208             }
                 ; 0000 0209 
                 ; 0000 020A             else
0007b9 c00e      	RJMP _0x57
                 _0x4F:
                 ; 0000 020B             {
                 ; 0000 020C              lcd_clear();
0007ba 940e 10d8 	CALL _lcd_clear
                 ; 0000 020D              //lcd_puts("First      off");
                 ; 0000 020E              lcd_puts("\x43\xBD\x61\xC0\x61\xBB\x61  \xB7\x61\xB4\xBB\x79\xC1\xB8");
                +
0007bc e0e6     +LDI R30 , LOW ( _0x2D + ( 134 ) )
0007bd e0f2     +LDI R31 , HIGH ( _0x2D + ( 134 ) )
                 	__POINTW1MN _0x2D,134
0007be 93fa      	ST   -Y,R31
0007bf 93ea      	ST   -Y,R30
0007c0 940e 110d 	CALL _lcd_puts
                 ; 0000 020F              delay_ms(300);
0007c2 e2ec      	LDI  R30,LOW(300)
0007c3 e0f1      	LDI  R31,HIGH(300)
0007c4 93fa      	ST   -Y,R31
0007c5 93ea      	ST   -Y,R30
0007c6 940e 1305 	CALL _delay_ms
                 ; 0000 0210              }
                 _0x57:
                 ; 0000 0211             sek=0;
0007c8 e0e0      	LDI  R30,LOW(0)
0007c9 93e0 027e 	STS  _sek,R30
0007cb 93e0 027f 	STS  _sek+1,R30
                 ; 0000 0212             ob_min=0;
0007cd 93e0 0280 	STS  _ob_min,R30
0007cf 93e0 0281 	STS  _ob_min+1,R30
                 ; 0000 0213             }
                 ; 0000 0214 
                 ; 0000 0215              // просмотр каждого процента
                 ; 0000 0216         if(PINA.2==0)             // если кнопка нажата
                 _0x4E:
0007d1 99ca      	SBIC 0x19,2
0007d2 c13e      	RJMP _0x58
                 ; 0000 0217             {
                 ; 0000 0218             delay_ms(100);
0007d3 e6e4      	LDI  R30,LOW(100)
0007d4 e0f0      	LDI  R31,HIGH(100)
0007d5 93fa      	ST   -Y,R31
0007d6 93ea      	ST   -Y,R30
0007d7 940e 1305 	CALL _delay_ms
                 ; 0000 0219             while(sek<5)
                 _0x59:
0007d9 91a0 027e 	LDS  R26,_sek
0007db 91b0 027f 	LDS  R27,_sek+1
0007dd 9715      	SBIW R26,5
0007de f014      	BRLT PC+3
0007df 940c 0908 	JMP _0x5B
                 ; 0000 021A             {
                 ; 0000 021B             delay_ms(50);
0007e1 e3e2      	LDI  R30,LOW(50)
0007e2 e0f0      	LDI  R31,HIGH(50)
0007e3 93fa      	ST   -Y,R31
0007e4 93ea      	ST   -Y,R30
0007e5 940e 1305 	CALL _delay_ms
                 ; 0000 021C             if(PINA.0==0) {delay_ms(50);sek=5;}
0007e7 99c8      	SBIC 0x19,0
0007e8 c00c      	RJMP _0x5C
0007e9 e3e2      	LDI  R30,LOW(50)
0007ea e0f0      	LDI  R31,HIGH(50)
0007eb 93fa      	ST   -Y,R31
0007ec 93ea      	ST   -Y,R30
0007ed 940e 1305 	CALL _delay_ms
0007ef e0e5      	LDI  R30,LOW(5)
0007f0 e0f0      	LDI  R31,HIGH(5)
0007f1 93e0 027e 	STS  _sek,R30
0007f3 93f0 027f 	STS  _sek+1,R31
                 ; 0000 021D             if(PINA.2==0) {delay_ms(100);sek=0;if(uoz_i==7) uoz_i=0;else uoz_i++;menu1();
                 _0x5C:
0007f5 99ca      	SBIC 0x19,2
0007f6 c044      	RJMP _0x5D
0007f7 e6e4      	LDI  R30,LOW(100)
0007f8 e0f0      	LDI  R31,HIGH(100)
0007f9 93fa      	ST   -Y,R31
0007fa 93ea      	ST   -Y,R30
0007fb 940e 1305 	CALL _delay_ms
0007fd e0e0      	LDI  R30,LOW(0)
0007fe 93e0 027e 	STS  _sek,R30
000800 93e0 027f 	STS  _sek+1,R30
000802 91a0 0278 	LDS  R26,_uoz_i
000804 91b0 0279 	LDS  R27,_uoz_i+1
000806 9717      	SBIW R26,7
000807 f429      	BRNE _0x5E
000808 93e0 0278 	STS  _uoz_i,R30
00080a 93e0 0279 	STS  _uoz_i+1,R30
00080c c007      	RJMP _0x5F
                 _0x5E:
00080d e7a8      	LDI  R26,LOW(_uoz_i)
00080e e0b2      	LDI  R27,HIGH(_uoz_i)
00080f 91ed      	LD   R30,X+
000810 91fd      	LD   R31,X+
000811 9631      	ADIW R30,1
000812 93fe      	ST   -X,R31
000813 93ee      	ST   -X,R30
                 _0x5F:
000814 da3e      	RCALL _menu1
                 ; 0000 021E              while(PINA.2==0)
                 _0x60:
000815 99ca      	SBIC 0x19,2
000816 c024      	RJMP _0x62
                 ; 0000 021F                  {
                 ; 0000 0220                   if((sek>5) &&(oboroty<1100))
000817 91a0 027e 	LDS  R26,_sek
000819 91b0 027f 	LDS  R27,_sek+1
00081b 9716      	SBIW R26,6
00081c f02c      	BRLT _0x64
00081d e4ec      	LDI  R30,LOW(1100)
00081e e0f4      	LDI  R31,HIGH(1100)
00081f 16ae      	CP   R10,R30
000820 06bf      	CPC  R11,R31
000821 f00c      	BRLT _0x65
                 _0x64:
000822 c017      	RJMP _0x63
                 _0x65:
                 ; 0000 0221                   {default_set();
000823 db43      	RCALL _default_set
                 ; 0000 0222                   lcd_clear();
000824 940e 10d8 	CALL _lcd_clear
                 ; 0000 0223                   //lcd_puts("DEFAULT  SETTING");
                 ; 0000 0224                   lcd_puts("\xA9\xB4\xBB\xC3 \xBE\x6F \x79\xBC\x6F\xBB\xC0\x61\xBD.");
                +
000826 e1e7     +LDI R30 , LOW ( _0x2D + ( 151 ) )
000827 e0f2     +LDI R31 , HIGH ( _0x2D + ( 151 ) )
                 	__POINTW1MN _0x2D,151
000828 93fa      	ST   -Y,R31
000829 93ea      	ST   -Y,R30
00082a 940e 110d 	CALL _lcd_puts
                 ; 0000 0225                   delay_ms(500);sek=5;
00082c efe4      	LDI  R30,LOW(500)
00082d e0f1      	LDI  R31,HIGH(500)
00082e 93fa      	ST   -Y,R31
00082f 93ea      	ST   -Y,R30
000830 940e 1305 	CALL _delay_ms
000832 e0e5      	LDI  R30,LOW(5)
000833 e0f0      	LDI  R31,HIGH(5)
000834 93e0 027e 	STS  _sek,R30
000836 93f0 027f 	STS  _sek+1,R31
                 ; 0000 0226                   lcd_clear();}
000838 940e 10d8 	CALL _lcd_clear
                 ; 0000 0227                   }
                 _0x63:
00083a cfda      	RJMP _0x60
                 _0x62:
                 ; 0000 0228 
                 ; 0000 0229             }
                 ; 0000 022A             if(PINA.1==0) {delay_ms(100);sek=0;if(uoz_i==0) uoz_i=7;else uoz_i--;menu1();}
                 _0x5D:
00083b 99c9      	SBIC 0x19,1
00083c c020      	RJMP _0x66
00083d e6e4      	LDI  R30,LOW(100)
00083e e0f0      	LDI  R31,HIGH(100)
00083f 93fa      	ST   -Y,R31
000840 93ea      	ST   -Y,R30
000841 940e 1305 	CALL _delay_ms
000843 e0e0      	LDI  R30,LOW(0)
000844 93e0 027e 	STS  _sek,R30
000846 93e0 027f 	STS  _sek+1,R30
000848 91e0 0278 	LDS  R30,_uoz_i
00084a 91f0 0279 	LDS  R31,_uoz_i+1
00084c 9730      	SBIW R30,0
00084d f439      	BRNE _0x67
00084e e0e7      	LDI  R30,LOW(7)
00084f e0f0      	LDI  R31,HIGH(7)
000850 93e0 0278 	STS  _uoz_i,R30
000852 93f0 0279 	STS  _uoz_i+1,R31
000854 c007      	RJMP _0x68
                 _0x67:
000855 e7a8      	LDI  R26,LOW(_uoz_i)
000856 e0b2      	LDI  R27,HIGH(_uoz_i)
000857 91ed      	LD   R30,X+
000858 91fd      	LD   R31,X+
000859 9731      	SBIW R30,1
00085a 93fe      	ST   -X,R31
00085b 93ee      	ST   -X,R30
                 _0x68:
00085c d9f6      	RCALL _menu1
                 ; 0000 022B             if(PINA.3==0) {delay_ms(80);sek=0;menu2();sek=0;
                 _0x66:
00085d 99cb      	SBIC 0x19,3
00085e c0a8      	RJMP _0x69
00085f e5e0      	LDI  R30,LOW(80)
000860 e0f0      	LDI  R31,HIGH(80)
000861 93fa      	ST   -Y,R31
000862 93ea      	ST   -Y,R30
000863 940e 1305 	CALL _delay_ms
000865 e0e0      	LDI  R30,LOW(0)
000866 93e0 027e 	STS  _sek,R30
000868 93e0 027f 	STS  _sek+1,R30
00086a da45      	RCALL _menu2
00086b e0e0      	LDI  R30,LOW(0)
00086c 93e0 027e 	STS  _sek,R30
00086e 93e0 027f 	STS  _sek+1,R30
                 ; 0000 022C 
                 ; 0000 022D                                     while(sek<4)
                 _0x6A:
000870 91a0 027e 	LDS  R26,_sek
000872 91b0 027f 	LDS  R27,_sek+1
000874 9714      	SBIW R26,4
000875 f014      	BRLT PC+3
000876 940c 0907 	JMP _0x6C
                 ; 0000 022E                                     {
                 ; 0000 022F                                     delay_ms(50);
000878 e3e2      	LDI  R30,LOW(50)
000879 e0f0      	LDI  R31,HIGH(50)
00087a 93fa      	ST   -Y,R31
00087b 93ea      	ST   -Y,R30
00087c 940e 1305 	CALL _delay_ms
                 ; 0000 0230                                     if((PINA.2==0)&&(percent[f][7-uoz_i]<100)) {sek=0; percent[f][7-uoz_i]++;menu2();} //редактируем значение
00087e e0a0      	LDI  R26,0
00087f 99ca      	SBIC 0x19,2
000880 e0a1      	LDI  R26,1
000881 30a0      	CPI  R26,LOW(0x0)
000882 f4e1      	BRNE _0x6E
000883 e0a2      	LDI  R26,LOW(_f)
000884 e0b0      	LDI  R27,HIGH(_f)
000885 940e 166d 	CALL __EEPROMRDW
000887 940e 15a3 	CALL __LSLW4
000889 5fec      	SUBI R30,LOW(-_percent)
00088a 4fff      	SBCI R31,HIGH(-_percent)
00088b 010f      	MOVW R0,R30
00088c 91a0 0278 	LDS  R26,_uoz_i
00088e 91b0 0279 	LDS  R27,_uoz_i+1
000890 e0e7      	LDI  R30,LOW(7)
000891 e0f0      	LDI  R31,HIGH(7)
000892 1bea      	SUB  R30,R26
000893 0bfb      	SBC  R31,R27
000894 01d0      	MOVW R26,R0
000895 0fee      	LSL  R30
000896 1fff      	ROL  R31
000897 0fae      	ADD  R26,R30
000898 1fbf      	ADC  R27,R31
000899 940e 166d 	CALL __EEPROMRDW
00089b 36e4      	CPI  R30,LOW(0x64)
00089c e0a0      	LDI  R26,HIGH(0x64)
00089d 07fa      	CPC  R31,R26
00089e f00c      	BRLT _0x6F
                 _0x6E:
00089f c022      	RJMP _0x6D
                 _0x6F:
0008a0 e0e0      	LDI  R30,LOW(0)
0008a1 93e0 027e 	STS  _sek,R30
0008a3 93e0 027f 	STS  _sek+1,R30
0008a5 e0a2      	LDI  R26,LOW(_f)
0008a6 e0b0      	LDI  R27,HIGH(_f)
0008a7 940e 166d 	CALL __EEPROMRDW
0008a9 940e 15a3 	CALL __LSLW4
0008ab 5fec      	SUBI R30,LOW(-_percent)
0008ac 4fff      	SBCI R31,HIGH(-_percent)
0008ad 010f      	MOVW R0,R30
0008ae 91a0 0278 	LDS  R26,_uoz_i
0008b0 91b0 0279 	LDS  R27,_uoz_i+1
0008b2 e0e7      	LDI  R30,LOW(7)
0008b3 e0f0      	LDI  R31,HIGH(7)
0008b4 1bea      	SUB  R30,R26
0008b5 0bfb      	SBC  R31,R27
0008b6 01d0      	MOVW R26,R0
0008b7 0fee      	LSL  R30
0008b8 1fff      	ROL  R31
0008b9 0fae      	ADD  R26,R30
0008ba 1fbf      	ADC  R27,R31
0008bb 940e 166d 	CALL __EEPROMRDW
0008bd 9631      	ADIW R30,1
0008be 940e 167d 	CALL __EEPROMWRW
0008c0 9731      	SBIW R30,1
0008c1 d9ee      	RCALL _menu2
                 ; 0000 0231                                     if((PINA.1==0)&&(percent[f][7-uoz_i]>0))   {sek=0; percent[f][7-uoz_i]--;menu2();}
                 _0x6D:
0008c2 e0a0      	LDI  R26,0
0008c3 99c9      	SBIC 0x19,1
0008c4 e0a1      	LDI  R26,1
0008c5 30a0      	CPI  R26,LOW(0x0)
0008c6 f4e1      	BRNE _0x71
0008c7 e0a2      	LDI  R26,LOW(_f)
0008c8 e0b0      	LDI  R27,HIGH(_f)
0008c9 940e 166d 	CALL __EEPROMRDW
0008cb 940e 15a3 	CALL __LSLW4
0008cd 5fec      	SUBI R30,LOW(-_percent)
0008ce 4fff      	SBCI R31,HIGH(-_percent)
0008cf 010f      	MOVW R0,R30
0008d0 91a0 0278 	LDS  R26,_uoz_i
0008d2 91b0 0279 	LDS  R27,_uoz_i+1
0008d4 e0e7      	LDI  R30,LOW(7)
0008d5 e0f0      	LDI  R31,HIGH(7)
0008d6 1bea      	SUB  R30,R26
0008d7 0bfb      	SBC  R31,R27
0008d8 01d0      	MOVW R26,R0
0008d9 0fee      	LSL  R30
0008da 1fff      	ROL  R31
0008db 0fae      	ADD  R26,R30
0008dc 1fbf      	ADC  R27,R31
0008dd 940e 166d 	CALL __EEPROMRDW
0008df 01df      	MOVW R26,R30
0008e0 940e 169a 	CALL __CPW02
0008e2 f00c      	BRLT _0x72
                 _0x71:
0008e3 c022      	RJMP _0x70
                 _0x72:
0008e4 e0e0      	LDI  R30,LOW(0)
0008e5 93e0 027e 	STS  _sek,R30
0008e7 93e0 027f 	STS  _sek+1,R30
0008e9 e0a2      	LDI  R26,LOW(_f)
0008ea e0b0      	LDI  R27,HIGH(_f)
0008eb 940e 166d 	CALL __EEPROMRDW
0008ed 940e 15a3 	CALL __LSLW4
0008ef 5fec      	SUBI R30,LOW(-_percent)
0008f0 4fff      	SBCI R31,HIGH(-_percent)
0008f1 010f      	MOVW R0,R30
0008f2 91a0 0278 	LDS  R26,_uoz_i
0008f4 91b0 0279 	LDS  R27,_uoz_i+1
0008f6 e0e7      	LDI  R30,LOW(7)
0008f7 e0f0      	LDI  R31,HIGH(7)
0008f8 1bea      	SUB  R30,R26
0008f9 0bfb      	SBC  R31,R27
0008fa 01d0      	MOVW R26,R0
0008fb 0fee      	LSL  R30
0008fc 1fff      	ROL  R31
0008fd 0fae      	ADD  R26,R30
0008fe 1fbf      	ADC  R27,R31
0008ff 940e 166d 	CALL __EEPROMRDW
000901 9731      	SBIW R30,1
000902 940e 167d 	CALL __EEPROMWRW
000904 9631      	ADIW R30,1
000905 d9aa      	RCALL _menu2
                 ; 0000 0232                                     }
                 _0x70:
000906 cf69      	RJMP _0x6A
                 _0x6C:
                 ; 0000 0233                             }
                 ; 0000 0234                    }
                 _0x69:
000907 ced1      	RJMP _0x59
                 _0x5B:
                 ; 0000 0235 
                 ; 0000 0236             ob_min=0;
000908 e0e0      	LDI  R30,LOW(0)
000909 93e0 0280 	STS  _ob_min,R30
00090b 93e0 0281 	STS  _ob_min+1,R30
                 ; 0000 0237             sek=0;}
00090d 93e0 027e 	STS  _sek,R30
00090f 93e0 027f 	STS  _sek+1,R30
                 ; 0000 0238 
                 ; 0000 0239            // смена режима
                 ; 0000 023A   if(PINA.3==0)             // если кнопка нажата
                 _0x58:
000911 99cb      	SBIC 0x19,3
000912 c05c      	RJMP _0x73
                 ; 0000 023B             {
                 ; 0000 023C              delay_ms(100);
000913 e6e4      	LDI  R30,LOW(100)
000914 e0f0      	LDI  R31,HIGH(100)
000915 93fa      	ST   -Y,R31
000916 93ea      	ST   -Y,R30
000917 940e 1305 	CALL _delay_ms
                 ; 0000 023D 
                 ; 0000 023E              while(PINA.3==0)
                 _0x74:
000919 99cb      	SBIC 0x19,3
00091a c017      	RJMP _0x76
                 ; 0000 023F                  {
                 ; 0000 0240                   if(sek>4)
00091b 91a0 027e 	LDS  R26,_sek
00091d 91b0 027f 	LDS  R27,_sek+1
00091f 9715      	SBIW R26,5
000920 f084      	BRLT _0x77
                 ; 0000 0241                   {
                 ; 0000 0242                   lcd_clear();
000921 940e 10d8 	CALL _lcd_clear
                 ; 0000 0243                   lcd_puts("s_lit \x40  ukr.net");
                +
000923 e2e8     +LDI R30 , LOW ( _0x2D + ( 168 ) )
000924 e0f2     +LDI R31 , HIGH ( _0x2D + ( 168 ) )
                 	__POINTW1MN _0x2D,168
000925 93fa      	ST   -Y,R31
000926 93ea      	ST   -Y,R30
000927 940e 110d 	CALL _lcd_puts
                 ; 0000 0244                   delay_ms(2000);
000929 ede0      	LDI  R30,LOW(2000)
00092a e0f7      	LDI  R31,HIGH(2000)
00092b 93fa      	ST   -Y,R31
00092c 93ea      	ST   -Y,R30
00092d 940e 1305 	CALL _delay_ms
                 ; 0000 0245                    lcd_clear();
00092f 940e 10d8 	CALL _lcd_clear
                 ; 0000 0246 
                 ; 0000 0247                    }
                 ; 0000 0248                   }
                 _0x77:
000931 cfe7      	RJMP _0x74
                 _0x76:
                 ; 0000 0249             if(sek<2)
000932 91a0 027e 	LDS  R26,_sek
000934 91b0 027f 	LDS  R27,_sek+1
000936 9712      	SBIW R26,2
000937 f574      	BRGE _0x78
                 ; 0000 024A             if((oboroty<1100))
000938 e4ec      	LDI  R30,LOW(1100)
000939 e0f4      	LDI  R31,HIGH(1100)
00093a 16ae      	CP   R10,R30
00093b 06bf      	CPC  R11,R31
00093c f4b4      	BRGE _0x79
                 ; 0000 024B             {
                 ; 0000 024C             if(f<3) f++;
00093d e0a2      	LDI  R26,LOW(_f)
00093e e0b0      	LDI  R27,HIGH(_f)
00093f 940e 166d 	CALL __EEPROMRDW
000941 9733      	SBIW R30,3
000942 f44c      	BRGE _0x7A
000943 e0a2      	LDI  R26,LOW(_f)
000944 e0b0      	LDI  R27,HIGH(_f)
000945 940e 166d 	CALL __EEPROMRDW
000947 9631      	ADIW R30,1
000948 940e 167d 	CALL __EEPROMWRW
00094a 9731      	SBIW R30,1
                 ; 0000 024D             else f=0;
00094b c006      	RJMP _0x7B
                 _0x7A:
00094c e0a2      	LDI  R26,LOW(_f)
00094d e0b0      	LDI  R27,HIGH(_f)
00094e e0e0      	LDI  R30,LOW(0)
00094f e0f0      	LDI  R31,HIGH(0)
000950 940e 167d 	CALL __EEPROMWRW
                 ; 0000 024E             }
                 _0x7B:
                 ; 0000 024F             else {
000952 c013      	RJMP _0x7C
                 _0x79:
                 ; 0000 0250             sek=0;
000953 e0e0      	LDI  R30,LOW(0)
000954 93e0 027e 	STS  _sek,R30
000956 93e0 027f 	STS  _sek+1,R30
                 ; 0000 0251             lcd_clear();
000958 940e 10d8 	CALL _lcd_clear
                 ; 0000 0252             //////////Сбрось обороты
                 ; 0000 0253             lcd_puts("\x43\xB2\x70\x6F\x63\xC4  \x6F\xB2\x6F\x70\x6F\xBF\xC3");
                +
00095a e3e9     +LDI R30 , LOW ( _0x2D + ( 185 ) )
00095b e0f2     +LDI R31 , HIGH ( _0x2D + ( 185 ) )
                 	__POINTW1MN _0x2D,185
00095c 93fa      	ST   -Y,R31
00095d 93ea      	ST   -Y,R30
00095e 940e 110d 	CALL _lcd_puts
                 ; 0000 0254             delay_ms(400);
000960 e9e0      	LDI  R30,LOW(400)
000961 e0f1      	LDI  R31,HIGH(400)
000962 93fa      	ST   -Y,R31
000963 93ea      	ST   -Y,R30
000964 940e 1305 	CALL _delay_ms
                 ; 0000 0255             }
                 _0x7C:
                 ; 0000 0256 
                 ; 0000 0257             ob_min=0;
                 _0x78:
000966 e0e0      	LDI  R30,LOW(0)
000967 93e0 0280 	STS  _ob_min,R30
000969 93e0 0281 	STS  _ob_min+1,R30
                 ; 0000 0258             sek=0;
00096b 93e0 027e 	STS  _sek,R30
00096d 93e0 027f 	STS  _sek+1,R30
                 ; 0000 0259             }
                 ; 0000 025A 
                 ; 0000 025B 
                 ; 0000 025C /////////////////////// индикация по времени
                 ; 0000 025D 
                 ; 0000 025E if (sek>1)
                 _0x73:
00096f 91a0 027e 	LDS  R26,_sek
000971 91b0 027f 	LDS  R27,_sek+1
000973 9712      	SBIW R26,2
000974 f414      	BRGE PC+3
000975 940c 0ab2 	JMP _0x7D
                 ; 0000 025F          {
                 ; 0000 0260         sek=0;    // ob_min*30
000977 e0e0      	LDI  R30,LOW(0)
000978 93e0 027e 	STS  _sek,R30
00097a 93e0 027f 	STS  _sek+1,R30
                 ; 0000 0261         oboroty=ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min+ob_min;
00097c 91e0 0280 	LDS  R30,_ob_min
00097e 91f0 0281 	LDS  R31,_ob_min+1
000980 0fee      	LSL  R30
000981 1fff      	ROL  R31
000982 91a0 0280 	LDS  R26,_ob_min
000984 91b0 0281 	LDS  R27,_ob_min+1
000986 0fea      	ADD  R30,R26
000987 1ffb      	ADC  R31,R27
000988 0fea      	ADD  R30,R26
000989 1ffb      	ADC  R31,R27
00098a 0fea      	ADD  R30,R26
00098b 1ffb      	ADC  R31,R27
00098c 0fea      	ADD  R30,R26
00098d 1ffb      	ADC  R31,R27
00098e 0fea      	ADD  R30,R26
00098f 1ffb      	ADC  R31,R27
000990 0fea      	ADD  R30,R26
000991 1ffb      	ADC  R31,R27
000992 0fea      	ADD  R30,R26
000993 1ffb      	ADC  R31,R27
000994 0fea      	ADD  R30,R26
000995 1ffb      	ADC  R31,R27
000996 0fea      	ADD  R30,R26
000997 1ffb      	ADC  R31,R27
000998 0fea      	ADD  R30,R26
000999 1ffb      	ADC  R31,R27
00099a 0fea      	ADD  R30,R26
00099b 1ffb      	ADC  R31,R27
00099c 0fea      	ADD  R30,R26
00099d 1ffb      	ADC  R31,R27
00099e 0fea      	ADD  R30,R26
00099f 1ffb      	ADC  R31,R27
0009a0 0fea      	ADD  R30,R26
0009a1 1ffb      	ADC  R31,R27
0009a2 0fea      	ADD  R30,R26
0009a3 1ffb      	ADC  R31,R27
0009a4 0fea      	ADD  R30,R26
0009a5 1ffb      	ADC  R31,R27
0009a6 0fea      	ADD  R30,R26
0009a7 1ffb      	ADC  R31,R27
0009a8 0fea      	ADD  R30,R26
0009a9 1ffb      	ADC  R31,R27
0009aa 0fea      	ADD  R30,R26
0009ab 1ffb      	ADC  R31,R27
0009ac 0fea      	ADD  R30,R26
0009ad 1ffb      	ADC  R31,R27
0009ae 0fea      	ADD  R30,R26
0009af 1ffb      	ADC  R31,R27
0009b0 0fea      	ADD  R30,R26
0009b1 1ffb      	ADC  R31,R27
0009b2 0fea      	ADD  R30,R26
0009b3 1ffb      	ADC  R31,R27
0009b4 0fea      	ADD  R30,R26
0009b5 1ffb      	ADC  R31,R27
0009b6 0fea      	ADD  R30,R26
0009b7 1ffb      	ADC  R31,R27
0009b8 0fea      	ADD  R30,R26
0009b9 1ffb      	ADC  R31,R27
0009ba 0fea      	ADD  R30,R26
0009bb 1ffb      	ADC  R31,R27
0009bc 0fea      	ADD  R30,R26
0009bd 1ffb      	ADC  R31,R27
0009be 015f      	MOVW R10,R30
                 ; 0000 0262         ob_min=0;
0009bf e0e0      	LDI  R30,LOW(0)
0009c0 93e0 0280 	STS  _ob_min,R30
0009c2 93e0 0281 	STS  _ob_min+1,R30
                 ; 0000 0263 
                 ; 0000 0264 
                 ; 0000 0265         temp_buf=ds18b20_temperature(&RomCode[0][0]);//чтение температуры 1 датчика
0009c4 e5e6      	LDI  R30,LOW(_RomCode)
0009c5 e0f2      	LDI  R31,HIGH(_RomCode)
0009c6 93fa      	ST   -Y,R31
0009c7 93ea      	ST   -Y,R30
0009c8 940e 0fec 	CALL _ds18b20_temperature
0009ca e8a6      	LDI  R26,LOW(_temp_buf)
0009cb e0b2      	LDI  R27,HIGH(_temp_buf)
0009cc 940e 141f 	CALL __CFD1
0009ce 93ed      	ST   X+,R30
0009cf 93fc      	ST   X,R31
                 ; 0000 0266         if(temp_buf>0) temp1=temp_buf;
0009d0 91a0 0286 	LDS  R26,_temp_buf
0009d2 91b0 0287 	LDS  R27,_temp_buf+1
0009d4 940e 169a 	CALL __CPW02
0009d6 f444      	BRGE _0x7E
0009d7 91e0 0286 	LDS  R30,_temp_buf
0009d9 91f0 0287 	LDS  R31,_temp_buf+1
0009db 93e0 0282 	STS  _temp1,R30
0009dd 93f0 0283 	STS  _temp1+1,R31
                 ; 0000 0267 
                 ; 0000 0268 
                 ; 0000 0269         temp_buf=ds18b20_temperature(&RomCode[1][0]);//чтение температуры 2 датчика
                 _0x7E:
                +
0009df e5ef     +LDI R30 , LOW ( _RomCode + ( 9 ) )
0009e0 e0f2     +LDI R31 , HIGH ( _RomCode + ( 9 ) )
                 	__POINTW1MN _RomCode,9
0009e1 93fa      	ST   -Y,R31
0009e2 93ea      	ST   -Y,R30
0009e3 940e 0fec 	CALL _ds18b20_temperature
0009e5 e8a6      	LDI  R26,LOW(_temp_buf)
0009e6 e0b2      	LDI  R27,HIGH(_temp_buf)
0009e7 940e 141f 	CALL __CFD1
0009e9 93ed      	ST   X+,R30
0009ea 93fc      	ST   X,R31
                 ; 0000 026A         if(temp_buf>0) temp2=temp_buf;
0009eb 91a0 0286 	LDS  R26,_temp_buf
0009ed 91b0 0287 	LDS  R27,_temp_buf+1
0009ef 940e 169a 	CALL __CPW02
0009f1 f444      	BRGE _0x7F
0009f2 91e0 0286 	LDS  R30,_temp_buf
0009f4 91f0 0287 	LDS  R31,_temp_buf+1
0009f6 93e0 0284 	STS  _temp2,R30
0009f8 93f0 0285 	STS  _temp2+1,R31
                 ; 0000 026B 
                 ; 0000 026C 
                 ; 0000 026D         lcd_gotoxy(0,0);
                 _0x7F:
0009fa e0e0      	LDI  R30,LOW(0)
0009fb 93ea      	ST   -Y,R30
0009fc 93ea      	ST   -Y,R30
0009fd 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 026E         if(uoz_i>0) uoz_i--;
0009ff 91a0 0278 	LDS  R26,_uoz_i
000a01 91b0 0279 	LDS  R27,_uoz_i+1
000a03 940e 169a 	CALL __CPW02
000a05 f43c      	BRGE _0x80
000a06 e7a8      	LDI  R26,LOW(_uoz_i)
000a07 e0b2      	LDI  R27,HIGH(_uoz_i)
000a08 91ed      	LD   R30,X+
000a09 91fd      	LD   R31,X+
000a0a 9731      	SBIW R30,1
000a0b 93fe      	ST   -X,R31
000a0c 93ee      	ST   -X,R30
                 ; 0000 026F //        lcd_puts("O\xB2.  \xA9\xB4.");
                 ; 0000 0270         if(f<4)
                 _0x80:
000a0d e0a2      	LDI  R26,LOW(_f)
000a0e e0b0      	LDI  R27,HIGH(_f)
000a0f 940e 166d 	CALL __EEPROMRDW
000a11 9734      	SBIW R30,4
000a12 f014      	BRLT PC+3
000a13 940c 0a99 	JMP _0x81
                 ; 0000 0271         {
                 ; 0000 0272 
                 ; 0000 0273         /// показатели
                 ; 0000 0274 
                 ; 0000 0275 //        sprintf(buffer,"%d ",oboroty);  //показывает обороты (тыс в мин)
                 ; 0000 0276 //        lcd_puts(buffer);
                 ; 0000 0277 //        sprintf(buffer,"%d ",ob_y);  //показывает проход шторки в прерываниях
                 ; 0000 0278 //        lcd_puts(buffer);
                 ; 0000 0279 //        sprintf(buffer,"%d ",oper);  //показывает угол опережения в прерываниях
                 ; 0000 027A //        lcd_puts(buffer);
                 ; 0000 027B //        sprintf(buffer,"%d",percent[f][kk]);  //показывает угол опережения в %
                 ; 0000 027C //        lcd_puts(buffer);
                 ; 0000 027D //        lcd_puts("\x25   ");   // symbol %
                 ; 0000 027E 
                 ; 0000 027F         ////////////
                 ; 0000 0280 
                 ; 0000 0281 
                 ; 0000 0282      /////// standard screen
                 ; 0000 0283       sprintf(buffer,"     \xCE\x3D%d",f+1);  //первая строка (кк - показывает отрезок к которому относится прерывание)
000a15 e6e8      	LDI  R30,LOW(_buffer)
000a16 e0f2      	LDI  R31,HIGH(_buffer)
000a17 93fa      	ST   -Y,R31
000a18 93ea      	ST   -Y,R30
                +
000a19 eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 277 ) )
000a1a e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 277 ) )
                 	__POINTW1FN _0x0,277
000a1b 93fa      	ST   -Y,R31
000a1c 93ea      	ST   -Y,R30
000a1d e0a2      	LDI  R26,LOW(_f)
000a1e e0b0      	LDI  R27,HIGH(_f)
000a1f 940e 166d 	CALL __EEPROMRDW
000a21 9631      	ADIW R30,1
000a22 940e 15b2 	CALL __CWD1
000a24 940e 165b 	CALL __PUTPARD1
000a26 e084      	LDI  R24,4
000a27 940e 0f60 	CALL _sprintf
000a29 9628      	ADIW R28,8
                 ; 0000 0284       lcd_puts(buffer);
000a2a e6e8      	LDI  R30,LOW(_buffer)
000a2b e0f2      	LDI  R31,HIGH(_buffer)
000a2c 93fa      	ST   -Y,R31
000a2d 93ea      	ST   -Y,R30
000a2e 940e 110d 	CALL _lcd_puts
                 ; 0000 0285       sprintf(buffer," %d",kk);  //первая строка (кк - показывает отрезок к которому относится прерывание)
000a30 e6e8      	LDI  R30,LOW(_buffer)
000a31 e0f2      	LDI  R31,HIGH(_buffer)
000a32 93fa      	ST   -Y,R31
000a33 93ea      	ST   -Y,R30
                +
000a34 eae6     +LDI R30 , LOW ( 2 * _0x0 + ( 24 ) )
000a35 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW1FN _0x0,24
000a36 93fa      	ST   -Y,R31
000a37 93ea      	ST   -Y,R30
000a38 91e0 028a 	LDS  R30,_kk
000a3a 91f0 028b 	LDS  R31,_kk+1
000a3c 940e 15b2 	CALL __CWD1
000a3e 940e 165b 	CALL __PUTPARD1
000a40 e084      	LDI  R24,4
000a41 940e 0f60 	CALL _sprintf
000a43 9628      	ADIW R28,8
                 ; 0000 0286       lcd_puts(buffer);
000a44 e6e8      	LDI  R30,LOW(_buffer)
000a45 e0f2      	LDI  R31,HIGH(_buffer)
000a46 93fa      	ST   -Y,R31
000a47 93ea      	ST   -Y,R30
000a48 940e 110d 	CALL _lcd_puts
                 ; 0000 0287       lcd_gotoxy(0,1);
000a4a e0e0      	LDI  R30,LOW(0)
000a4b 93ea      	ST   -Y,R30
000a4c e0e1      	LDI  R30,LOW(1)
000a4d 93ea      	ST   -Y,R30
000a4e 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 0288       sprintf(buffer,"%d      ",oboroty);  //показывает обороты (тыс в мин)
000a50 e6e8      	LDI  R30,LOW(_buffer)
000a51 e0f2      	LDI  R31,HIGH(_buffer)
000a52 93fa      	ST   -Y,R31
000a53 93ea      	ST   -Y,R30
                +
000a54 e2e6     +LDI R30 , LOW ( 2 * _0x0 + ( 152 ) )
000a55 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 152 ) )
                 	__POINTW1FN _0x0,152
000a56 93fa      	ST   -Y,R31
000a57 93ea      	ST   -Y,R30
000a58 01f5      	MOVW R30,R10
000a59 940e 15b2 	CALL __CWD1
000a5b 940e 165b 	CALL __PUTPARD1
000a5d e084      	LDI  R24,4
000a5e 940e 0f60 	CALL _sprintf
000a60 9628      	ADIW R28,8
                 ; 0000 0289       lcd_puts(buffer);
000a61 e6e8      	LDI  R30,LOW(_buffer)
000a62 e0f2      	LDI  R31,HIGH(_buffer)
000a63 93fa      	ST   -Y,R31
000a64 93ea      	ST   -Y,R30
000a65 940e 110d 	CALL _lcd_puts
                 ; 0000 028A       lcd_gotoxy(5,1);
000a67 e0e5      	LDI  R30,LOW(5)
000a68 93ea      	ST   -Y,R30
000a69 e0e1      	LDI  R30,LOW(1)
000a6a 93ea      	ST   -Y,R30
000a6b 940e 10c9 	CALL _lcd_gotoxy
                 ; 0000 028B       sprintf(buffer,"%d",percent[f][kk]);  //показывает угол опережения в %
000a6d e6e8      	LDI  R30,LOW(_buffer)
000a6e e0f2      	LDI  R31,HIGH(_buffer)
000a6f 93fa      	ST   -Y,R31
000a70 93ea      	ST   -Y,R30
                +
000a71 e9e4     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
000a72 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000a73 93fa      	ST   -Y,R31
000a74 93ea      	ST   -Y,R30
000a75 e0a2      	LDI  R26,LOW(_f)
000a76 e0b0      	LDI  R27,HIGH(_f)
000a77 940e 166d 	CALL __EEPROMRDW
000a79 940e 15a3 	CALL __LSLW4
000a7b 5fec      	SUBI R30,LOW(-_percent)
000a7c 4fff      	SBCI R31,HIGH(-_percent)
000a7d 01df      	MOVW R26,R30
000a7e 91e0 028a 	LDS  R30,_kk
000a80 91f0 028b 	LDS  R31,_kk+1
000a82 0fee      	LSL  R30
000a83 1fff      	ROL  R31
000a84 0fae      	ADD  R26,R30
000a85 1fbf      	ADC  R27,R31
000a86 940e 166d 	CALL __EEPROMRDW
000a88 940e 15b2 	CALL __CWD1
000a8a 940e 165b 	CALL __PUTPARD1
000a8c e084      	LDI  R24,4
000a8d 940e 0f60 	CALL _sprintf
000a8f 9628      	ADIW R28,8
                 ; 0000 028C       lcd_puts(buffer);
000a90 e6e8      	LDI  R30,LOW(_buffer)
000a91 e0f2      	LDI  R31,HIGH(_buffer)
000a92 93fa      	ST   -Y,R31
000a93 93ea      	ST   -Y,R30
000a94 940e 110d 	CALL _lcd_puts
                 ; 0000 028D       lcd_puts("\x25  ");   // symbol %
                +
000a96 e4e9     +LDI R30 , LOW ( _0x2D + ( 201 ) )
000a97 e0f2     +LDI R31 , HIGH ( _0x2D + ( 201 ) )
                 	__POINTW1MN _0x2D,201
000a98 c015      	RJMP _0x88
                 ; 0000 028E       ///////////////////////
                 ; 0000 028F 
                 ; 0000 0290 
                 ; 0000 0291 
                 ; 0000 0292       //  sprintf(buffer,"%d ",ob_y);  //показывает проход шторки в прерываниях
                 ; 0000 0293       //sprintf(buffer,"%d      ",ob_min*30);  //показывает обороты (тыс в мин)
                 ; 0000 0294       //sprintf(buffer,"%d      ",ob_y);  //показывает проход шторки в прерываниях
                 ; 0000 0295       // sprintf(buffer,"%d\x27",60*OC/ob_y);  //  показывает угол опережения  (в градусах)
                 ; 0000 0296       // sprintf(buffer,"%d      ",OC);  //показывает угол опережения в прерываниях
                 ; 0000 0297       // sprintf(buffer,"%d",45*percent[kk][f]/100);  //показывает угол опережения в градусах
                 ; 0000 0298 
                 ; 0000 0299       // lcd_puts("\x27");   // symbol '
                 ; 0000 029A       // lcd_puts("\xDF");   // symbol `
                 ; 0000 029B            }
                 ; 0000 029C         else {   //отключен ФУОЗ, обороты считаются по факту
                 _0x81:
                 ; 0000 029D          lcd_clear();
000a99 940e 10d8 	CALL _lcd_clear
                 ; 0000 029E          sprintf(buffer,"    \xB3\xC3\xBA\xBB%d",oboroty);  //показывает обороты (тыс в мин
000a9b e6e8      	LDI  R30,LOW(_buffer)
000a9c e0f2      	LDI  R31,HIGH(_buffer)
000a9d 93fa      	ST   -Y,R31
000a9e 93ea      	ST   -Y,R30
                +
000a9f ebe1     +LDI R30 , LOW ( 2 * _0x0 + ( 291 ) )
000aa0 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 291 ) )
                 	__POINTW1FN _0x0,291
000aa1 93fa      	ST   -Y,R31
000aa2 93ea      	ST   -Y,R30
000aa3 01f5      	MOVW R30,R10
000aa4 940e 15b2 	CALL __CWD1
000aa6 940e 165b 	CALL __PUTPARD1
000aa8 e084      	LDI  R24,4
000aa9 940e 0f60 	CALL _sprintf
000aab 9628      	ADIW R28,8
                 ; 0000 029F          lcd_puts(buffer);
000aac e6e8      	LDI  R30,LOW(_buffer)
000aad e0f2      	LDI  R31,HIGH(_buffer)
                 _0x88:
000aae 93fa      	ST   -Y,R31
000aaf 93ea      	ST   -Y,R30
000ab0 940e 110d 	CALL _lcd_puts
                 ; 0000 02A0               }
                 ; 0000 02A1 
                 ; 0000 02A2          }
                 ; 0000 02A3 
                 ; 0000 02A4       };
                 _0x7D:
000ab2 cc4b      	RJMP _0x3F
                 ; 0000 02A5 
                 ; 0000 02A6     }
                 _0x83:
000ab3 cfff      	RJMP _0x83
                 
                 	.DSEG
                 _0x2D:
000180           	.BYTE 0xCD
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
000ab4 931a      	ST   -Y,R17
000ab5 930a      	ST   -Y,R16
000ab6 81aa      	LDD  R26,Y+2
000ab7 81bb      	LDD  R27,Y+2+1
000ab8 9612      	ADIW R26,2
000ab9 940e 1643 	CALL __GETW1P
000abb 9730      	SBIW R30,0
000abc f159      	BREQ _0x2000010
000abd 81aa      	LDD  R26,Y+2
000abe 81bb      	LDD  R27,Y+2+1
000abf 9614      	ADIW R26,4
000ac0 940e 1643 	CALL __GETW1P
000ac2 018f      	MOVW R16,R30
000ac3 9730      	SBIW R30,0
000ac4 f061      	BREQ _0x2000012
                +
000ac5 3002     +CPI R16 , LOW ( 2 )
000ac6 e0e0     +LDI R30 , HIGH ( 2 )
000ac7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000ac8 f0f0      	BRLO _0x2000013
000ac9 01f8      	MOVW R30,R16
000aca 9731      	SBIW R30,1
000acb 018f      	MOVW R16,R30
                +
000acc 81aa     +LDD R26 , Y + 2
000acd 81bb     +LDD R27 , Y + 2 + 1
000ace 9614     +ADIW R26 , 4
000acf 93ed     +ST X + , R30
000ad0 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000ad1 81aa      	LDD  R26,Y+2
000ad2 81bb      	LDD  R27,Y+2+1
000ad3 9612      	ADIW R26,2
000ad4 91ed      	LD   R30,X+
000ad5 91fd      	LD   R31,X+
000ad6 9631      	ADIW R30,1
000ad7 93fe      	ST   -X,R31
000ad8 93ee      	ST   -X,R30
000ad9 9731      	SBIW R30,1
000ada 81ac      	LDD  R26,Y+4
000adb 83a0      	STD  Z+0,R26
000adc 81aa      	LDD  R26,Y+2
000add 81bb      	LDD  R27,Y+2+1
000ade 940e 1643 	CALL __GETW1P
000ae0 23ff      	TST  R31
000ae1 f02a      	BRMI _0x2000014
000ae2 91ed      	LD   R30,X+
000ae3 91fd      	LD   R31,X+
000ae4 9631      	ADIW R30,1
000ae5 93fe      	ST   -X,R31
000ae6 93ee      	ST   -X,R30
                 _0x2000014:
                 _0x2000013:
000ae7 c006      	RJMP _0x2000015
                 _0x2000010:
000ae8 81aa      	LDD  R26,Y+2
000ae9 81bb      	LDD  R27,Y+2+1
000aea efef      	LDI  R30,LOW(65535)
000aeb efff      	LDI  R31,HIGH(65535)
000aec 93ed      	ST   X+,R30
000aed 93fc      	ST   X,R31
                 _0x2000015:
000aee 8119      	LDD  R17,Y+1
000aef 8108      	LDD  R16,Y+0
000af0 c5a4      	RJMP _0x20E0006
                 __ftoe_G100:
000af1 9724      	SBIW R28,4
000af2 e0e0      	LDI  R30,LOW(0)
000af3 83e8      	ST   Y,R30
000af4 83e9      	STD  Y+1,R30
000af5 e8e0      	LDI  R30,LOW(128)
000af6 83ea      	STD  Y+2,R30
000af7 e3ef      	LDI  R30,LOW(63)
000af8 83eb      	STD  Y+3,R30
000af9 940e 16a0 	CALL __SAVELOCR4
000afb 85ee      	LDD  R30,Y+14
000afc 85ff      	LDD  R31,Y+14+1
000afd 3fef      	CPI  R30,LOW(0xFFFF)
000afe efaf      	LDI  R26,HIGH(0xFFFF)
000aff 07fa      	CPC  R31,R26
000b00 f459      	BRNE _0x2000019
000b01 85e8      	LDD  R30,Y+8
000b02 85f9      	LDD  R31,Y+8+1
000b03 93fa      	ST   -Y,R31
000b04 93ea      	ST   -Y,R30
                +
000b05 ebec     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
000b06 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000b07 93fa      	ST   -Y,R31
000b08 93ea      	ST   -Y,R30
000b09 940e 1170 	CALL _strcpyf
000b0b c149      	RJMP _0x20E0009
                 _0x2000019:
000b0c 3fef      	CPI  R30,LOW(0x7FFF)
000b0d e7af      	LDI  R26,HIGH(0x7FFF)
000b0e 07fa      	CPC  R31,R26
000b0f f459      	BRNE _0x2000018
000b10 85e8      	LDD  R30,Y+8
000b11 85f9      	LDD  R31,Y+8+1
000b12 93fa      	ST   -Y,R31
000b13 93ea      	ST   -Y,R30
                +
000b14 ebed     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
000b15 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
000b16 93fa      	ST   -Y,R31
000b17 93ea      	ST   -Y,R30
000b18 940e 1170 	CALL _strcpyf
000b1a c13a      	RJMP _0x20E0009
                 _0x2000018:
000b1b 85ab      	LDD  R26,Y+11
000b1c 30a7      	CPI  R26,LOW(0x7)
000b1d f010      	BRLO _0x200001B
000b1e e0e6      	LDI  R30,LOW(6)
000b1f 87eb      	STD  Y+11,R30
                 _0x200001B:
000b20 851b      	LDD  R17,Y+11
                 _0x200001C:
000b21 2fe1      	MOV  R30,R17
000b22 5011      	SUBI R17,1
000b23 30e0      	CPI  R30,0
000b24 f079      	BREQ _0x200001E
                +
000b25 81ac     +LDD R26 , Y + 4
000b26 81bd     +LDD R27 , Y + 4 + 1
000b27 818e     +LDD R24 , Y + 4 + 2
000b28 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000b29 e0e0     +LDI R30 , LOW ( 0x41200000 )
000b2a e0f0     +LDI R31 , HIGH ( 0x41200000 )
000b2b e260     +LDI R22 , BYTE3 ( 0x41200000 )
000b2c e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000b2d 940e 14e0 	CALL __MULF12
                +
000b2f 83ec     +STD Y + 4 , R30
000b30 83fd     +STD Y + 4 + 1 , R31
000b31 836e     +STD Y + 4 + 2 , R22
000b32 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000b33 cfed      	RJMP _0x200001C
                 _0x200001E:
                +
000b34 85ec     +LDD R30 , Y + 12
000b35 85fd     +LDD R31 , Y + 12 + 1
000b36 856e     +LDD R22 , Y + 12 + 2
000b37 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000b38 940e 1696 	CALL __CPD10
000b3a f481      	BRNE _0x200001F
000b3b e030      	LDI  R19,LOW(0)
                +
000b3c 81ac     +LDD R26 , Y + 4
000b3d 81bd     +LDD R27 , Y + 4 + 1
000b3e 818e     +LDD R24 , Y + 4 + 2
000b3f 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000b40 e0e0     +LDI R30 , LOW ( 0x41200000 )
000b41 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000b42 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000b43 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000b44 940e 14e0 	CALL __MULF12
                +
000b46 83ec     +STD Y + 4 , R30
000b47 83fd     +STD Y + 4 + 1 , R31
000b48 836e     +STD Y + 4 + 2 , R22
000b49 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000b4a c07e      	RJMP _0x2000020
                 _0x200001F:
000b4b 853b      	LDD  R19,Y+11
                +
000b4c 81ec     +LDD R30 , Y + 4
000b4d 81fd     +LDD R31 , Y + 4 + 1
000b4e 816e     +LDD R22 , Y + 4 + 2
000b4f 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000b50 85ac     +LDD R26 , Y + 12
000b51 85bd     +LDD R27 , Y + 12 + 1
000b52 858e     +LDD R24 , Y + 12 + 2
000b53 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000b54 940e 1573 	CALL __CMPF12
000b56 f009      	BREQ PC+2
000b57 f410      	BRCC PC+3
000b58 940c 0b80 	JMP  _0x2000021
                +
000b5a 81ac     +LDD R26 , Y + 4
000b5b 81bd     +LDD R27 , Y + 4 + 1
000b5c 818e     +LDD R24 , Y + 4 + 2
000b5d 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000b5e e0e0     +LDI R30 , LOW ( 0x41200000 )
000b5f e0f0     +LDI R31 , HIGH ( 0x41200000 )
000b60 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000b61 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000b62 940e 14e0 	CALL __MULF12
                +
000b64 83ec     +STD Y + 4 , R30
000b65 83fd     +STD Y + 4 + 1 , R31
000b66 836e     +STD Y + 4 + 2 , R22
000b67 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x2000022:
                +
000b68 81ec     +LDD R30 , Y + 4
000b69 81fd     +LDD R31 , Y + 4 + 1
000b6a 816e     +LDD R22 , Y + 4 + 2
000b6b 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000b6c 85ac     +LDD R26 , Y + 12
000b6d 85bd     +LDD R27 , Y + 12 + 1
000b6e 858e     +LDD R24 , Y + 12 + 2
000b6f 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000b70 940e 1573 	CALL __CMPF12
000b72 f060      	BRLO _0x2000024
                +
000b73 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000b74 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000b75 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000b76 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000b77 940e 14e0 	CALL __MULF12
                +
000b79 87ec     +STD Y + 12 , R30
000b7a 87fd     +STD Y + 12 + 1 , R31
000b7b 876e     +STD Y + 12 + 2 , R22
000b7c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000b7d 5f3f      	SUBI R19,-LOW(1)
000b7e cfe9      	RJMP _0x2000022
                 _0x2000024:
000b7f c025      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
                +
000b80 81ec     +LDD R30 , Y + 4
000b81 81fd     +LDD R31 , Y + 4 + 1
000b82 816e     +LDD R22 , Y + 4 + 2
000b83 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000b84 85ac     +LDD R26 , Y + 12
000b85 85bd     +LDD R27 , Y + 12 + 1
000b86 858e     +LDD R24 , Y + 12 + 2
000b87 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000b88 940e 1573 	CALL __CMPF12
000b8a f460      	BRSH _0x2000028
                +
000b8b e0e0     +LDI R30 , LOW ( 0x41200000 )
000b8c e0f0     +LDI R31 , HIGH ( 0x41200000 )
000b8d e260     +LDI R22 , BYTE3 ( 0x41200000 )
000b8e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000b8f 940e 14e0 	CALL __MULF12
                +
000b91 87ec     +STD Y + 12 , R30
000b92 87fd     +STD Y + 12 + 1 , R31
000b93 876e     +STD Y + 12 + 2 , R22
000b94 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000b95 5031      	SUBI R19,LOW(1)
000b96 cfe9      	RJMP _0x2000026
                 _0x2000028:
                +
000b97 81ac     +LDD R26 , Y + 4
000b98 81bd     +LDD R27 , Y + 4 + 1
000b99 818e     +LDD R24 , Y + 4 + 2
000b9a 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000b9b e0e0     +LDI R30 , LOW ( 0x41200000 )
000b9c e0f0     +LDI R31 , HIGH ( 0x41200000 )
000b9d e260     +LDI R22 , BYTE3 ( 0x41200000 )
000b9e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000b9f 940e 14e0 	CALL __MULF12
                +
000ba1 83ec     +STD Y + 4 , R30
000ba2 83fd     +STD Y + 4 + 1 , R31
000ba3 836e     +STD Y + 4 + 2 , R22
000ba4 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x2000025:
                +
000ba5 85ec     +LDD R30 , Y + 12
000ba6 85fd     +LDD R31 , Y + 12 + 1
000ba7 856e     +LDD R22 , Y + 12 + 2
000ba8 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
000ba9 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000baa e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000bab e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000bac e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000bad 940e 1490 	CALL __ADDF12
                +
000baf 87ec     +STD Y + 12 , R30
000bb0 87fd     +STD Y + 12 + 1 , R31
000bb1 876e     +STD Y + 12 + 2 , R22
000bb2 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                +
000bb3 81ec     +LDD R30 , Y + 4
000bb4 81fd     +LDD R31 , Y + 4 + 1
000bb5 816e     +LDD R22 , Y + 4 + 2
000bb6 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000bb7 85ac     +LDD R26 , Y + 12
000bb8 85bd     +LDD R27 , Y + 12 + 1
000bb9 858e     +LDD R24 , Y + 12 + 2
000bba 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000bbb 940e 1573 	CALL __CMPF12
000bbd f058      	BRLO _0x2000029
                +
000bbe eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000bbf ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000bc0 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000bc1 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000bc2 940e 14e0 	CALL __MULF12
                +
000bc4 87ec     +STD Y + 12 , R30
000bc5 87fd     +STD Y + 12 + 1 , R31
000bc6 876e     +STD Y + 12 + 2 , R22
000bc7 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000bc8 5f3f      	SUBI R19,-LOW(1)
                 _0x2000029:
                 _0x2000020:
000bc9 e010      	LDI  R17,LOW(0)
                 _0x200002A:
000bca 85eb      	LDD  R30,Y+11
000bcb 17e1      	CP   R30,R17
000bcc f410      	BRSH PC+3
000bcd 940c 0c1f 	JMP _0x200002C
                +
000bcf 81ac     +LDD R26 , Y + 4
000bd0 81bd     +LDD R27 , Y + 4 + 1
000bd1 818e     +LDD R24 , Y + 4 + 2
000bd2 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000bd3 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000bd4 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000bd5 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000bd6 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000bd7 940e 14e0 	CALL __MULF12
                +
000bd9 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000bda e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000bdb e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000bdc e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000bdd 940e 1490 	CALL __ADDF12
000bdf 940e 165b 	CALL __PUTPARD1
000be1 940e 11bf 	CALL _floor
                +
000be3 83ec     +STD Y + 4 , R30
000be4 83fd     +STD Y + 4 + 1 , R31
000be5 836e     +STD Y + 4 + 2 , R22
000be6 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
000be7 85ac     +LDD R26 , Y + 12
000be8 85bd     +LDD R27 , Y + 12 + 1
000be9 858e     +LDD R24 , Y + 12 + 2
000bea 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000beb 940e 152e 	CALL __DIVF21
000bed 940e 141d 	CALL __CFD1U
000bef 2f0e      	MOV  R16,R30
000bf0 85a8      	LDD  R26,Y+8
000bf1 85b9      	LDD  R27,Y+8+1
000bf2 9611      	ADIW R26,1
000bf3 87a8      	STD  Y+8,R26
000bf4 87b9      	STD  Y+8+1,R27
000bf5 9711      	SBIW R26,1
000bf6 2fe0      	MOV  R30,R16
000bf7 5de0      	SUBI R30,-LOW(48)
000bf8 93ec      	ST   X,R30
000bf9 2fe0      	MOV  R30,R16
000bfa 27ff      	CLR  R31
000bfb 2766      	CLR  R22
000bfc 2777      	CLR  R23
000bfd 940e 1456 	CALL __CDF1
                +
000bff 81ac     +LDD R26 , Y + 4
000c00 81bd     +LDD R27 , Y + 4 + 1
000c01 818e     +LDD R24 , Y + 4 + 2
000c02 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000c03 940e 14e0 	CALL __MULF12
                +
000c05 85ac     +LDD R26 , Y + 12
000c06 85bd     +LDD R27 , Y + 12 + 1
000c07 858e     +LDD R24 , Y + 12 + 2
000c08 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000c09 940e 1660 	CALL __SWAPD12
000c0b 940e 1489 	CALL __SUBF12
                +
000c0d 87ec     +STD Y + 12 , R30
000c0e 87fd     +STD Y + 12 + 1 , R31
000c0f 876e     +STD Y + 12 + 2 , R22
000c10 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000c11 2fe1      	MOV  R30,R17
000c12 5f1f      	SUBI R17,-1
000c13 30e0      	CPI  R30,0
000c14 f009      	BREQ _0x200002D
000c15 cfb4      	RJMP _0x200002A
                 _0x200002D:
000c16 85a8      	LDD  R26,Y+8
000c17 85b9      	LDD  R27,Y+8+1
000c18 9611      	ADIW R26,1
000c19 87a8      	STD  Y+8,R26
000c1a 87b9      	STD  Y+8+1,R27
000c1b 9711      	SBIW R26,1
000c1c e2ee      	LDI  R30,LOW(46)
000c1d 93ec      	ST   X,R30
000c1e cfab      	RJMP _0x200002A
                 _0x200002C:
000c1f 85e8      	LDD  R30,Y+8
000c20 85f9      	LDD  R31,Y+8+1
000c21 9631      	ADIW R30,1
000c22 87e8      	STD  Y+8,R30
000c23 87f9      	STD  Y+8+1,R31
000c24 9731      	SBIW R30,1
000c25 85aa      	LDD  R26,Y+10
000c26 83a0      	STD  Z+0,R26
000c27 3030      	CPI  R19,0
000c28 f42c      	BRGE _0x200002E
000c29 9531      	NEG  R19
000c2a 85a8      	LDD  R26,Y+8
000c2b 85b9      	LDD  R27,Y+8+1
000c2c e2ed      	LDI  R30,LOW(45)
000c2d c003      	RJMP _0x200010E
                 _0x200002E:
000c2e 85a8      	LDD  R26,Y+8
000c2f 85b9      	LDD  R27,Y+8+1
000c30 e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
000c31 93ec      	ST   X,R30
000c32 85e8      	LDD  R30,Y+8
000c33 85f9      	LDD  R31,Y+8+1
000c34 9631      	ADIW R30,1
000c35 87e8      	STD  Y+8,R30
000c36 87f9      	STD  Y+8+1,R31
000c37 9631      	ADIW R30,1
000c38 87e8      	STD  Y+8,R30
000c39 87f9      	STD  Y+8+1,R31
000c3a 9731      	SBIW R30,1
000c3b 01bf      	MOVW R22,R30
000c3c 2fa3      	MOV  R26,R19
000c3d e0ea      	LDI  R30,LOW(10)
000c3e 940e 15d7 	CALL __DIVB21
000c40 5de0      	SUBI R30,-LOW(48)
000c41 01db      	MOVW R26,R22
000c42 93ec      	ST   X,R30
000c43 85e8      	LDD  R30,Y+8
000c44 85f9      	LDD  R31,Y+8+1
000c45 9631      	ADIW R30,1
000c46 87e8      	STD  Y+8,R30
000c47 87f9      	STD  Y+8+1,R31
000c48 9731      	SBIW R30,1
000c49 01bf      	MOVW R22,R30
000c4a 2fa3      	MOV  R26,R19
000c4b e0ea      	LDI  R30,LOW(10)
000c4c 940e 1619 	CALL __MODB21
000c4e 5de0      	SUBI R30,-LOW(48)
000c4f 01db      	MOVW R26,R22
000c50 93ec      	ST   X,R30
000c51 85a8      	LDD  R26,Y+8
000c52 85b9      	LDD  R27,Y+8+1
000c53 e0e0      	LDI  R30,LOW(0)
000c54 93ec      	ST   X,R30
                 _0x20E0009:
000c55 940e 16a7 	CALL __LOADLOCR4
000c57 9660      	ADIW R28,16
000c58 9508      	RET
                 __print_G100:
000c59 97ef      	SBIW R28,63
000c5a 9761      	SBIW R28,17
000c5b 940e 169e 	CALL __SAVELOCR6
000c5d e010      	LDI  R17,0
                +
000c5e 01fe     +MOVW R30 , R28
000c5f 5ae8     +SUBI R30 , LOW ( - 88 )
000c60 4fff     +SBCI R31 , HIGH ( - 88 )
000c61 9001     +LD R0 , Z +
000c62 81f0     +LD R31 , Z
000c63 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000c64 87e8      	STD  Y+8,R30
000c65 87f9      	STD  Y+8+1,R31
                +
000c66 01fe     +MOVW R30 , R28
000c67 5aea     +SUBI R30 , LOW ( - 86 )
000c68 4fff     +SBCI R31 , HIGH ( - 86 )
000c69 9001     +LD R0 , Z +
000c6a 81f0     +LD R31 , Z
000c6b 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000c6c 83ee      	STD  Y+6,R30
000c6d 83ff      	STD  Y+6+1,R31
000c6e 81ae      	LDD  R26,Y+6
000c6f 81bf      	LDD  R27,Y+6+1
000c70 e0e0      	LDI  R30,LOW(0)
000c71 e0f0      	LDI  R31,HIGH(0)
000c72 93ed      	ST   X+,R30
000c73 93fc      	ST   X,R31
                 _0x2000030:
000c74 01de      	MOVW R26,R28
000c75 5aa4      	SUBI R26,LOW(-(92))
000c76 4fbf      	SBCI R27,HIGH(-(92))
000c77 91ed      	LD   R30,X+
000c78 91fd      	LD   R31,X+
000c79 9631      	ADIW R30,1
000c7a 93fe      	ST   -X,R31
000c7b 93ee      	ST   -X,R30
000c7c 9731      	SBIW R30,1
000c7d 91e4      	LPM  R30,Z
000c7e 2f2e      	MOV  R18,R30
000c7f 30e0      	CPI  R30,0
000c80 f411      	BRNE PC+3
000c81 940c 0f57 	JMP _0x2000032
000c83 2fe1      	MOV  R30,R17
000c84 30e0      	CPI  R30,0
000c85 f469      	BRNE _0x2000036
000c86 3225      	CPI  R18,37
000c87 f411      	BRNE _0x2000037
000c88 e011      	LDI  R17,LOW(1)
000c89 c008      	RJMP _0x2000038
                 _0x2000037:
000c8a 932a      	ST   -Y,R18
000c8b 81ef      	LDD  R30,Y+7
000c8c 85f8      	LDD  R31,Y+7+1
000c8d 93fa      	ST   -Y,R31
000c8e 93ea      	ST   -Y,R30
000c8f 85eb      	LDD  R30,Y+11
000c90 85fc      	LDD  R31,Y+11+1
000c91 9509      	ICALL
                 _0x2000038:
000c92 c2c3      	RJMP _0x2000035
                 _0x2000036:
000c93 30e1      	CPI  R30,LOW(0x1)
000c94 f4f1      	BRNE _0x2000039
000c95 3225      	CPI  R18,37
000c96 f449      	BRNE _0x200003A
000c97 932a      	ST   -Y,R18
000c98 81ef      	LDD  R30,Y+7
000c99 85f8      	LDD  R31,Y+7+1
000c9a 93fa      	ST   -Y,R31
000c9b 93ea      	ST   -Y,R30
000c9c 85eb      	LDD  R30,Y+11
000c9d 85fc      	LDD  R31,Y+11+1
000c9e 9509      	ICALL
000c9f c2b5      	RJMP _0x200010F
                 _0x200003A:
000ca0 e012      	LDI  R17,LOW(2)
000ca1 e0e0      	LDI  R30,LOW(0)
000ca2 8bed      	STD  Y+21,R30
000ca3 e000      	LDI  R16,LOW(0)
000ca4 322d      	CPI  R18,45
000ca5 f411      	BRNE _0x200003B
000ca6 e001      	LDI  R16,LOW(1)
000ca7 c2ae      	RJMP _0x2000035
                 _0x200003B:
000ca8 322b      	CPI  R18,43
000ca9 f419      	BRNE _0x200003C
000caa e2eb      	LDI  R30,LOW(43)
000cab 8bed      	STD  Y+21,R30
000cac c2a9      	RJMP _0x2000035
                 _0x200003C:
000cad 3220      	CPI  R18,32
000cae f419      	BRNE _0x200003D
000caf e2e0      	LDI  R30,LOW(32)
000cb0 8bed      	STD  Y+21,R30
000cb1 c2a4      	RJMP _0x2000035
                 _0x200003D:
000cb2 c002      	RJMP _0x200003E
                 _0x2000039:
000cb3 30e2      	CPI  R30,LOW(0x2)
000cb4 f439      	BRNE _0x200003F
                 _0x200003E:
000cb5 e050      	LDI  R21,LOW(0)
000cb6 e013      	LDI  R17,LOW(3)
000cb7 3320      	CPI  R18,48
000cb8 f411      	BRNE _0x2000040
000cb9 6800      	ORI  R16,LOW(128)
000cba c29b      	RJMP _0x2000035
                 _0x2000040:
000cbb c002      	RJMP _0x2000041
                 _0x200003F:
000cbc 30e3      	CPI  R30,LOW(0x3)
000cbd f491      	BRNE _0x2000042
                 _0x2000041:
000cbe 3320      	CPI  R18,48
000cbf f010      	BRLO _0x2000044
000cc0 332a      	CPI  R18,58
000cc1 f008      	BRLO _0x2000045
                 _0x2000044:
000cc2 c007      	RJMP _0x2000043
                 _0x2000045:
000cc3 e0aa      	LDI  R26,LOW(10)
000cc4 9f5a      	MUL  R21,R26
000cc5 2d50      	MOV  R21,R0
000cc6 2fe2      	MOV  R30,R18
000cc7 53e0      	SUBI R30,LOW(48)
000cc8 0f5e      	ADD  R21,R30
000cc9 c28c      	RJMP _0x2000035
                 _0x2000043:
000cca e040      	LDI  R20,LOW(0)
000ccb 322e      	CPI  R18,46
000ccc f411      	BRNE _0x2000046
000ccd e014      	LDI  R17,LOW(4)
000cce c287      	RJMP _0x2000035
                 _0x2000046:
000ccf c00f      	RJMP _0x2000047
                 _0x2000042:
000cd0 30e4      	CPI  R30,LOW(0x4)
000cd1 f499      	BRNE _0x2000049
000cd2 3320      	CPI  R18,48
000cd3 f010      	BRLO _0x200004B
000cd4 332a      	CPI  R18,58
000cd5 f008      	BRLO _0x200004C
                 _0x200004B:
000cd6 c008      	RJMP _0x200004A
                 _0x200004C:
000cd7 6200      	ORI  R16,LOW(32)
000cd8 e0aa      	LDI  R26,LOW(10)
000cd9 9f4a      	MUL  R20,R26
000cda 2d40      	MOV  R20,R0
000cdb 2fe2      	MOV  R30,R18
000cdc 53e0      	SUBI R30,LOW(48)
000cdd 0f4e      	ADD  R20,R30
000cde c277      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000cdf 362c      	CPI  R18,108
000ce0 f419      	BRNE _0x200004D
000ce1 6002      	ORI  R16,LOW(2)
000ce2 e015      	LDI  R17,LOW(5)
000ce3 c272      	RJMP _0x2000035
                 _0x200004D:
000ce4 c004      	RJMP _0x200004E
                 _0x2000049:
000ce5 30e5      	CPI  R30,LOW(0x5)
000ce6 f011      	BREQ PC+3
000ce7 940c 0f56 	JMP _0x2000035
                 _0x200004E:
000ce9 2fe2      	MOV  R30,R18
000cea 36e3      	CPI  R30,LOW(0x63)
000ceb f4b1      	BRNE _0x2000053
                +
000cec 01fe     +MOVW R30 , R28
000ced 5ae6     +SUBI R30 , LOW ( - 90 )
000cee 4fff     +SBCI R31 , HIGH ( - 90 )
000cef 9001     +LD R0 , Z +
000cf0 81f0     +LD R31 , Z
000cf1 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000cf2 9734      	SBIW R30,4
                +
000cf3 01de     +MOVW R26 , R28
000cf4 5aa6     +SUBI R26 , LOW ( - 90 )
000cf5 4fbf     +SBCI R27 , HIGH ( - 90 )
000cf6 93ed     +ST X + , R30
000cf7 93fc     +ST X , R31
                 	__PUTW1SX 90
000cf8 81a4      	LDD  R26,Z+4
000cf9 93aa      	ST   -Y,R26
000cfa 81ef      	LDD  R30,Y+7
000cfb 85f8      	LDD  R31,Y+7+1
000cfc 93fa      	ST   -Y,R31
000cfd 93ea      	ST   -Y,R30
000cfe 85eb      	LDD  R30,Y+11
000cff 85fc      	LDD  R31,Y+11+1
000d00 9509      	ICALL
000d01 c253      	RJMP _0x2000054
                 _0x2000053:
000d02 34e5      	CPI  R30,LOW(0x45)
000d03 f011      	BREQ _0x2000057
000d04 36e5      	CPI  R30,LOW(0x65)
000d05 f409      	BRNE _0x2000058
                 _0x2000057:
000d06 c004      	RJMP _0x2000059
                 _0x2000058:
000d07 36e6      	CPI  R30,LOW(0x66)
000d08 f011      	BREQ PC+3
000d09 940c 0d77 	JMP _0x200005A
                 _0x2000059:
000d0b 01fe      	MOVW R30,R28
000d0c 9676      	ADIW R30,22
000d0d 87ee      	STD  Y+14,R30
000d0e 87ff      	STD  Y+14+1,R31
                +
000d0f 01de     +MOVW R26 , R28
000d10 5aa6     +SUBI R26 , LOW ( - 90 )
000d11 4fbf     +SBCI R27 , HIGH ( - 90 )
000d12 900d     +LD R0 , X +
000d13 91bc     +LD R27 , X
000d14 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000d15 940e 1647 	CALL __GETD1P
                +
000d17 87ea     +STD Y + 10 , R30
000d18 87fb     +STD Y + 10 + 1 , R31
000d19 876c     +STD Y + 10 + 2 , R22
000d1a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                +
000d1b 01fe     +MOVW R30 , R28
000d1c 5ae6     +SUBI R30 , LOW ( - 90 )
000d1d 4fff     +SBCI R31 , HIGH ( - 90 )
000d1e 9001     +LD R0 , Z +
000d1f 81f0     +LD R31 , Z
000d20 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000d21 9734      	SBIW R30,4
                +
000d22 01de     +MOVW R26 , R28
000d23 5aa6     +SUBI R26 , LOW ( - 90 )
000d24 4fbf     +SBCI R27 , HIGH ( - 90 )
000d25 93ed     +ST X + , R30
000d26 93fc     +ST X , R31
                 	__PUTW1SX 90
000d27 85ad      	LDD  R26,Y+13
000d28 23aa      	TST  R26
000d29 f022      	BRMI _0x200005B
000d2a 89ad      	LDD  R26,Y+21
000d2b 32ab      	CPI  R26,LOW(0x2B)
000d2c f069      	BREQ _0x200005D
000d2d c020      	RJMP _0x200005E
                 _0x200005B:
                +
000d2e 85ea     +LDD R30 , Y + 10
000d2f 85fb     +LDD R31 , Y + 10 + 1
000d30 856c     +LDD R22 , Y + 10 + 2
000d31 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000d32 940e 13ea 	CALL __ANEGF1
                +
000d34 87ea     +STD Y + 10 , R30
000d35 87fb     +STD Y + 10 + 1 , R31
000d36 876c     +STD Y + 10 + 2 , R22
000d37 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000d38 e2ed      	LDI  R30,LOW(45)
000d39 8bed      	STD  Y+21,R30
                 _0x200005D:
000d3a ff07      	SBRS R16,7
000d3b c00a      	RJMP _0x200005F
000d3c 89ed      	LDD  R30,Y+21
000d3d 93ea      	ST   -Y,R30
000d3e 81ef      	LDD  R30,Y+7
000d3f 85f8      	LDD  R31,Y+7+1
000d40 93fa      	ST   -Y,R31
000d41 93ea      	ST   -Y,R30
000d42 85eb      	LDD  R30,Y+11
000d43 85fc      	LDD  R31,Y+11+1
000d44 9509      	ICALL
000d45 c008      	RJMP _0x2000060
                 _0x200005F:
000d46 85ee      	LDD  R30,Y+14
000d47 85ff      	LDD  R31,Y+14+1
000d48 9631      	ADIW R30,1
000d49 87ee      	STD  Y+14,R30
000d4a 87ff      	STD  Y+14+1,R31
000d4b 9731      	SBIW R30,1
000d4c 89ad      	LDD  R26,Y+21
000d4d 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
000d4e ff05      	SBRS R16,5
000d4f e046      	LDI  R20,LOW(6)
000d50 3626      	CPI  R18,102
000d51 f471      	BRNE _0x2000062
                +
000d52 85ea     +LDD R30 , Y + 10
000d53 85fb     +LDD R31 , Y + 10 + 1
000d54 856c     +LDD R22 , Y + 10 + 2
000d55 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000d56 940e 165b 	CALL __PUTPARD1
000d58 934a      	ST   -Y,R20
000d59 89eb      	LDD  R30,Y+19
000d5a 89fc      	LDD  R31,Y+19+1
000d5b 93fa      	ST   -Y,R31
000d5c 93ea      	ST   -Y,R30
000d5d 940e 11d6 	CALL _ftoa
000d5f c00d      	RJMP _0x2000063
                 _0x2000062:
                +
000d60 85ea     +LDD R30 , Y + 10
000d61 85fb     +LDD R31 , Y + 10 + 1
000d62 856c     +LDD R22 , Y + 10 + 2
000d63 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000d64 940e 165b 	CALL __PUTPARD1
000d66 934a      	ST   -Y,R20
000d67 932a      	ST   -Y,R18
000d68 89ec      	LDD  R30,Y+20
000d69 89fd      	LDD  R31,Y+20+1
000d6a 93fa      	ST   -Y,R31
000d6b 93ea      	ST   -Y,R30
000d6c dd84      	RCALL __ftoe_G100
                 _0x2000063:
000d6d 01fe      	MOVW R30,R28
000d6e 9676      	ADIW R30,22
000d6f 87ee      	STD  Y+14,R30
000d70 87ff      	STD  Y+14+1,R31
000d71 93fa      	ST   -Y,R31
000d72 93ea      	ST   -Y,R30
000d73 940e 117b 	CALL _strlen
000d75 2f1e      	MOV  R17,R30
000d76 c045      	RJMP _0x2000064
                 _0x200005A:
000d77 37e3      	CPI  R30,LOW(0x73)
000d78 f4e9      	BRNE _0x2000066
                +
000d79 01fe     +MOVW R30 , R28
000d7a 5ae6     +SUBI R30 , LOW ( - 90 )
000d7b 4fff     +SBCI R31 , HIGH ( - 90 )
000d7c 9001     +LD R0 , Z +
000d7d 81f0     +LD R31 , Z
000d7e 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000d7f 9734      	SBIW R30,4
                +
000d80 01de     +MOVW R26 , R28
000d81 5aa6     +SUBI R26 , LOW ( - 90 )
000d82 4fbf     +SBCI R27 , HIGH ( - 90 )
000d83 93ed     +ST X + , R30
000d84 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000d85 01de     +MOVW R26 , R28
000d86 5aa6     +SUBI R26 , LOW ( - 90 )
000d87 4fbf     +SBCI R27 , HIGH ( - 90 )
000d88 900d     +LD R0 , X +
000d89 91bc     +LD R27 , X
000d8a 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000d8b 9614      	ADIW R26,4
000d8c 940e 1643 	CALL __GETW1P
000d8e 87ee      	STD  Y+14,R30
000d8f 87ff      	STD  Y+14+1,R31
000d90 93fa      	ST   -Y,R31
000d91 93ea      	ST   -Y,R30
000d92 940e 117b 	CALL _strlen
000d94 2f1e      	MOV  R17,R30
000d95 c01f      	RJMP _0x2000067
                 _0x2000066:
000d96 37e0      	CPI  R30,LOW(0x70)
000d97 f549      	BRNE _0x2000069
                +
000d98 01fe     +MOVW R30 , R28
000d99 5ae6     +SUBI R30 , LOW ( - 90 )
000d9a 4fff     +SBCI R31 , HIGH ( - 90 )
000d9b 9001     +LD R0 , Z +
000d9c 81f0     +LD R31 , Z
000d9d 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000d9e 9734      	SBIW R30,4
                +
000d9f 01de     +MOVW R26 , R28
000da0 5aa6     +SUBI R26 , LOW ( - 90 )
000da1 4fbf     +SBCI R27 , HIGH ( - 90 )
000da2 93ed     +ST X + , R30
000da3 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000da4 01de     +MOVW R26 , R28
000da5 5aa6     +SUBI R26 , LOW ( - 90 )
000da6 4fbf     +SBCI R27 , HIGH ( - 90 )
000da7 900d     +LD R0 , X +
000da8 91bc     +LD R27 , X
000da9 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000daa 9614      	ADIW R26,4
000dab 940e 1643 	CALL __GETW1P
000dad 87ee      	STD  Y+14,R30
000dae 87ff      	STD  Y+14+1,R31
000daf 93fa      	ST   -Y,R31
000db0 93ea      	ST   -Y,R30
000db1 940e 1185 	CALL _strlenf
000db3 2f1e      	MOV  R17,R30
000db4 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000db5 770f      	ANDI R16,LOW(127)
000db6 3040      	CPI  R20,0
000db7 f011      	BREQ _0x200006B
000db8 1741      	CP   R20,R17
000db9 f008      	BRLO _0x200006C
                 _0x200006B:
000dba c001      	RJMP _0x200006A
                 _0x200006C:
000dbb 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000dbc e040      	LDI  R20,LOW(0)
000dbd e0e0      	LDI  R30,LOW(0)
000dbe 8bec      	STD  Y+20,R30
000dbf e030      	LDI  R19,LOW(0)
000dc0 c0aa      	RJMP _0x200006D
                 _0x2000069:
000dc1 36e4      	CPI  R30,LOW(0x64)
000dc2 f011      	BREQ _0x2000070
000dc3 36e9      	CPI  R30,LOW(0x69)
000dc4 f411      	BRNE _0x2000071
                 _0x2000070:
000dc5 6004      	ORI  R16,LOW(4)
000dc6 c002      	RJMP _0x2000072
                 _0x2000071:
000dc7 37e5      	CPI  R30,LOW(0x75)
000dc8 f4c1      	BRNE _0x2000073
                 _0x2000072:
000dc9 e0ea      	LDI  R30,LOW(10)
000dca 8bec      	STD  Y+20,R30
000dcb ff01      	SBRS R16,1
000dcc c00a      	RJMP _0x2000074
                +
000dcd e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000dce ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000dcf e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000dd0 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
                +
000dd1 8be8     +STD Y + 16 , R30
000dd2 8bf9     +STD Y + 16 + 1 , R31
000dd3 8b6a     +STD Y + 16 + 2 , R22
000dd4 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000dd5 e01a      	LDI  R17,LOW(10)
000dd6 c029      	RJMP _0x2000075
                 _0x2000074:
                +
000dd7 e1e0     +LDI R30 , LOW ( 0x2710 )
000dd8 e2f7     +LDI R31 , HIGH ( 0x2710 )
000dd9 e060     +LDI R22 , BYTE3 ( 0x2710 )
000dda e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
                +
000ddb 8be8     +STD Y + 16 , R30
000ddc 8bf9     +STD Y + 16 + 1 , R31
000ddd 8b6a     +STD Y + 16 + 2 , R22
000dde 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000ddf e015      	LDI  R17,LOW(5)
000de0 c01f      	RJMP _0x2000075
                 _0x2000073:
000de1 35e8      	CPI  R30,LOW(0x58)
000de2 f411      	BRNE _0x2000077
000de3 6008      	ORI  R16,LOW(8)
000de4 c004      	RJMP _0x2000078
                 _0x2000077:
000de5 37e8      	CPI  R30,LOW(0x78)
000de6 f011      	BREQ PC+3
000de7 940c 0f55 	JMP _0x20000B6
                 _0x2000078:
000de9 e1e0      	LDI  R30,LOW(16)
000dea 8bec      	STD  Y+20,R30
000deb ff01      	SBRS R16,1
000dec c00a      	RJMP _0x200007A
                +
000ded e0e0     +LDI R30 , LOW ( 0x10000000 )
000dee e0f0     +LDI R31 , HIGH ( 0x10000000 )
000def e060     +LDI R22 , BYTE3 ( 0x10000000 )
000df0 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
                +
000df1 8be8     +STD Y + 16 , R30
000df2 8bf9     +STD Y + 16 + 1 , R31
000df3 8b6a     +STD Y + 16 + 2 , R22
000df4 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000df5 e018      	LDI  R17,LOW(8)
000df6 c009      	RJMP _0x2000075
                 _0x200007A:
                +
000df7 e0e0     +LDI R30 , LOW ( 0x1000 )
000df8 e1f0     +LDI R31 , HIGH ( 0x1000 )
000df9 e060     +LDI R22 , BYTE3 ( 0x1000 )
000dfa e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
                +
000dfb 8be8     +STD Y + 16 , R30
000dfc 8bf9     +STD Y + 16 + 1 , R31
000dfd 8b6a     +STD Y + 16 + 2 , R22
000dfe 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000dff e014      	LDI  R17,LOW(4)
                 _0x2000075:
000e00 3040      	CPI  R20,0
000e01 f011      	BREQ _0x200007B
000e02 770f      	ANDI R16,LOW(127)
000e03 c001      	RJMP _0x200007C
                 _0x200007B:
000e04 e041      	LDI  R20,LOW(1)
                 _0x200007C:
000e05 ff01      	SBRS R16,1
000e06 c016      	RJMP _0x200007D
                +
000e07 01fe     +MOVW R30 , R28
000e08 5ae6     +SUBI R30 , LOW ( - 90 )
000e09 4fff     +SBCI R31 , HIGH ( - 90 )
000e0a 9001     +LD R0 , Z +
000e0b 81f0     +LD R31 , Z
000e0c 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000e0d 9734      	SBIW R30,4
                +
000e0e 01de     +MOVW R26 , R28
000e0f 5aa6     +SUBI R26 , LOW ( - 90 )
000e10 4fbf     +SBCI R27 , HIGH ( - 90 )
000e11 93ed     +ST X + , R30
000e12 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000e13 01de     +MOVW R26 , R28
000e14 5aa6     +SUBI R26 , LOW ( - 90 )
000e15 4fbf     +SBCI R27 , HIGH ( - 90 )
000e16 900d     +LD R0 , X +
000e17 91bc     +LD R27 , X
000e18 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000e19 9614      	ADIW R26,4
000e1a 940e 1647 	CALL __GETD1P
000e1c c031      	RJMP _0x2000110
                 _0x200007D:
000e1d ff02      	SBRS R16,2
000e1e c018      	RJMP _0x200007F
                +
000e1f 01fe     +MOVW R30 , R28
000e20 5ae6     +SUBI R30 , LOW ( - 90 )
000e21 4fff     +SBCI R31 , HIGH ( - 90 )
000e22 9001     +LD R0 , Z +
000e23 81f0     +LD R31 , Z
000e24 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000e25 9734      	SBIW R30,4
                +
000e26 01de     +MOVW R26 , R28
000e27 5aa6     +SUBI R26 , LOW ( - 90 )
000e28 4fbf     +SBCI R27 , HIGH ( - 90 )
000e29 93ed     +ST X + , R30
000e2a 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000e2b 01de     +MOVW R26 , R28
000e2c 5aa6     +SUBI R26 , LOW ( - 90 )
000e2d 4fbf     +SBCI R27 , HIGH ( - 90 )
000e2e 900d     +LD R0 , X +
000e2f 91bc     +LD R27 , X
000e30 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000e31 9614      	ADIW R26,4
000e32 940e 1643 	CALL __GETW1P
000e34 940e 15b2 	CALL __CWD1
000e36 c017      	RJMP _0x2000110
                 _0x200007F:
                +
000e37 01fe     +MOVW R30 , R28
000e38 5ae6     +SUBI R30 , LOW ( - 90 )
000e39 4fff     +SBCI R31 , HIGH ( - 90 )
000e3a 9001     +LD R0 , Z +
000e3b 81f0     +LD R31 , Z
000e3c 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000e3d 9734      	SBIW R30,4
                +
000e3e 01de     +MOVW R26 , R28
000e3f 5aa6     +SUBI R26 , LOW ( - 90 )
000e40 4fbf     +SBCI R27 , HIGH ( - 90 )
000e41 93ed     +ST X + , R30
000e42 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000e43 01de     +MOVW R26 , R28
000e44 5aa6     +SUBI R26 , LOW ( - 90 )
000e45 4fbf     +SBCI R27 , HIGH ( - 90 )
000e46 900d     +LD R0 , X +
000e47 91bc     +LD R27 , X
000e48 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000e49 9614      	ADIW R26,4
000e4a 940e 1643 	CALL __GETW1P
000e4c 2766      	CLR  R22
000e4d 2777      	CLR  R23
                 _0x2000110:
                +
000e4e 87ea     +STD Y + 10 , R30
000e4f 87fb     +STD Y + 10 + 1 , R31
000e50 876c     +STD Y + 10 + 2 , R22
000e51 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000e52 ff02      	SBRS R16,2
000e53 c016      	RJMP _0x2000081
000e54 85ad      	LDD  R26,Y+13
000e55 23aa      	TST  R26
000e56 f462      	BRPL _0x2000082
                +
000e57 85ea     +LDD R30 , Y + 10
000e58 85fb     +LDD R31 , Y + 10 + 1
000e59 856c     +LDD R22 , Y + 10 + 2
000e5a 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000e5b 940e 159b 	CALL __ANEGD1
                +
000e5d 87ea     +STD Y + 10 , R30
000e5e 87fb     +STD Y + 10 + 1 , R31
000e5f 876c     +STD Y + 10 + 2 , R22
000e60 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000e61 e2ed      	LDI  R30,LOW(45)
000e62 8bed      	STD  Y+21,R30
                 _0x2000082:
000e63 89ed      	LDD  R30,Y+21
000e64 30e0      	CPI  R30,0
000e65 f019      	BREQ _0x2000083
000e66 5f1f      	SUBI R17,-LOW(1)
000e67 5f4f      	SUBI R20,-LOW(1)
000e68 c001      	RJMP _0x2000084
                 _0x2000083:
000e69 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000e6a 2f34      	MOV  R19,R20
                 _0x200006D:
000e6b fd00      	SBRC R16,0
000e6c c01a      	RJMP _0x2000085
                 _0x2000086:
000e6d 1715      	CP   R17,R21
000e6e f410      	BRSH _0x2000089
000e6f 1735      	CP   R19,R21
000e70 f008      	BRLO _0x200008A
                 _0x2000089:
000e71 c015      	RJMP _0x2000088
                 _0x200008A:
000e72 ff07      	SBRS R16,7
000e73 c008      	RJMP _0x200008B
000e74 ff02      	SBRS R16,2
000e75 c004      	RJMP _0x200008C
000e76 7f0b      	ANDI R16,LOW(251)
000e77 892d      	LDD  R18,Y+21
000e78 5011      	SUBI R17,LOW(1)
000e79 c001      	RJMP _0x200008D
                 _0x200008C:
000e7a e320      	LDI  R18,LOW(48)
                 _0x200008D:
000e7b c001      	RJMP _0x200008E
                 _0x200008B:
000e7c e220      	LDI  R18,LOW(32)
                 _0x200008E:
000e7d 932a      	ST   -Y,R18
000e7e 81ef      	LDD  R30,Y+7
000e7f 85f8      	LDD  R31,Y+7+1
000e80 93fa      	ST   -Y,R31
000e81 93ea      	ST   -Y,R30
000e82 85eb      	LDD  R30,Y+11
000e83 85fc      	LDD  R31,Y+11+1
000e84 9509      	ICALL
000e85 5051      	SUBI R21,LOW(1)
000e86 cfe6      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000e87 1714      	CP   R17,R20
000e88 f540      	BRSH _0x2000091
000e89 6100      	ORI  R16,LOW(16)
000e8a ff02      	SBRS R16,2
000e8b c017      	RJMP _0x2000092
000e8c 7f0b      	ANDI R16,LOW(251)
000e8d 89ed      	LDD  R30,Y+21
000e8e 93ea      	ST   -Y,R30
                +
000e8f 01fe     +MOVW R30 , R28
000e90 5ae9     +SUBI R30 , LOW ( - 87 )
000e91 4fff     +SBCI R31 , HIGH ( - 87 )
000e92 9001     +LD R0 , Z +
000e93 81f0     +LD R31 , Z
000e94 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000e95 93fa      	ST   -Y,R31
000e96 93ea      	ST   -Y,R30
                +
000e97 01fe     +MOVW R30 , R28
000e98 5ae5     +SUBI R30 , LOW ( - 91 )
000e99 4fff     +SBCI R31 , HIGH ( - 91 )
000e9a 9001     +LD R0 , Z +
000e9b 81f0     +LD R31 , Z
000e9c 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000e9d 9509      	ICALL
000e9e 3050      	CPI  R21,0
000e9f f009      	BREQ _0x2000093
000ea0 5051      	SUBI R21,LOW(1)
                 _0x2000093:
000ea1 5011      	SUBI R17,LOW(1)
000ea2 5041      	SUBI R20,LOW(1)
                 _0x2000092:
000ea3 e3e0      	LDI  R30,LOW(48)
000ea4 93ea      	ST   -Y,R30
000ea5 81ef      	LDD  R30,Y+7
000ea6 85f8      	LDD  R31,Y+7+1
000ea7 93fa      	ST   -Y,R31
000ea8 93ea      	ST   -Y,R30
000ea9 85eb      	LDD  R30,Y+11
000eaa 85fc      	LDD  R31,Y+11+1
000eab 9509      	ICALL
000eac 3050      	CPI  R21,0
000ead f009      	BREQ _0x2000094
000eae 5051      	SUBI R21,LOW(1)
                 _0x2000094:
000eaf 5041      	SUBI R20,LOW(1)
000eb0 cfd6      	RJMP _0x200008F
                 _0x2000091:
000eb1 2f31      	MOV  R19,R17
000eb2 89ec      	LDD  R30,Y+20
000eb3 30e0      	CPI  R30,0
000eb4 f4e9      	BRNE _0x2000095
                 _0x2000096:
000eb5 3030      	CPI  R19,0
000eb6 f0d1      	BREQ _0x2000098
000eb7 ff03      	SBRS R16,3
000eb8 c006      	RJMP _0x2000099
000eb9 85ee      	LDD  R30,Y+14
000eba 85ff      	LDD  R31,Y+14+1
000ebb 9125      	LPM  R18,Z+
000ebc 87ee      	STD  Y+14,R30
000ebd 87ff      	STD  Y+14+1,R31
000ebe c005      	RJMP _0x200009A
                 _0x2000099:
000ebf 85ae      	LDD  R26,Y+14
000ec0 85bf      	LDD  R27,Y+14+1
000ec1 912d      	LD   R18,X+
000ec2 87ae      	STD  Y+14,R26
000ec3 87bf      	STD  Y+14+1,R27
                 _0x200009A:
000ec4 932a      	ST   -Y,R18
000ec5 81ef      	LDD  R30,Y+7
000ec6 85f8      	LDD  R31,Y+7+1
000ec7 93fa      	ST   -Y,R31
000ec8 93ea      	ST   -Y,R30
000ec9 85eb      	LDD  R30,Y+11
000eca 85fc      	LDD  R31,Y+11+1
000ecb 9509      	ICALL
000ecc 3050      	CPI  R21,0
000ecd f009      	BREQ _0x200009B
000ece 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000ecf 5031      	SUBI R19,LOW(1)
000ed0 cfe4      	RJMP _0x2000096
                 _0x2000098:
000ed1 c074      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
                +
000ed2 89e8     +LDD R30 , Y + 16
000ed3 89f9     +LDD R31 , Y + 16 + 1
000ed4 896a     +LDD R22 , Y + 16 + 2
000ed5 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000ed6 85aa     +LDD R26 , Y + 10
000ed7 85bb     +LDD R27 , Y + 10 + 1
000ed8 858c     +LDD R24 , Y + 10 + 2
000ed9 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000eda 940e 15f4 	CALL __DIVD21U
000edc 2f2e      	MOV  R18,R30
000edd 302a      	CPI  R18,10
000ede f030      	BRLO _0x20000A0
000edf ff03      	SBRS R16,3
000ee0 c002      	RJMP _0x20000A1
000ee1 5c29      	SUBI R18,-LOW(55)
000ee2 c001      	RJMP _0x20000A2
                 _0x20000A1:
000ee3 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000ee4 c001      	RJMP _0x20000A3
                 _0x20000A0:
000ee5 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000ee6 fd04      	SBRC R16,4
000ee7 c032      	RJMP _0x20000A5
000ee8 3321      	CPI  R18,49
000ee9 f460      	BRSH _0x20000A7
                +
000eea 89a8     +LDD R26 , Y + 16
000eeb 89b9     +LDD R27 , Y + 16 + 1
000eec 898a     +LDD R24 , Y + 16 + 2
000eed 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000eee 30a1     +CPI R26 , LOW ( 0x1 )
000eef e0e0     +LDI R30 , HIGH ( 0x1 )
000ef0 07be     +CPC R27 , R30
000ef1 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000ef2 078e     +CPC R24 , R30
000ef3 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000ef4 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000ef5 f409      	BRNE _0x20000A6
                 _0x20000A7:
000ef6 c00b      	RJMP _0x20000A9
                 _0x20000A6:
000ef7 1743      	CP   R20,R19
000ef8 f440      	BRSH _0x2000111
000ef9 1753      	CP   R21,R19
000efa f010      	BRLO _0x20000AC
000efb ff00      	SBRS R16,0
000efc c001      	RJMP _0x20000AD
                 _0x20000AC:
000efd c027      	RJMP _0x20000AB
                 _0x20000AD:
000efe e220      	LDI  R18,LOW(32)
000eff ff07      	SBRS R16,7
000f00 c019      	RJMP _0x20000AE
                 _0x2000111:
000f01 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000f02 6100      	ORI  R16,LOW(16)
000f03 ff02      	SBRS R16,2
000f04 c015      	RJMP _0x20000AF
000f05 7f0b      	ANDI R16,LOW(251)
000f06 89ed      	LDD  R30,Y+21
000f07 93ea      	ST   -Y,R30
                +
000f08 01fe     +MOVW R30 , R28
000f09 5ae9     +SUBI R30 , LOW ( - 87 )
000f0a 4fff     +SBCI R31 , HIGH ( - 87 )
000f0b 9001     +LD R0 , Z +
000f0c 81f0     +LD R31 , Z
000f0d 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000f0e 93fa      	ST   -Y,R31
000f0f 93ea      	ST   -Y,R30
                +
000f10 01fe     +MOVW R30 , R28
000f11 5ae5     +SUBI R30 , LOW ( - 91 )
000f12 4fff     +SBCI R31 , HIGH ( - 91 )
000f13 9001     +LD R0 , Z +
000f14 81f0     +LD R31 , Z
000f15 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000f16 9509      	ICALL
000f17 3050      	CPI  R21,0
000f18 f009      	BREQ _0x20000B0
000f19 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000f1a 932a      	ST   -Y,R18
000f1b 81ef      	LDD  R30,Y+7
000f1c 85f8      	LDD  R31,Y+7+1
000f1d 93fa      	ST   -Y,R31
000f1e 93ea      	ST   -Y,R30
000f1f 85eb      	LDD  R30,Y+11
000f20 85fc      	LDD  R31,Y+11+1
000f21 9509      	ICALL
000f22 3050      	CPI  R21,0
000f23 f009      	BREQ _0x20000B1
000f24 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000f25 5031      	SUBI R19,LOW(1)
                +
000f26 89e8     +LDD R30 , Y + 16
000f27 89f9     +LDD R31 , Y + 16 + 1
000f28 896a     +LDD R22 , Y + 16 + 2
000f29 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000f2a 85aa     +LDD R26 , Y + 10
000f2b 85bb     +LDD R27 , Y + 10 + 1
000f2c 858c     +LDD R24 , Y + 10 + 2
000f2d 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000f2e 940e 1625 	CALL __MODD21U
                +
000f30 87ea     +STD Y + 10 , R30
000f31 87fb     +STD Y + 10 + 1 , R31
000f32 876c     +STD Y + 10 + 2 , R22
000f33 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000f34 89ec      	LDD  R30,Y+20
                +
000f35 89a8     +LDD R26 , Y + 16
000f36 89b9     +LDD R27 , Y + 16 + 1
000f37 898a     +LDD R24 , Y + 16 + 2
000f38 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000f39 27ff      	CLR  R31
000f3a 2766      	CLR  R22
000f3b 2777      	CLR  R23
000f3c 940e 15f4 	CALL __DIVD21U
                +
000f3e 8be8     +STD Y + 16 , R30
000f3f 8bf9     +STD Y + 16 + 1 , R31
000f40 8b6a     +STD Y + 16 + 2 , R22
000f41 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000f42 940e 1696 	CALL __CPD10
000f44 f009      	BREQ _0x200009F
000f45 cf8c      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000f46 ff00      	SBRS R16,0
000f47 c00d      	RJMP _0x20000B2
                 _0x20000B3:
000f48 3050      	CPI  R21,0
000f49 f059      	BREQ _0x20000B5
000f4a 5051      	SUBI R21,LOW(1)
000f4b e2e0      	LDI  R30,LOW(32)
000f4c 93ea      	ST   -Y,R30
000f4d 81ef      	LDD  R30,Y+7
000f4e 85f8      	LDD  R31,Y+7+1
000f4f 93fa      	ST   -Y,R31
000f50 93ea      	ST   -Y,R30
000f51 85eb      	LDD  R30,Y+11
000f52 85fc      	LDD  R31,Y+11+1
000f53 9509      	ICALL
000f54 cff3      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
000f55 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000f56 cd1d      	RJMP _0x2000030
                 _0x2000032:
000f57 81ae      	LDD  R26,Y+6
000f58 81bf      	LDD  R27,Y+6+1
000f59 940e 1643 	CALL __GETW1P
000f5b 940e 16a5 	CALL __LOADLOCR6
000f5d 96ef      	ADIW R28,63
000f5e 966f      	ADIW R28,31
000f5f 9508      	RET
                 _sprintf:
000f60 92ff      	PUSH R15
000f61 2ef8      	MOV  R15,R24
000f62 9726      	SBIW R28,6
000f63 940e 16a0 	CALL __SAVELOCR4
000f65 01de      	MOVW R26,R28
000f66 961c      	ADIW R26,12
000f67 940e 1593 	CALL __ADDW2R15
000f69 940e 1643 	CALL __GETW1P
000f6b 9730      	SBIW R30,0
000f6c f419      	BRNE _0x20000B7
000f6d efef      	LDI  R30,LOW(65535)
000f6e efff      	LDI  R31,HIGH(65535)
000f6f c029      	RJMP _0x20E0008
                 _0x20000B7:
000f70 01de      	MOVW R26,R28
000f71 9616      	ADIW R26,6
000f72 940e 1593 	CALL __ADDW2R15
000f74 018d      	MOVW R16,R26
000f75 01de      	MOVW R26,R28
000f76 961c      	ADIW R26,12
000f77 940e 1593 	CALL __ADDW2R15
000f79 940e 1643 	CALL __GETW1P
000f7b 83ee      	STD  Y+6,R30
000f7c 83ff      	STD  Y+6+1,R31
000f7d e0e0      	LDI  R30,LOW(0)
000f7e 87e8      	STD  Y+8,R30
000f7f 87e9      	STD  Y+8+1,R30
000f80 01de      	MOVW R26,R28
000f81 961a      	ADIW R26,10
000f82 940e 1593 	CALL __ADDW2R15
000f84 940e 1643 	CALL __GETW1P
000f86 93fa      	ST   -Y,R31
000f87 93ea      	ST   -Y,R30
000f88 931a      	ST   -Y,R17
000f89 930a      	ST   -Y,R16
000f8a ebe4      	LDI  R30,LOW(_put_buff_G100)
000f8b e0fa      	LDI  R31,HIGH(_put_buff_G100)
000f8c 93fa      	ST   -Y,R31
000f8d 93ea      	ST   -Y,R30
000f8e 01fe      	MOVW R30,R28
000f8f 963a      	ADIW R30,10
000f90 93fa      	ST   -Y,R31
000f91 93ea      	ST   -Y,R30
000f92 dcc6      	RCALL __print_G100
000f93 019f      	MOVW R18,R30
000f94 81ae      	LDD  R26,Y+6
000f95 81bf      	LDD  R27,Y+6+1
000f96 e0e0      	LDI  R30,LOW(0)
000f97 93ec      	ST   X,R30
000f98 01f9      	MOVW R30,R18
                 _0x20E0008:
000f99 940e 16a7 	CALL __LOADLOCR4
000f9b 962a      	ADIW R28,10
000f9c 90ff      	POP  R15
000f9d 9508      	RET
                 
                 	.CSEG
                 _ds18b20_select:
000f9e 931a      	ST   -Y,R17
000f9f 940e 1311 	CALL _w1_init
000fa1 30e0      	CPI  R30,0
000fa2 f411      	BRNE _0x2020003
000fa3 e0e0      	LDI  R30,LOW(0)
000fa4 c183      	RJMP _0x20E0005
                 _0x2020003:
000fa5 81e9      	LDD  R30,Y+1
000fa6 81fa      	LDD  R31,Y+1+1
000fa7 9730      	SBIW R30,0
000fa8 f089      	BREQ _0x2020004
000fa9 e5e5      	LDI  R30,LOW(85)
000faa 93ea      	ST   -Y,R30
000fab 940e 135a 	CALL _w1_write
000fad e010      	LDI  R17,LOW(0)
                 _0x2020006:
000fae 81a9      	LDD  R26,Y+1
000faf 81ba      	LDD  R27,Y+1+1
000fb0 91ed      	LD   R30,X+
000fb1 83a9      	STD  Y+1,R26
000fb2 83ba      	STD  Y+1+1,R27
000fb3 93ea      	ST   -Y,R30
000fb4 940e 135a 	CALL _w1_write
000fb6 5f1f      	SUBI R17,-LOW(1)
000fb7 3018      	CPI  R17,8
000fb8 f3a8      	BRLO _0x2020006
000fb9 c004      	RJMP _0x2020008
                 _0x2020004:
000fba ecec      	LDI  R30,LOW(204)
000fbb 93ea      	ST   -Y,R30
000fbc 940e 135a 	CALL _w1_write
                 _0x2020008:
000fbe e0e1      	LDI  R30,LOW(1)
000fbf c168      	RJMP _0x20E0005
                 _ds18b20_read_spd:
000fc0 940e 16a0 	CALL __SAVELOCR4
000fc2 81ec      	LDD  R30,Y+4
000fc3 81fd      	LDD  R31,Y+4+1
000fc4 93fa      	ST   -Y,R31
000fc5 93ea      	ST   -Y,R30
000fc6 dfd7      	RCALL _ds18b20_select
000fc7 30e0      	CPI  R30,0
000fc8 f411      	BRNE _0x2020009
000fc9 e0e0      	LDI  R30,LOW(0)
000fca c01d      	RJMP _0x20E0007
                 _0x2020009:
000fcb ebee      	LDI  R30,LOW(190)
000fcc 93ea      	ST   -Y,R30
000fcd 940e 135a 	CALL _w1_write
000fcf e010      	LDI  R17,LOW(0)
                +
000fd0 e42d     +LDI R18 , LOW ( ___ds18b20_scratch_pad )
000fd1 e032     +LDI R19 , HIGH ( ___ds18b20_scratch_pad )
                 	__POINTWRM 18,19,___ds18b20_scratch_pad
                 _0x202000B:
000fd2 933f      	PUSH R19
000fd3 932f      	PUSH R18
                +
000fd4 5f2f     +SUBI R18 , LOW ( - 1 )
000fd5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000fd6 940e 1355 	CALL _w1_read
000fd8 91af      	POP  R26
000fd9 91bf      	POP  R27
000fda 93ec      	ST   X,R30
000fdb 5f1f      	SUBI R17,-LOW(1)
000fdc 3019      	CPI  R17,9
000fdd f3a0      	BRLO _0x202000B
000fde e4ed      	LDI  R30,LOW(___ds18b20_scratch_pad)
000fdf e0f2      	LDI  R31,HIGH(___ds18b20_scratch_pad)
000fe0 93fa      	ST   -Y,R31
000fe1 93ea      	ST   -Y,R30
000fe2 e0e9      	LDI  R30,LOW(9)
000fe3 93ea      	ST   -Y,R30
000fe4 940e 13d4 	CALL _w1_dow_crc8
000fe6 940e 15b7 	CALL __LNEGB1
                 _0x20E0007:
000fe8 940e 16a7 	CALL __LOADLOCR4
000fea 9626      	ADIW R28,6
000feb 9508      	RET
                 _ds18b20_temperature:
000fec 931a      	ST   -Y,R17
000fed 81e9      	LDD  R30,Y+1
000fee 81fa      	LDD  R31,Y+1+1
000fef 93fa      	ST   -Y,R31
000ff0 93ea      	ST   -Y,R30
000ff1 dfce      	RCALL _ds18b20_read_spd
000ff2 30e0      	CPI  R30,0
000ff3 f429      	BRNE _0x202000D
                +
000ff4 e0e0     +LDI R30 , LOW ( 0xC61C3C00 )
000ff5 e3fc     +LDI R31 , HIGH ( 0xC61C3C00 )
000ff6 e16c     +LDI R22 , BYTE3 ( 0xC61C3C00 )
000ff7 ec76     +LDI R23 , BYTE4 ( 0xC61C3C00 )
                 	__GETD1N 0xC61C3C00
000ff8 c12f      	RJMP _0x20E0005
                 _0x202000D:
                +
000ff9 91e0 0251+LDS R30 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB1MN ___ds18b20_scratch_pad,4
000ffb 95e2      	SWAP R30
000ffc 70ef      	ANDI R30,0xF
000ffd 95e6      	LSR  R30
000ffe 70e3      	ANDI R30,LOW(0x3)
000fff 2f1e      	MOV  R17,R30
001000 81e9      	LDD  R30,Y+1
001001 81fa      	LDD  R31,Y+1+1
001002 93fa      	ST   -Y,R31
001003 93ea      	ST   -Y,R30
001004 df99      	RCALL _ds18b20_select
001005 30e0      	CPI  R30,0
001006 f429      	BRNE _0x202000E
                +
001007 e0e0     +LDI R30 , LOW ( 0xC61C3C00 )
001008 e3fc     +LDI R31 , HIGH ( 0xC61C3C00 )
001009 e16c     +LDI R22 , BYTE3 ( 0xC61C3C00 )
00100a ec76     +LDI R23 , BYTE4 ( 0xC61C3C00 )
                 	__GETD1N 0xC61C3C00
00100b c11c      	RJMP _0x20E0005
                 _0x202000E:
00100c e4e4      	LDI  R30,LOW(68)
00100d 93ea      	ST   -Y,R30
00100e 940e 135a 	CALL _w1_write
001010 2fe1      	MOV  R30,R17
001011 e5a4      	LDI  R26,LOW(_conv_delay_G101*2)
001012 e0b0      	LDI  R27,HIGH(_conv_delay_G101*2)
001013 e0f0      	LDI  R31,0
001014 0fee      	LSL  R30
001015 1fff      	ROL  R31
001016 0fea      	ADD  R30,R26
001017 1ffb      	ADC  R31,R27
001018 940e 164d 	CALL __GETW1PF
00101a 93fa      	ST   -Y,R31
00101b 93ea      	ST   -Y,R30
00101c 940e 1305 	CALL _delay_ms
00101e 81e9      	LDD  R30,Y+1
00101f 81fa      	LDD  R31,Y+1+1
001020 93fa      	ST   -Y,R31
001021 93ea      	ST   -Y,R30
001022 df9d      	RCALL _ds18b20_read_spd
001023 30e0      	CPI  R30,0
001024 f429      	BRNE _0x202000F
                +
001025 e0e0     +LDI R30 , LOW ( 0xC61C3C00 )
001026 e3fc     +LDI R31 , HIGH ( 0xC61C3C00 )
001027 e16c     +LDI R22 , BYTE3 ( 0xC61C3C00 )
001028 ec76     +LDI R23 , BYTE4 ( 0xC61C3C00 )
                 	__GETD1N 0xC61C3C00
001029 c0fe      	RJMP _0x20E0005
                 _0x202000F:
00102a 940e 1311 	CALL _w1_init
00102c 2fe1      	MOV  R30,R17
00102d e5ac      	LDI  R26,LOW(_bit_mask_G101*2)
00102e e0b0      	LDI  R27,HIGH(_bit_mask_G101*2)
00102f e0f0      	LDI  R31,0
001030 0fee      	LSL  R30
001031 1fff      	ROL  R31
001032 0fea      	ADD  R30,R26
001033 1ffb      	ADC  R31,R27
001034 940e 164d 	CALL __GETW1PF
001036 91a0 024d 	LDS  R26,___ds18b20_scratch_pad
001038 91b0 024e 	LDS  R27,___ds18b20_scratch_pad+1
00103a 23ea      	AND  R30,R26
00103b 23fb      	AND  R31,R27
00103c 940e 15b2 	CALL __CWD1
00103e 940e 1456 	CALL __CDF1
                +
001040 e0a0     +LDI R26 , LOW ( 0x3D800000 )
001041 e0b0     +LDI R27 , HIGH ( 0x3D800000 )
001042 e880     +LDI R24 , BYTE3 ( 0x3D800000 )
001043 e39d     +LDI R25 , BYTE4 ( 0x3D800000 )
                 	__GETD2N 0x3D800000
001044 940e 14e0 	CALL __MULF12
001046 c0e1      	RJMP _0x20E0005
                 _ds18b20_init:
001047 81eb      	LDD  R30,Y+3
001048 81fc      	LDD  R31,Y+3+1
001049 93fa      	ST   -Y,R31
00104a 93ea      	ST   -Y,R30
00104b df52      	RCALL _ds18b20_select
00104c 30e0      	CPI  R30,0
00104d f411      	BRNE _0x2020010
00104e e0e0      	LDI  R30,LOW(0)
00104f c045      	RJMP _0x20E0006
                 _0x2020010:
001050 81e8      	LD   R30,Y
001051 95e2      	SWAP R30
001052 7fe0      	ANDI R30,0xF0
001053 0fee      	LSL  R30
001054 61ef      	ORI  R30,LOW(0x1F)
001055 83e8      	ST   Y,R30
001056 e4ee      	LDI  R30,LOW(78)
001057 93ea      	ST   -Y,R30
001058 940e 135a 	CALL _w1_write
00105a 81e9      	LDD  R30,Y+1
00105b 93ea      	ST   -Y,R30
00105c 940e 135a 	CALL _w1_write
00105e 81ea      	LDD  R30,Y+2
00105f 93ea      	ST   -Y,R30
001060 940e 135a 	CALL _w1_write
001062 81e8      	LD   R30,Y
001063 93ea      	ST   -Y,R30
001064 940e 135a 	CALL _w1_write
001066 81eb      	LDD  R30,Y+3
001067 81fc      	LDD  R31,Y+3+1
001068 93fa      	ST   -Y,R31
001069 93ea      	ST   -Y,R30
00106a df55      	RCALL _ds18b20_read_spd
00106b 30e0      	CPI  R30,0
00106c f411      	BRNE _0x2020011
00106d e0e0      	LDI  R30,LOW(0)
00106e c026      	RJMP _0x20E0006
                 _0x2020011:
                +
00106f 91a0 0250+LDS R26 , ___ds18b20_scratch_pad + ( 3 )
                 	__GETB2MN ___ds18b20_scratch_pad,3
001071 81ea      	LDD  R30,Y+2
001072 17ea      	CP   R30,R26
001073 f451      	BRNE _0x2020013
                +
001074 91a0 024f+LDS R26 , ___ds18b20_scratch_pad + ( 2 )
                 	__GETB2MN ___ds18b20_scratch_pad,2
001076 81e9      	LDD  R30,Y+1
001077 17ea      	CP   R30,R26
001078 f429      	BRNE _0x2020013
                +
001079 91a0 0251+LDS R26 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB2MN ___ds18b20_scratch_pad,4
00107b 81e8      	LD   R30,Y
00107c 17ea      	CP   R30,R26
00107d f011      	BREQ _0x2020012
                 _0x2020013:
00107e e0e0      	LDI  R30,LOW(0)
00107f c015      	RJMP _0x20E0006
                 _0x2020012:
001080 81eb      	LDD  R30,Y+3
001081 81fc      	LDD  R31,Y+3+1
001082 93fa      	ST   -Y,R31
001083 93ea      	ST   -Y,R30
001084 df19      	RCALL _ds18b20_select
001085 30e0      	CPI  R30,0
001086 f411      	BRNE _0x2020015
001087 e0e0      	LDI  R30,LOW(0)
001088 c00c      	RJMP _0x20E0006
                 _0x2020015:
001089 e4e8      	LDI  R30,LOW(72)
00108a 93ea      	ST   -Y,R30
00108b 940e 135a 	CALL _w1_write
00108d e0ef      	LDI  R30,LOW(15)
00108e e0f0      	LDI  R31,HIGH(15)
00108f 93fa      	ST   -Y,R31
001090 93ea      	ST   -Y,R30
001091 940e 1305 	CALL _delay_ms
001093 940e 1311 	CALL _w1_init
                 _0x20E0006:
001095 9625      	ADIW R28,5
001096 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
001097 81e8      	LD   R30,Y
001098 71e0      	ANDI R30,LOW(0x10)
001099 f011      	BREQ _0x2040004
00109a 9ac3      	SBI  0x18,3
00109b c001      	RJMP _0x2040005
                 _0x2040004:
00109c 98c3      	CBI  0x18,3
                 _0x2040005:
00109d 81e8      	LD   R30,Y
00109e 72e0      	ANDI R30,LOW(0x20)
00109f f011      	BREQ _0x2040006
0010a0 9ac4      	SBI  0x18,4
0010a1 c001      	RJMP _0x2040007
                 _0x2040006:
0010a2 98c4      	CBI  0x18,4
                 _0x2040007:
0010a3 81e8      	LD   R30,Y
0010a4 74e0      	ANDI R30,LOW(0x40)
0010a5 f011      	BREQ _0x2040008
0010a6 9ac5      	SBI  0x18,5
0010a7 c001      	RJMP _0x2040009
                 _0x2040008:
0010a8 98c5      	CBI  0x18,5
                 _0x2040009:
0010a9 81e8      	LD   R30,Y
0010aa 78e0      	ANDI R30,LOW(0x80)
0010ab f011      	BREQ _0x204000A
0010ac 9ac6      	SBI  0x18,6
0010ad c001      	RJMP _0x204000B
                 _0x204000A:
0010ae 98c6      	CBI  0x18,6
                 _0x204000B:
                +
0010af e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
0010b0 958a     +DEC R24
0010b1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
0010b2 9ac2      	SBI  0x18,2
                +
0010b3 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0010b4 958a     +DEC R24
0010b5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0010b6 98c2      	CBI  0x18,2
                +
0010b7 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0010b8 958a     +DEC R24
0010b9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0010ba c0b3      	RJMP _0x20E0004
                 __lcd_write_data:
0010bb 81e8      	LD   R30,Y
0010bc 93ea      	ST   -Y,R30
0010bd dfd9      	RCALL __lcd_write_nibble_G102
0010be 81e8          ld    r30,y
0010bf 95e2          swap  r30
0010c0 83e8          st    y,r30
0010c1 81e8      	LD   R30,Y
0010c2 93ea      	ST   -Y,R30
0010c3 dfd3      	RCALL __lcd_write_nibble_G102
                +
0010c4 ec88     +LDI R24 , LOW ( 200 )
0010c5 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0010c6 9701     +SBIW R24 , 1
0010c7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0010c8 c0a5      	RJMP _0x20E0004
                 _lcd_gotoxy:
0010c9 81e8      	LD   R30,Y
0010ca e0f0      	LDI  R31,0
0010cb 55e6      	SUBI R30,LOW(-__base_y_G102)
0010cc 4ffd      	SBCI R31,HIGH(-__base_y_G102)
0010cd 81e0      	LD   R30,Z
0010ce 81a9      	LDD  R26,Y+1
0010cf 0fea      	ADD  R30,R26
0010d0 93ea      	ST   -Y,R30
0010d1 dfe9      	RCALL __lcd_write_data
0010d2 8049      	LDD  R4,Y+1
0010d3 81e8      	LD   R30,Y
0010d4 93e0 02ae 	STS  __lcd_y,R30
0010d6 9622      	ADIW R28,2
0010d7 9508      	RET
                 _lcd_clear:
0010d8 e0e2      	LDI  R30,LOW(2)
0010d9 93ea      	ST   -Y,R30
0010da dfe0      	RCALL __lcd_write_data
0010db e0e3      	LDI  R30,LOW(3)
0010dc e0f0      	LDI  R31,HIGH(3)
0010dd 93fa      	ST   -Y,R31
0010de 93ea      	ST   -Y,R30
0010df 940e 1305 	CALL _delay_ms
0010e1 e0ec      	LDI  R30,LOW(12)
0010e2 93ea      	ST   -Y,R30
0010e3 dfd7      	RCALL __lcd_write_data
0010e4 e0e1      	LDI  R30,LOW(1)
0010e5 93ea      	ST   -Y,R30
0010e6 dfd4      	RCALL __lcd_write_data
0010e7 e0e3      	LDI  R30,LOW(3)
0010e8 e0f0      	LDI  R31,HIGH(3)
0010e9 93fa      	ST   -Y,R31
0010ea 93ea      	ST   -Y,R30
0010eb 940e 1305 	CALL _delay_ms
0010ed e0e0      	LDI  R30,LOW(0)
0010ee 93e0 02ae 	STS  __lcd_y,R30
0010f0 2e4e      	MOV  R4,R30
0010f1 9508      	RET
                 _lcd_putchar:
0010f2 81a8      	LD   R26,Y
0010f3 30aa      	CPI  R26,LOW(0xA)
0010f4 f021      	BREQ _0x2040011
0010f5 91e0 02af 	LDS  R30,__lcd_maxx
0010f7 164e      	CP   R4,R30
0010f8 f068      	BRLO _0x2040010
                 _0x2040011:
0010f9 e0e0      	LDI  R30,LOW(0)
0010fa 93ea      	ST   -Y,R30
0010fb 91e0 02ae 	LDS  R30,__lcd_y
0010fd 5fef      	SUBI R30,-LOW(1)
0010fe 93e0 02ae 	STS  __lcd_y,R30
001100 93ea      	ST   -Y,R30
001101 dfc7      	RCALL _lcd_gotoxy
001102 81a8      	LD   R26,Y
001103 30aa      	CPI  R26,LOW(0xA)
001104 f409      	BRNE _0x2040013
001105 c068      	RJMP _0x20E0004
                 _0x2040013:
                 _0x2040010:
001106 9443      	INC  R4
001107 9ac0      	SBI  0x18,0
001108 81e8      	LD   R30,Y
001109 93ea      	ST   -Y,R30
00110a dfb0      	RCALL __lcd_write_data
00110b 98c0      	CBI  0x18,0
00110c c061      	RJMP _0x20E0004
                 _lcd_puts:
00110d 931a      	ST   -Y,R17
                 _0x2040014:
00110e 81a9      	LDD  R26,Y+1
00110f 81ba      	LDD  R27,Y+1+1
001110 91ed      	LD   R30,X+
001111 83a9      	STD  Y+1,R26
001112 83ba      	STD  Y+1+1,R27
001113 2f1e      	MOV  R17,R30
001114 30e0      	CPI  R30,0
001115 f019      	BREQ _0x2040016
001116 931a      	ST   -Y,R17
001117 dfda      	RCALL _lcd_putchar
001118 cff5      	RJMP _0x2040014
                 _0x2040016:
001119 c00e      	RJMP _0x20E0005
                 _lcd_putsf:
00111a 931a      	ST   -Y,R17
                 _0x2040017:
00111b 81e9      	LDD  R30,Y+1
00111c 81fa      	LDD  R31,Y+1+1
00111d 9631      	ADIW R30,1
00111e 83e9      	STD  Y+1,R30
00111f 83fa      	STD  Y+1+1,R31
001120 9731      	SBIW R30,1
001121 91e4      	LPM  R30,Z
001122 2f1e      	MOV  R17,R30
001123 30e0      	CPI  R30,0
001124 f019      	BREQ _0x2040019
001125 931a      	ST   -Y,R17
001126 dfcb      	RCALL _lcd_putchar
001127 cff3      	RJMP _0x2040017
                 _0x2040019:
                 _0x20E0005:
001128 8118      	LDD  R17,Y+0
001129 9623      	ADIW R28,3
00112a 9508      	RET
                 _lcd_init:
00112b 9abb      	SBI  0x17,3
00112c 9abc      	SBI  0x17,4
00112d 9abd      	SBI  0x17,5
00112e 9abe      	SBI  0x17,6
00112f 9aba      	SBI  0x17,2
001130 9ab8      	SBI  0x17,0
001131 9ab9      	SBI  0x17,1
001132 98c2      	CBI  0x18,2
001133 98c0      	CBI  0x18,0
001134 98c1      	CBI  0x18,1
001135 81e8      	LD   R30,Y
001136 93e0 02af 	STS  __lcd_maxx,R30
001138 58e0      	SUBI R30,-LOW(128)
                +
001139 93e0 02ac+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
00113b 81e8      	LD   R30,Y
00113c 54e0      	SUBI R30,-LOW(192)
                +
00113d 93e0 02ad+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
00113f e1e4      	LDI  R30,LOW(20)
001140 e0f0      	LDI  R31,HIGH(20)
001141 93fa      	ST   -Y,R31
001142 93ea      	ST   -Y,R30
001143 940e 1305 	CALL _delay_ms
001145 e3e0      	LDI  R30,LOW(48)
001146 93ea      	ST   -Y,R30
001147 df4f      	RCALL __lcd_write_nibble_G102
                +
001148 e980     +LDI R24 , LOW ( 400 )
001149 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
00114a 9701     +SBIW R24 , 1
00114b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
00114c e3e0      	LDI  R30,LOW(48)
00114d 93ea      	ST   -Y,R30
00114e df48      	RCALL __lcd_write_nibble_G102
                +
00114f e980     +LDI R24 , LOW ( 400 )
001150 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
001151 9701     +SBIW R24 , 1
001152 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
001153 e3e0      	LDI  R30,LOW(48)
001154 93ea      	ST   -Y,R30
001155 df41      	RCALL __lcd_write_nibble_G102
                +
001156 e980     +LDI R24 , LOW ( 400 )
001157 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
001158 9701     +SBIW R24 , 1
001159 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
00115a e2e0      	LDI  R30,LOW(32)
00115b 93ea      	ST   -Y,R30
00115c df3a      	RCALL __lcd_write_nibble_G102
                +
00115d e980     +LDI R24 , LOW ( 400 )
00115e e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
00115f 9701     +SBIW R24 , 1
001160 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
001161 e2e8      	LDI  R30,LOW(40)
001162 93ea      	ST   -Y,R30
001163 df57      	RCALL __lcd_write_data
001164 e0e4      	LDI  R30,LOW(4)
001165 93ea      	ST   -Y,R30
001166 df54      	RCALL __lcd_write_data
001167 e8e5      	LDI  R30,LOW(133)
001168 93ea      	ST   -Y,R30
001169 df51      	RCALL __lcd_write_data
00116a e0e6      	LDI  R30,LOW(6)
00116b 93ea      	ST   -Y,R30
00116c df4e      	RCALL __lcd_write_data
00116d df6a      	RCALL _lcd_clear
                 _0x20E0004:
00116e 9621      	ADIW R28,1
00116f 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
001170 91e9          ld   r30,y+
001171 91f9          ld   r31,y+
001172 91a9          ld   r26,y+
001173 91b9          ld   r27,y+
001174 01cd          movw r24,r26
                 strcpyf0:
001175 9005      	lpm  r0,z+
001176 920d          st   x+,r0
001177 2000          tst  r0
001178 f7e1          brne strcpyf0
001179 01fc          movw r30,r24
00117a 9508          ret
                 _strlen:
00117b 91a9          ld   r26,y+
00117c 91b9          ld   r27,y+
00117d 27ee          clr  r30
00117e 27ff          clr  r31
                 strlen0:
00117f 916d          ld   r22,x+
001180 2366          tst  r22
001181 f011          breq strlen1
001182 9631          adiw r30,1
001183 cffb          rjmp strlen0
                 strlen1:
001184 9508          ret
                 _strlenf:
001185 27aa          clr  r26
001186 27bb          clr  r27
001187 91e9          ld   r30,y+
001188 91f9          ld   r31,y+
                 strlenf0:
001189 9005      	lpm  r0,z+
00118a 2000          tst  r0
00118b f011          breq strlenf1
00118c 9611          adiw r26,1
00118d cffb          rjmp strlenf0
                 strlenf1:
00118e 01fd          movw r30,r26
00118f 9508          ret
                 
                 	.CSEG
                 _ftrunc:
001190 817b         ldd  r23,y+3
001191 816a         ldd  r22,y+2
001192 81f9         ldd  r31,y+1
001193 81e8         ld   r30,y
001194 fb77         bst  r23,7
001195 0f77         lsl  r23
001196 fd67         sbrc r22,7
001197 6071         sbr  r23,1
001198 2f97         mov  r25,r23
001199 579e         subi r25,0x7e
00119a f081         breq __ftrunc0
00119b f078         brcs __ftrunc0
00119c 3198         cpi  r25,24
00119d f490         brsh __ftrunc1
00119e 27aa         clr  r26
00119f 27bb         clr  r27
0011a0 2788         clr  r24
                 __ftrunc2:
0011a1 9408         sec
0011a2 9587         ror  r24
0011a3 95b7         ror  r27
0011a4 95a7         ror  r26
0011a5 959a         dec  r25
0011a6 f7d1         brne __ftrunc2
0011a7 23ea         and  r30,r26
0011a8 23fb         and  r31,r27
0011a9 2368         and  r22,r24
0011aa c005         rjmp __ftrunc1
                 __ftrunc0:
0011ab 94e8         clt
0011ac 2777         clr  r23
0011ad 27ee         clr  r30
0011ae 27ff         clr  r31
0011af 2766         clr  r22
                 __ftrunc1:
0011b0 776f         cbr  r22,0x80
0011b1 9576         lsr  r23
0011b2 f408         brcc __ftrunc3
0011b3 6860         sbr  r22,0x80
                 __ftrunc3:
0011b4 f977         bld  r23,7
0011b5 91a9         ld   r26,y+
0011b6 91b9         ld   r27,y+
0011b7 9189         ld   r24,y+
0011b8 9199         ld   r25,y+
0011b9 17ea         cp   r30,r26
0011ba 07fb         cpc  r31,r27
0011bb 0768         cpc  r22,r24
0011bc 0779         cpc  r23,r25
0011bd fb97         bst  r25,7
0011be 9508         ret
                 _floor:
0011bf 940e 1651 	CALL __GETD1S0
0011c1 940e 165b 	CALL __PUTPARD1
0011c3 940e 1190 	CALL _ftrunc
0011c5 940e 1656 	CALL __PUTD1S0
0011c7 f419          brne __floor1
                 __floor0:
0011c8 940e 1651 	CALL __GETD1S0
0011ca c009      	RJMP _0x20E0003
                 __floor1:
0011cb f7e6          brtc __floor0
0011cc 940e 1651 	CALL __GETD1S0
                +
0011ce e0a0     +LDI R26 , LOW ( 0x3F800000 )
0011cf e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0011d0 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0011d1 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0011d2 940e 1489 	CALL __SUBF12
                 _0x20E0003:
0011d4 9624      	ADIW R28,4
0011d5 9508      	RET
                 
                 	.CSEG
                 _ftoa:
0011d6 9724      	SBIW R28,4
0011d7 e0e0      	LDI  R30,LOW(0)
0011d8 83e8      	ST   Y,R30
0011d9 83e9      	STD  Y+1,R30
0011da 83ea      	STD  Y+2,R30
0011db e3ef      	LDI  R30,LOW(63)
0011dc 83eb      	STD  Y+3,R30
0011dd 931a      	ST   -Y,R17
0011de 930a      	ST   -Y,R16
0011df 85eb      	LDD  R30,Y+11
0011e0 85fc      	LDD  R31,Y+11+1
0011e1 3fef      	CPI  R30,LOW(0xFFFF)
0011e2 efaf      	LDI  R26,HIGH(0xFFFF)
0011e3 07fa      	CPC  R31,R26
0011e4 f459      	BRNE _0x20C000D
0011e5 81ee      	LDD  R30,Y+6
0011e6 81ff      	LDD  R31,Y+6+1
0011e7 93fa      	ST   -Y,R31
0011e8 93ea      	ST   -Y,R30
                +
0011e9 ece6     +LDI R30 , LOW ( 2 * _0x20C0000 + ( 0 ) )
0011ea e0f1     +LDI R31 , HIGH ( 2 * _0x20C0000 + ( 0 ) )
                 	__POINTW1FN _0x20C0000,0
0011eb 93fa      	ST   -Y,R31
0011ec 93ea      	ST   -Y,R30
0011ed 940e 1170 	CALL _strcpyf
0011ef c111      	RJMP _0x20E0002
                 _0x20C000D:
0011f0 3fef      	CPI  R30,LOW(0x7FFF)
0011f1 e7af      	LDI  R26,HIGH(0x7FFF)
0011f2 07fa      	CPC  R31,R26
0011f3 f459      	BRNE _0x20C000C
0011f4 81ee      	LDD  R30,Y+6
0011f5 81ff      	LDD  R31,Y+6+1
0011f6 93fa      	ST   -Y,R31
0011f7 93ea      	ST   -Y,R30
                +
0011f8 ece7     +LDI R30 , LOW ( 2 * _0x20C0000 + ( 1 ) )
0011f9 e0f1     +LDI R31 , HIGH ( 2 * _0x20C0000 + ( 1 ) )
                 	__POINTW1FN _0x20C0000,1
0011fa 93fa      	ST   -Y,R31
0011fb 93ea      	ST   -Y,R30
0011fc 940e 1170 	CALL _strcpyf
0011fe c102      	RJMP _0x20E0002
                 _0x20C000C:
0011ff 85ac      	LDD  R26,Y+12
001200 23aa      	TST  R26
001201 f492      	BRPL _0x20C000F
                +
001202 85e9     +LDD R30 , Y + 9
001203 85fa     +LDD R31 , Y + 9 + 1
001204 856b     +LDD R22 , Y + 9 + 2
001205 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
001206 940e 13ea 	CALL __ANEGF1
                +
001208 87e9     +STD Y + 9 , R30
001209 87fa     +STD Y + 9 + 1 , R31
00120a 876b     +STD Y + 9 + 2 , R22
00120b 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00120c 81ae      	LDD  R26,Y+6
00120d 81bf      	LDD  R27,Y+6+1
00120e 9611      	ADIW R26,1
00120f 83ae      	STD  Y+6,R26
001210 83bf      	STD  Y+6+1,R27
001211 9711      	SBIW R26,1
001212 e2ed      	LDI  R30,LOW(45)
001213 93ec      	ST   X,R30
                 _0x20C000F:
001214 85a8      	LDD  R26,Y+8
001215 30a7      	CPI  R26,LOW(0x7)
001216 f010      	BRLO _0x20C0010
001217 e0e6      	LDI  R30,LOW(6)
001218 87e8      	STD  Y+8,R30
                 _0x20C0010:
001219 8518      	LDD  R17,Y+8
                 _0x20C0011:
00121a 2fe1      	MOV  R30,R17
00121b 5011      	SUBI R17,1
00121c 30e0      	CPI  R30,0
00121d f079      	BREQ _0x20C0013
                +
00121e 81aa     +LDD R26 , Y + 2
00121f 81bb     +LDD R27 , Y + 2 + 1
001220 818c     +LDD R24 , Y + 2 + 2
001221 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
001222 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
001223 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
001224 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
001225 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
001226 940e 14e0 	CALL __MULF12
                +
001228 83ea     +STD Y + 2 , R30
001229 83fb     +STD Y + 2 + 1 , R31
00122a 836c     +STD Y + 2 + 2 , R22
00122b 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00122c cfed      	RJMP _0x20C0011
                 _0x20C0013:
                +
00122d 81ea     +LDD R30 , Y + 2
00122e 81fb     +LDD R31 , Y + 2 + 1
00122f 816c     +LDD R22 , Y + 2 + 2
001230 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
001231 85a9     +LDD R26 , Y + 9
001232 85ba     +LDD R27 , Y + 9 + 1
001233 858b     +LDD R24 , Y + 9 + 2
001234 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001235 940e 1490 	CALL __ADDF12
                +
001237 87e9     +STD Y + 9 , R30
001238 87fa     +STD Y + 9 + 1 , R31
001239 876b     +STD Y + 9 + 2 , R22
00123a 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00123b e010      	LDI  R17,LOW(0)
                +
00123c e0e0     +LDI R30 , LOW ( 0x3F800000 )
00123d e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00123e e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00123f e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
001240 83ea     +STD Y + 2 , R30
001241 83fb     +STD Y + 2 + 1 , R31
001242 836c     +STD Y + 2 + 2 , R22
001243 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 _0x20C0014:
                +
001244 81ea     +LDD R30 , Y + 2
001245 81fb     +LDD R31 , Y + 2 + 1
001246 816c     +LDD R22 , Y + 2 + 2
001247 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
001248 85a9     +LDD R26 , Y + 9
001249 85ba     +LDD R27 , Y + 9 + 1
00124a 858b     +LDD R24 , Y + 9 + 2
00124b 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00124c 940e 1573 	CALL __CMPF12
00124e f0e8      	BRLO _0x20C0016
                +
00124f 81aa     +LDD R26 , Y + 2
001250 81bb     +LDD R27 , Y + 2 + 1
001251 818c     +LDD R24 , Y + 2 + 2
001252 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
001253 e0e0     +LDI R30 , LOW ( 0x41200000 )
001254 e0f0     +LDI R31 , HIGH ( 0x41200000 )
001255 e260     +LDI R22 , BYTE3 ( 0x41200000 )
001256 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
001257 940e 14e0 	CALL __MULF12
                +
001259 83ea     +STD Y + 2 , R30
00125a 83fb     +STD Y + 2 + 1 , R31
00125b 836c     +STD Y + 2 + 2 , R22
00125c 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00125d 5f1f      	SUBI R17,-LOW(1)
00125e 3217      	CPI  R17,39
00125f f058      	BRLO _0x20C0017
001260 81ee      	LDD  R30,Y+6
001261 81ff      	LDD  R31,Y+6+1
001262 93fa      	ST   -Y,R31
001263 93ea      	ST   -Y,R30
                +
001264 eceb     +LDI R30 , LOW ( 2 * _0x20C0000 + ( 5 ) )
001265 e0f1     +LDI R31 , HIGH ( 2 * _0x20C0000 + ( 5 ) )
                 	__POINTW1FN _0x20C0000,5
001266 93fa      	ST   -Y,R31
001267 93ea      	ST   -Y,R30
001268 940e 1170 	CALL _strcpyf
00126a c096      	RJMP _0x20E0002
                 _0x20C0017:
00126b cfd8      	RJMP _0x20C0014
                 _0x20C0016:
00126c 3010      	CPI  R17,0
00126d f449      	BRNE _0x20C0018
00126e 81ae      	LDD  R26,Y+6
00126f 81bf      	LDD  R27,Y+6+1
001270 9611      	ADIW R26,1
001271 83ae      	STD  Y+6,R26
001272 83bf      	STD  Y+6+1,R27
001273 9711      	SBIW R26,1
001274 e3e0      	LDI  R30,LOW(48)
001275 93ec      	ST   X,R30
001276 c049      	RJMP _0x20C0019
                 _0x20C0018:
                 _0x20C001A:
001277 2fe1      	MOV  R30,R17
001278 5011      	SUBI R17,1
001279 30e0      	CPI  R30,0
00127a f411      	BRNE PC+3
00127b 940c 12c0 	JMP _0x20C001C
                +
00127d 81aa     +LDD R26 , Y + 2
00127e 81bb     +LDD R27 , Y + 2 + 1
00127f 818c     +LDD R24 , Y + 2 + 2
001280 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
001281 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
001282 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
001283 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
001284 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
001285 940e 14e0 	CALL __MULF12
                +
001287 e0a0     +LDI R26 , LOW ( 0x3F000000 )
001288 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
001289 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00128a e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00128b 940e 1490 	CALL __ADDF12
00128d 940e 165b 	CALL __PUTPARD1
00128f 940e 11bf 	CALL _floor
                +
001291 83ea     +STD Y + 2 , R30
001292 83fb     +STD Y + 2 + 1 , R31
001293 836c     +STD Y + 2 + 2 , R22
001294 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
001295 85a9     +LDD R26 , Y + 9
001296 85ba     +LDD R27 , Y + 9 + 1
001297 858b     +LDD R24 , Y + 9 + 2
001298 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001299 940e 152e 	CALL __DIVF21
00129b 940e 141d 	CALL __CFD1U
00129d 2f0e      	MOV  R16,R30
00129e 81ae      	LDD  R26,Y+6
00129f 81bf      	LDD  R27,Y+6+1
0012a0 9611      	ADIW R26,1
0012a1 83ae      	STD  Y+6,R26
0012a2 83bf      	STD  Y+6+1,R27
0012a3 9711      	SBIW R26,1
0012a4 2fe0      	MOV  R30,R16
0012a5 5de0      	SUBI R30,-LOW(48)
0012a6 93ec      	ST   X,R30
0012a7 2fe0      	MOV  R30,R16
                +
0012a8 81aa     +LDD R26 , Y + 2
0012a9 81bb     +LDD R27 , Y + 2 + 1
0012aa 818c     +LDD R24 , Y + 2 + 2
0012ab 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0012ac 27ff      	CLR  R31
0012ad 2766      	CLR  R22
0012ae 2777      	CLR  R23
0012af 940e 1456 	CALL __CDF1
0012b1 940e 14e0 	CALL __MULF12
                +
0012b3 85a9     +LDD R26 , Y + 9
0012b4 85ba     +LDD R27 , Y + 9 + 1
0012b5 858b     +LDD R24 , Y + 9 + 2
0012b6 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0012b7 940e 1660 	CALL __SWAPD12
0012b9 940e 1489 	CALL __SUBF12
                +
0012bb 87e9     +STD Y + 9 , R30
0012bc 87fa     +STD Y + 9 + 1 , R31
0012bd 876b     +STD Y + 9 + 2 , R22
0012be 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0012bf cfb7      	RJMP _0x20C001A
                 _0x20C001C:
                 _0x20C0019:
0012c0 85e8      	LDD  R30,Y+8
0012c1 30e0      	CPI  R30,0
0012c2 f1d1      	BREQ _0x20E0001
0012c3 81ae      	LDD  R26,Y+6
0012c4 81bf      	LDD  R27,Y+6+1
0012c5 9611      	ADIW R26,1
0012c6 83ae      	STD  Y+6,R26
0012c7 83bf      	STD  Y+6+1,R27
0012c8 9711      	SBIW R26,1
0012c9 e2ee      	LDI  R30,LOW(46)
0012ca 93ec      	ST   X,R30
                 _0x20C001E:
0012cb 85e8      	LDD  R30,Y+8
0012cc 50e1      	SUBI R30,LOW(1)
0012cd 87e8      	STD  Y+8,R30
0012ce 5fef      	SUBI R30,-LOW(1)
0012cf f169      	BREQ _0x20C0020
                +
0012d0 85a9     +LDD R26 , Y + 9
0012d1 85ba     +LDD R27 , Y + 9 + 1
0012d2 858b     +LDD R24 , Y + 9 + 2
0012d3 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
                +
0012d4 e0e0     +LDI R30 , LOW ( 0x41200000 )
0012d5 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0012d6 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0012d7 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0012d8 940e 14e0 	CALL __MULF12
                +
0012da 87e9     +STD Y + 9 , R30
0012db 87fa     +STD Y + 9 + 1 , R31
0012dc 876b     +STD Y + 9 + 2 , R22
0012dd 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0012de 940e 141d 	CALL __CFD1U
0012e0 2f0e      	MOV  R16,R30
0012e1 81ae      	LDD  R26,Y+6
0012e2 81bf      	LDD  R27,Y+6+1
0012e3 9611      	ADIW R26,1
0012e4 83ae      	STD  Y+6,R26
0012e5 83bf      	STD  Y+6+1,R27
0012e6 9711      	SBIW R26,1
0012e7 2fe0      	MOV  R30,R16
0012e8 5de0      	SUBI R30,-LOW(48)
0012e9 93ec      	ST   X,R30
0012ea 2fe0      	MOV  R30,R16
                +
0012eb 85a9     +LDD R26 , Y + 9
0012ec 85ba     +LDD R27 , Y + 9 + 1
0012ed 858b     +LDD R24 , Y + 9 + 2
0012ee 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0012ef 27ff      	CLR  R31
0012f0 2766      	CLR  R22
0012f1 2777      	CLR  R23
0012f2 940e 1456 	CALL __CDF1
0012f4 940e 1660 	CALL __SWAPD12
0012f6 940e 1489 	CALL __SUBF12
                +
0012f8 87e9     +STD Y + 9 , R30
0012f9 87fa     +STD Y + 9 + 1 , R31
0012fa 876b     +STD Y + 9 + 2 , R22
0012fb 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0012fc cfce      	RJMP _0x20C001E
                 _0x20C0020:
                 _0x20E0001:
0012fd 81ae      	LDD  R26,Y+6
0012fe 81bf      	LDD  R27,Y+6+1
0012ff e0e0      	LDI  R30,LOW(0)
001300 93ec      	ST   X,R30
                 _0x20E0002:
001301 8119      	LDD  R17,Y+1
001302 8108      	LDD  R16,Y+0
001303 962d      	ADIW R28,13
001304 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 ___ds18b20_scratch_pad:
00024d           	.BYTE 0x9
                 _RomCode:
000256           	.BYTE 0x12
                 _buffer:
000268           	.BYTE 0x10
                 _uoz_i:
000278           	.BYTE 0x2
                 _zn1:
00027a           	.BYTE 0x2
                 _zn2:
00027c           	.BYTE 0x2
                 _sek:
00027e           	.BYTE 0x2
                 _ob_min:
000280           	.BYTE 0x2
                 _temp1:
000282           	.BYTE 0x2
                 _temp2:
000284           	.BYTE 0x2
                 _temp_buf:
000286           	.BYTE 0x2
                 _i:
000288           	.BYTE 0x2
                 _kk:
00028a           	.BYTE 0x2
                 _temp_ugly:
00028c           	.BYTE 0x1E
                 
                 	.ESEG
                 _temp_f:
000000           	.BYTE 0x2
                 _f:
000002           	.BYTE 0x2
                 _percent:
000004           	.BYTE 0x40
                 _prer_ugly:
000044           	.BYTE 0x10
                 
                 	.DSEG
                 __base_y_G102:
0002aa           	.BYTE 0x4
                 __lcd_y:
0002ae           	.BYTE 0x1
                 __lcd_maxx:
0002af           	.BYTE 0x1
                 __seed_G106:
0002b0           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
001305 91e9      	ld   r30,y+
001306 91f9      	ld   r31,y+
001307 9630      	adiw r30,0
001308 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001309 ea80     +LDI R24 , LOW ( 0xFA0 )
00130a e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
00130b 9701     +SBIW R24 , 1
00130c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
00130d 95a8      	wdr
00130e 9731      	sbiw r30,1
00130f f7c9      	brne __delay_ms0
                 __delay_ms1:
001310 9508      	ret
                 
                 	.equ __w1_port=0x1B
                 	.equ __w1_bit=0x05
                 
                 _w1_init:
001311 27ee      	clr  r30
001312 98dd      	cbi  __w1_port,__w1_bit
001313 9ad5      	sbi  __w1_port-1,__w1_bit
                +
001314 e880     +LDI R24 , LOW ( 0x780 )
001315 e097     +LDI R25 , HIGH ( 0x780 )
                +__DELAY_USW_LOOP :
001316 9701     +SBIW R24 , 1
001317 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x780
001318 98d5      	cbi  __w1_port-1,__w1_bit
                +
001319 e48b     +LDI R24 , LOW ( 0x4B )
                +__DELAY_USB_LOOP :
00131a 958a     +DEC R24
00131b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x4B
00131c 9bcd      	sbis __w1_port-2,__w1_bit
00131d 9508      	ret
                +
00131e e380     +LDI R24 , LOW ( 0x130 )
00131f e091     +LDI R25 , HIGH ( 0x130 )
                +__DELAY_USW_LOOP :
001320 9701     +SBIW R24 , 1
001321 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x130
001322 9bcd      	sbis __w1_port-2,__w1_bit
001323 e0e1      	ldi  r30,1
                +
001324 e188     +LDI R24 , LOW ( 0x618 )
001325 e096     +LDI R25 , HIGH ( 0x618 )
                +__DELAY_USW_LOOP :
001326 9701     +SBIW R24 , 1
001327 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x618
001328 9508      	ret
                 
                 __w1_read_bit:
001329 9ad5      	sbi  __w1_port-1,__w1_bit
                +
00132a e08b     +LDI R24 , LOW ( 0xB )
                +__DELAY_USB_LOOP :
00132b 958a     +DEC R24
00132c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xB
00132d 98d5      	cbi  __w1_port-1,__w1_bit
                +
00132e e38b     +LDI R24 , LOW ( 0x3B )
                +__DELAY_USB_LOOP :
00132f 958a     +DEC R24
001330 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x3B
001331 9488      	clc
001332 99cd      	sbic __w1_port-2,__w1_bit
001333 9408      	sec
001334 95e7      	ror  r30
                +
001335 e480     +LDI R24 , LOW ( 0x140 )
001336 e091     +LDI R25 , HIGH ( 0x140 )
                +__DELAY_USW_LOOP :
001337 9701     +SBIW R24 , 1
001338 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x140
001339 9508      	ret
                 
                 __w1_write_bit:
00133a 94e8      	clt
00133b 9ad5      	sbi  __w1_port-1,__w1_bit
                +
00133c e08b     +LDI R24 , LOW ( 0xB )
                +__DELAY_USB_LOOP :
00133d 958a     +DEC R24
00133e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xB
00133f fd70      	sbrc r23,0
001340 98d5      	cbi  __w1_port-1,__w1_bit
                +
001341 e485     +LDI R24 , LOW ( 0x45 )
                +__DELAY_USB_LOOP :
001342 958a     +DEC R24
001343 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x45
001344 99cd      	sbic __w1_port-2,__w1_bit
001345 c003      	rjmp __w1_write_bit0
001346 ff70      	sbrs r23,0
001347 c003      	rjmp __w1_write_bit1
001348 9508      	ret
                 __w1_write_bit0:
001349 ff70      	sbrs r23,0
00134a 9508      	ret
                 __w1_write_bit1:
                +
00134b e28c     +LDI R24 , LOW ( 0x12C )
00134c e091     +LDI R25 , HIGH ( 0x12C )
                +__DELAY_USW_LOOP :
00134d 9701     +SBIW R24 , 1
00134e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x12C
00134f 98d5      	cbi  __w1_port-1,__w1_bit
                +
001350 e18b     +LDI R24 , LOW ( 0x1B )
                +__DELAY_USB_LOOP :
001351 958a     +DEC R24
001352 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x1B
001353 9468      	set
001354 9508      	ret
                 
                 _w1_read:
001355 e068      	ldi  r22,8
                 	__w1_read0:
001356 dfd2      	rcall __w1_read_bit
001357 956a      	dec  r22
001358 f7e9      	brne __w1_read0
001359 9508      	ret
                 
                 _w1_write:
00135a e068      	ldi  r22,8
00135b 9179      	ld   r23,y+
00135c 27ee      	clr  r30
                 __w1_write0:
00135d dfdc      	rcall __w1_write_bit
00135e f426      	brtc __w1_write1
00135f 9577      	ror  r23
001360 956a      	dec  r22
001361 f7d9      	brne __w1_write0
001362 95e3      	inc  r30
                 __w1_write1:
001363 9508      	ret
                 
                 _w1_search:
001364 934f      	push r20
001365 935f      	push r21
001366 2411      	clr  r1
001367 2744      	clr  r20
001368 81a8      	ld   r26,y
001369 81b9      	ldd  r27,y+1
                 __w1_search0:
00136a 2c01      	mov  r0,r1
00136b 2411      	clr  r1
00136c dfa4      	rcall _w1_init
00136d 23ee      	tst  r30
00136e f0f9      	breq __w1_search7
00136f 81ea      	ldd  r30,y+2
001370 93ea      	st   -y,r30
001371 dfe8      	rcall _w1_write
001372 e051      	ldi  r21,1
                 __w1_search1:
001373 1550      	cp   r21,r0
001374 f498      	brsh __w1_search6
001375 dfb3      	rcall __w1_read_bit
001376 fde7      	sbrc r30,7
001377 c008      	rjmp __w1_search2
001378 dfb0      	rcall __w1_read_bit
001379 fde7      	sbrc r30,7
00137a c006      	rjmp __w1_search3
00137b d03f      	rcall __sel_bit
00137c 2389      	and  r24,r25
00137d f419      	brne __w1_search3
00137e 2e15      	mov  r1,r21
00137f c001      	rjmp __w1_search3
                 __w1_search2:
001380 dfa8      	rcall __w1_read_bit
                 __w1_search3:
001381 d039      	rcall __sel_bit
001382 2389      	and  r24,r25
001383 e070      	ldi  r23,0
001384 f009      	breq __w1_search5
                 __w1_search4:
001385 e071      	ldi  r23,1
                 __w1_search5:
001386 dfb3      	rcall __w1_write_bit
001387 c01e      	rjmp __w1_search13
                 __w1_search6:
001388 dfa0      	rcall __w1_read_bit
001389 ffe7      	sbrs r30,7
00138a c00b      	rjmp __w1_search9
00138b df9d      	rcall __w1_read_bit
00138c ffe7      	sbrs r30,7
00138d c005      	rjmp __w1_search8
                 __w1_search7:
00138e 2fe4      	mov  r30,r20
00138f 915f      	pop  r21
001390 914f      	pop  r20
001391 9623      	adiw r28,3
001392 9508      	ret
                 __w1_search8:
001393 9468      	set
001394 d037      	rcall __set_bit
001395 cfef      	rjmp __w1_search4
                 __w1_search9:
001396 df92      	rcall __w1_read_bit
001397 ffe7      	sbrs r30,7
001398 c001      	rjmp __w1_search10
001399 c003      	rjmp __w1_search11
                 __w1_search10:
00139a 1550      	cp   r21,r0
00139b f031      	breq __w1_search12
00139c 2e15      	mov  r1,r21
                 __w1_search11:
00139d 94e8      	clt
00139e d02d      	rcall __set_bit
00139f 2777      	clr  r23
0013a0 df99      	rcall __w1_write_bit
0013a1 c004      	rjmp __w1_search13
                 __w1_search12:
0013a2 9468      	set
0013a3 d028      	rcall __set_bit
0013a4 e071      	ldi  r23,1
0013a5 df94      	rcall __w1_write_bit
                 __w1_search13:
0013a6 9553      	inc  r21
0013a7 3451      	cpi  r21,65
0013a8 f254      	brlt __w1_search1
0013a9 df7f      	rcall __w1_read_bit
0013aa 1fee      	rol  r30
0013ab 1fee      	rol  r30
0013ac 70e1      	andi r30,1
0013ad 9618      	adiw r26,8
0013ae 93ec      	st   x,r30
0013af 9718      	sbiw r26,8
0013b0 9543      	inc  r20
0013b1 2011      	tst  r1
0013b2 f2d9      	breq __w1_search7
0013b3 e059      	ldi  r21,9
                 __w1_search14:
0013b4 91ec      	ld   r30,x
0013b5 9619      	adiw r26,9
0013b6 93ec      	st   x,r30
0013b7 9718      	sbiw r26,8
0013b8 955a      	dec  r21
0013b9 f7d1      	brne __w1_search14
0013ba cfaf      	rjmp __w1_search0
                 
                 __sel_bit:
0013bb 2fe5      	mov  r30,r21
0013bc 95ea      	dec  r30
0013bd 2f6e      	mov  r22,r30
0013be 95e6      	lsr  r30
0013bf 95e6      	lsr  r30
0013c0 95e6      	lsr  r30
0013c1 27ff      	clr  r31
0013c2 0fea      	add  r30,r26
0013c3 1ffb      	adc  r31,r27
0013c4 8180      	ld   r24,z
0013c5 e091      	ldi  r25,1
0013c6 7067      	andi r22,7
                 __sel_bit0:
0013c7 f019      	breq __sel_bit1
0013c8 0f99      	lsl  r25
0013c9 956a      	dec  r22
0013ca cffc      	rjmp __sel_bit0
                 __sel_bit1:
0013cb 9508      	ret
                 
                 __set_bit:
0013cc dfee      	rcall __sel_bit
0013cd f01e      	brts __set_bit2
0013ce 9590      	com  r25
0013cf 2389      	and  r24,r25
0013d0 c001      	rjmp __set_bit3
                 __set_bit2:
0013d1 2b89      	or   r24,r25
                 __set_bit3:
0013d2 8380      	st   z,r24
0013d3 9508      	ret
                 
                 _w1_dow_crc8:
0013d4 27ee      	clr  r30
0013d5 8188      	ld   r24,y
0013d6 2388      	tst  r24
0013d7 f081      	breq __w1_dow_crc83
0013d8 e168      	ldi  r22,0x18
0013d9 81a9      	ldd  r26,y+1
0013da 81ba      	ldd  r27,y+2
                 __w1_dow_crc80:
0013db e098      	ldi  r25,8
0013dc 91fd      	ld   r31,x+
                 __w1_dow_crc81:
0013dd 2f7f      	mov  r23,r31
0013de 277e      	eor  r23,r30
0013df 9577      	ror  r23
0013e0 f408      	brcc __w1_dow_crc82
0013e1 27e6      	eor  r30,r22
                 __w1_dow_crc82:
0013e2 95e7      	ror  r30
0013e3 95f6      	lsr  r31
0013e4 959a      	dec  r25
0013e5 f7b9      	brne __w1_dow_crc81
0013e6 958a      	dec  r24
0013e7 f799      	brne __w1_dow_crc80
                 __w1_dow_crc83:
0013e8 9623      	adiw r28,3
0013e9 9508      	ret
                 
                 __ANEGF1:
0013ea 9730      	SBIW R30,0
0013eb 4060      	SBCI R22,0
0013ec 4070      	SBCI R23,0
0013ed f009      	BREQ __ANEGF10
0013ee 5870      	SUBI R23,0x80
                 __ANEGF10:
0013ef 9508      	RET
                 
                 __ROUND_REPACK:
0013f0 2355      	TST  R21
0013f1 f442      	BRPL __REPACK
0013f2 3850      	CPI  R21,0x80
0013f3 f411      	BRNE __ROUND_REPACK0
0013f4 ffe0      	SBRS R30,0
0013f5 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0013f6 9631      	ADIW R30,1
0013f7 1f69      	ADC  R22,R25
0013f8 1f79      	ADC  R23,R25
0013f9 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0013fa e850      	LDI  R21,0x80
0013fb 2757      	EOR  R21,R23
0013fc f411      	BRNE __REPACK0
0013fd 935f      	PUSH R21
0013fe c0cf      	RJMP __ZERORES
                 __REPACK0:
0013ff 3f5f      	CPI  R21,0xFF
001400 f031      	BREQ __REPACK1
001401 0f66      	LSL  R22
001402 0c00      	LSL  R0
001403 9557      	ROR  R21
001404 9567      	ROR  R22
001405 2f75      	MOV  R23,R21
001406 9508      	RET
                 __REPACK1:
001407 935f      	PUSH R21
001408 2000      	TST  R0
001409 f00a      	BRMI __REPACK2
00140a c0cf      	RJMP __MAXRES
                 __REPACK2:
00140b c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00140c e850      	LDI  R21,0x80
00140d 2e19      	MOV  R1,R25
00140e 2215      	AND  R1,R21
00140f 0f88      	LSL  R24
001410 1f99      	ROL  R25
001411 2795      	EOR  R25,R21
001412 0f55      	LSL  R21
001413 9587      	ROR  R24
                 
                 __UNPACK1:
001414 e850      	LDI  R21,0x80
001415 2e07      	MOV  R0,R23
001416 2205      	AND  R0,R21
001417 0f66      	LSL  R22
001418 1f77      	ROL  R23
001419 2775      	EOR  R23,R21
00141a 0f55      	LSL  R21
00141b 9567      	ROR  R22
00141c 9508      	RET
                 
                 __CFD1U:
00141d 9468      	SET
00141e c001      	RJMP __CFD1U0
                 __CFD1:
00141f 94e8      	CLT
                 __CFD1U0:
001420 935f      	PUSH R21
001421 dff2      	RCALL __UNPACK1
001422 3870      	CPI  R23,0x80
001423 f018      	BRLO __CFD10
001424 3f7f      	CPI  R23,0xFF
001425 f408      	BRCC __CFD10
001426 c0a7      	RJMP __ZERORES
                 __CFD10:
001427 e156      	LDI  R21,22
001428 1b57      	SUB  R21,R23
001429 f4aa      	BRPL __CFD11
00142a 9551      	NEG  R21
00142b 3058      	CPI  R21,8
00142c f40e      	BRTC __CFD19
00142d 3059      	CPI  R21,9
                 __CFD19:
00142e f030      	BRLO __CFD17
00142f efef      	SER  R30
001430 efff      	SER  R31
001431 ef6f      	SER  R22
001432 e77f      	LDI  R23,0x7F
001433 f977      	BLD  R23,7
001434 c01a      	RJMP __CFD15
                 __CFD17:
001435 2777      	CLR  R23
001436 2355      	TST  R21
001437 f0b9      	BREQ __CFD15
                 __CFD18:
001438 0fee      	LSL  R30
001439 1fff      	ROL  R31
00143a 1f66      	ROL  R22
00143b 1f77      	ROL  R23
00143c 955a      	DEC  R21
00143d f7d1      	BRNE __CFD18
00143e c010      	RJMP __CFD15
                 __CFD11:
00143f 2777      	CLR  R23
                 __CFD12:
001440 3058      	CPI  R21,8
001441 f028      	BRLO __CFD13
001442 2fef      	MOV  R30,R31
001443 2ff6      	MOV  R31,R22
001444 2f67      	MOV  R22,R23
001445 5058      	SUBI R21,8
001446 cff9      	RJMP __CFD12
                 __CFD13:
001447 2355      	TST  R21
001448 f031      	BREQ __CFD15
                 __CFD14:
001449 9576      	LSR  R23
00144a 9567      	ROR  R22
00144b 95f7      	ROR  R31
00144c 95e7      	ROR  R30
00144d 955a      	DEC  R21
00144e f7d1      	BRNE __CFD14
                 __CFD15:
00144f 2000      	TST  R0
001450 f40a      	BRPL __CFD16
001451 d149      	RCALL __ANEGD1
                 __CFD16:
001452 915f      	POP  R21
001453 9508      	RET
                 
                 __CDF1U:
001454 9468      	SET
001455 c001      	RJMP __CDF1U0
                 __CDF1:
001456 94e8      	CLT
                 __CDF1U0:
001457 9730      	SBIW R30,0
001458 4060      	SBCI R22,0
001459 4070      	SBCI R23,0
00145a f0b1      	BREQ __CDF10
00145b 2400      	CLR  R0
00145c f026      	BRTS __CDF11
00145d 2377      	TST  R23
00145e f412      	BRPL __CDF11
00145f 9400      	COM  R0
001460 d13a      	RCALL __ANEGD1
                 __CDF11:
001461 2e17      	MOV  R1,R23
001462 e17e      	LDI  R23,30
001463 2011      	TST  R1
                 __CDF12:
001464 f032      	BRMI __CDF13
001465 957a      	DEC  R23
001466 0fee      	LSL  R30
001467 1fff      	ROL  R31
001468 1f66      	ROL  R22
001469 1c11      	ROL  R1
00146a cff9      	RJMP __CDF12
                 __CDF13:
00146b 2fef      	MOV  R30,R31
00146c 2ff6      	MOV  R31,R22
00146d 2d61      	MOV  R22,R1
00146e 935f      	PUSH R21
00146f df8a      	RCALL __REPACK
001470 915f      	POP  R21
                 __CDF10:
001471 9508      	RET
                 
                 __SWAPACC:
001472 934f      	PUSH R20
001473 01af      	MOVW R20,R30
001474 01fd      	MOVW R30,R26
001475 01da      	MOVW R26,R20
001476 01ab      	MOVW R20,R22
001477 01bc      	MOVW R22,R24
001478 01ca      	MOVW R24,R20
001479 2d40      	MOV  R20,R0
00147a 2c01      	MOV  R0,R1
00147b 2e14      	MOV  R1,R20
00147c 914f      	POP  R20
00147d 9508      	RET
                 
                 __UADD12:
00147e 0fea      	ADD  R30,R26
00147f 1ffb      	ADC  R31,R27
001480 1f68      	ADC  R22,R24
001481 9508      	RET
                 
                 __NEGMAN1:
001482 95e0      	COM  R30
001483 95f0      	COM  R31
001484 9560      	COM  R22
001485 5fef      	SUBI R30,-1
001486 4fff      	SBCI R31,-1
001487 4f6f      	SBCI R22,-1
001488 9508      	RET
                 
                 __SUBF12:
001489 935f      	PUSH R21
00148a df81      	RCALL __UNPACK
00148b 3890      	CPI  R25,0x80
00148c f171      	BREQ __ADDF129
00148d e850      	LDI  R21,0x80
00148e 2615      	EOR  R1,R21
                 
00148f c004      	RJMP __ADDF120
                 
                 __ADDF12:
001490 935f      	PUSH R21
001491 df7a      	RCALL __UNPACK
001492 3890      	CPI  R25,0x80
001493 f139      	BREQ __ADDF129
                 
                 __ADDF120:
001494 3870      	CPI  R23,0x80
001495 f121      	BREQ __ADDF128
                 __ADDF121:
001496 2f57      	MOV  R21,R23
001497 1b59      	SUB  R21,R25
001498 f12b      	BRVS __ADDF1211
001499 f412      	BRPL __ADDF122
00149a dfd7      	RCALL __SWAPACC
00149b cffa      	RJMP __ADDF121
                 __ADDF122:
00149c 3158      	CPI  R21,24
00149d f018      	BRLO __ADDF123
00149e 27aa      	CLR  R26
00149f 27bb      	CLR  R27
0014a0 2788      	CLR  R24
                 __ADDF123:
0014a1 3058      	CPI  R21,8
0014a2 f028      	BRLO __ADDF124
0014a3 2fab      	MOV  R26,R27
0014a4 2fb8      	MOV  R27,R24
0014a5 2788      	CLR  R24
0014a6 5058      	SUBI R21,8
0014a7 cff9      	RJMP __ADDF123
                 __ADDF124:
0014a8 2355      	TST  R21
0014a9 f029      	BREQ __ADDF126
                 __ADDF125:
0014aa 9586      	LSR  R24
0014ab 95b7      	ROR  R27
0014ac 95a7      	ROR  R26
0014ad 955a      	DEC  R21
0014ae f7d9      	BRNE __ADDF125
                 __ADDF126:
0014af 2d50      	MOV  R21,R0
0014b0 2551      	EOR  R21,R1
0014b1 f072      	BRMI __ADDF127
0014b2 dfcb      	RCALL __UADD12
0014b3 f438      	BRCC __ADDF129
0014b4 9567      	ROR  R22
0014b5 95f7      	ROR  R31
0014b6 95e7      	ROR  R30
0014b7 9573      	INC  R23
0014b8 f413      	BRVC __ADDF129
0014b9 c020      	RJMP __MAXRES
                 __ADDF128:
0014ba dfb7      	RCALL __SWAPACC
                 __ADDF129:
0014bb df3e      	RCALL __REPACK
0014bc 915f      	POP  R21
0014bd 9508      	RET
                 __ADDF1211:
0014be f7d8      	BRCC __ADDF128
0014bf cffb      	RJMP __ADDF129
                 __ADDF127:
0014c0 1bea      	SUB  R30,R26
0014c1 0bfb      	SBC  R31,R27
0014c2 0b68      	SBC  R22,R24
0014c3 f051      	BREQ __ZERORES
0014c4 f410      	BRCC __ADDF1210
0014c5 9400      	COM  R0
0014c6 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0014c7 2366      	TST  R22
0014c8 f392      	BRMI __ADDF129
0014c9 0fee      	LSL  R30
0014ca 1fff      	ROL  R31
0014cb 1f66      	ROL  R22
0014cc 957a      	DEC  R23
0014cd f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0014ce 27ee      	CLR  R30
0014cf 27ff      	CLR  R31
0014d0 2766      	CLR  R22
0014d1 2777      	CLR  R23
0014d2 915f      	POP  R21
0014d3 9508      	RET
                 
                 __MINRES:
0014d4 efef      	SER  R30
0014d5 efff      	SER  R31
0014d6 e76f      	LDI  R22,0x7F
0014d7 ef7f      	SER  R23
0014d8 915f      	POP  R21
0014d9 9508      	RET
                 
                 __MAXRES:
0014da efef      	SER  R30
0014db efff      	SER  R31
0014dc e76f      	LDI  R22,0x7F
0014dd e77f      	LDI  R23,0x7F
0014de 915f      	POP  R21
0014df 9508      	RET
                 
                 __MULF12:
0014e0 935f      	PUSH R21
0014e1 df2a      	RCALL __UNPACK
0014e2 3870      	CPI  R23,0x80
0014e3 f351      	BREQ __ZERORES
0014e4 3890      	CPI  R25,0x80
0014e5 f341      	BREQ __ZERORES
0014e6 2401      	EOR  R0,R1
0014e7 9408      	SEC
0014e8 1f79      	ADC  R23,R25
0014e9 f423      	BRVC __MULF124
0014ea f31c      	BRLT __ZERORES
                 __MULF125:
0014eb 2000      	TST  R0
0014ec f33a      	BRMI __MINRES
0014ed cfec      	RJMP __MAXRES
                 __MULF124:
0014ee 920f      	PUSH R0
0014ef 931f      	PUSH R17
0014f0 932f      	PUSH R18
0014f1 933f      	PUSH R19
0014f2 934f      	PUSH R20
0014f3 2711      	CLR  R17
0014f4 2722      	CLR  R18
0014f5 2799      	CLR  R25
0014f6 9f68      	MUL  R22,R24
0014f7 01a0      	MOVW R20,R0
0014f8 9f8f      	MUL  R24,R31
0014f9 2d30      	MOV  R19,R0
0014fa 0d41      	ADD  R20,R1
0014fb 1f59      	ADC  R21,R25
0014fc 9f6b      	MUL  R22,R27
0014fd 0d30      	ADD  R19,R0
0014fe 1d41      	ADC  R20,R1
0014ff 1f59      	ADC  R21,R25
001500 9f8e      	MUL  R24,R30
001501 d027      	RCALL __MULF126
001502 9fbf      	MUL  R27,R31
001503 d025      	RCALL __MULF126
001504 9f6a      	MUL  R22,R26
001505 d023      	RCALL __MULF126
001506 9fbe      	MUL  R27,R30
001507 d01d      	RCALL __MULF127
001508 9faf      	MUL  R26,R31
001509 d01b      	RCALL __MULF127
00150a 9fae      	MUL  R26,R30
00150b 0d11      	ADD  R17,R1
00150c 1f29      	ADC  R18,R25
00150d 1f39      	ADC  R19,R25
00150e 1f49      	ADC  R20,R25
00150f 1f59      	ADC  R21,R25
001510 2fe3      	MOV  R30,R19
001511 2ff4      	MOV  R31,R20
001512 2f65      	MOV  R22,R21
001513 2f52      	MOV  R21,R18
001514 914f      	POP  R20
001515 913f      	POP  R19
001516 912f      	POP  R18
001517 911f      	POP  R17
001518 900f      	POP  R0
001519 2366      	TST  R22
00151a f02a      	BRMI __MULF122
00151b 0f55      	LSL  R21
00151c 1fee      	ROL  R30
00151d 1fff      	ROL  R31
00151e 1f66      	ROL  R22
00151f c002      	RJMP __MULF123
                 __MULF122:
001520 9573      	INC  R23
001521 f24b      	BRVS __MULF125
                 __MULF123:
001522 decd      	RCALL __ROUND_REPACK
001523 915f      	POP  R21
001524 9508      	RET
                 
                 __MULF127:
001525 0d10      	ADD  R17,R0
001526 1d21      	ADC  R18,R1
001527 1f39      	ADC  R19,R25
001528 c002      	RJMP __MULF128
                 __MULF126:
001529 0d20      	ADD  R18,R0
00152a 1d31      	ADC  R19,R1
                 __MULF128:
00152b 1f49      	ADC  R20,R25
00152c 1f59      	ADC  R21,R25
00152d 9508      	RET
                 
                 __DIVF21:
00152e 935f      	PUSH R21
00152f dedc      	RCALL __UNPACK
001530 3870      	CPI  R23,0x80
001531 f421      	BRNE __DIVF210
001532 2011      	TST  R1
                 __DIVF211:
001533 f40a      	BRPL __DIVF219
001534 cf9f      	RJMP __MINRES
                 __DIVF219:
001535 cfa4      	RJMP __MAXRES
                 __DIVF210:
001536 3890      	CPI  R25,0x80
001537 f409      	BRNE __DIVF218
                 __DIVF217:
001538 cf95      	RJMP __ZERORES
                 __DIVF218:
001539 2401      	EOR  R0,R1
00153a 9408      	SEC
00153b 0b97      	SBC  R25,R23
00153c f41b      	BRVC __DIVF216
00153d f3d4      	BRLT __DIVF217
00153e 2000      	TST  R0
00153f cff3      	RJMP __DIVF211
                 __DIVF216:
001540 2f79      	MOV  R23,R25
001541 931f      	PUSH R17
001542 932f      	PUSH R18
001543 933f      	PUSH R19
001544 934f      	PUSH R20
001545 2411      	CLR  R1
001546 2711      	CLR  R17
001547 2722      	CLR  R18
001548 2733      	CLR  R19
001549 2744      	CLR  R20
00154a 2755      	CLR  R21
00154b e290      	LDI  R25,32
                 __DIVF212:
00154c 17ae      	CP   R26,R30
00154d 07bf      	CPC  R27,R31
00154e 0786      	CPC  R24,R22
00154f 0741      	CPC  R20,R17
001550 f030      	BRLO __DIVF213
001551 1bae      	SUB  R26,R30
001552 0bbf      	SBC  R27,R31
001553 0b86      	SBC  R24,R22
001554 0b41      	SBC  R20,R17
001555 9408      	SEC
001556 c001      	RJMP __DIVF214
                 __DIVF213:
001557 9488      	CLC
                 __DIVF214:
001558 1f55      	ROL  R21
001559 1f22      	ROL  R18
00155a 1f33      	ROL  R19
00155b 1c11      	ROL  R1
00155c 1faa      	ROL  R26
00155d 1fbb      	ROL  R27
00155e 1f88      	ROL  R24
00155f 1f44      	ROL  R20
001560 959a      	DEC  R25
001561 f751      	BRNE __DIVF212
001562 01f9      	MOVW R30,R18
001563 2d61      	MOV  R22,R1
001564 914f      	POP  R20
001565 913f      	POP  R19
001566 912f      	POP  R18
001567 911f      	POP  R17
001568 2366      	TST  R22
001569 f032      	BRMI __DIVF215
00156a 0f55      	LSL  R21
00156b 1fee      	ROL  R30
00156c 1fff      	ROL  R31
00156d 1f66      	ROL  R22
00156e 957a      	DEC  R23
00156f f243      	BRVS __DIVF217
                 __DIVF215:
001570 de7f      	RCALL __ROUND_REPACK
001571 915f      	POP  R21
001572 9508      	RET
                 
                 __CMPF12:
001573 2399      	TST  R25
001574 f09a      	BRMI __CMPF120
001575 2377      	TST  R23
001576 f042      	BRMI __CMPF121
001577 1797      	CP   R25,R23
001578 f048      	BRLO __CMPF122
001579 f429      	BRNE __CMPF121
00157a 17ae      	CP   R26,R30
00157b 07bf      	CPC  R27,R31
00157c 0786      	CPC  R24,R22
00157d f020      	BRLO __CMPF122
00157e f031      	BREQ __CMPF123
                 __CMPF121:
00157f 9498      	CLZ
001580 9488      	CLC
001581 9508      	RET
                 __CMPF122:
001582 9498      	CLZ
001583 9408      	SEC
001584 9508      	RET
                 __CMPF123:
001585 9418      	SEZ
001586 9488      	CLC
001587 9508      	RET
                 __CMPF120:
001588 2377      	TST  R23
001589 f7c2      	BRPL __CMPF122
00158a 1797      	CP   R25,R23
00158b f398      	BRLO __CMPF121
00158c f7a9      	BRNE __CMPF122
00158d 17ea      	CP   R30,R26
00158e 07fb      	CPC  R31,R27
00158f 0768      	CPC  R22,R24
001590 f388      	BRLO __CMPF122
001591 f399      	BREQ __CMPF123
001592 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
001593 2400      	CLR  R0
001594 0daf      	ADD  R26,R15
001595 1db0      	ADC  R27,R0
001596 9508      	RET
                 
                 __ANEGW1:
001597 95f1      	NEG  R31
001598 95e1      	NEG  R30
001599 40f0      	SBCI R31,0
00159a 9508      	RET
                 
                 __ANEGD1:
00159b 95f0      	COM  R31
00159c 9560      	COM  R22
00159d 9570      	COM  R23
00159e 95e1      	NEG  R30
00159f 4fff      	SBCI R31,-1
0015a0 4f6f      	SBCI R22,-1
0015a1 4f7f      	SBCI R23,-1
0015a2 9508      	RET
                 
                 __LSLW4:
0015a3 0fee      	LSL  R30
0015a4 1fff      	ROL  R31
                 __LSLW3:
0015a5 0fee      	LSL  R30
0015a6 1fff      	ROL  R31
                 __LSLW2:
0015a7 0fee      	LSL  R30
0015a8 1fff      	ROL  R31
0015a9 0fee      	LSL  R30
0015aa 1fff      	ROL  R31
0015ab 9508      	RET
                 
                 __CBD1:
0015ac 2ffe      	MOV  R31,R30
0015ad 0fff      	ADD  R31,R31
0015ae 0bff      	SBC  R31,R31
0015af 2f6f      	MOV  R22,R31
0015b0 2f7f      	MOV  R23,R31
0015b1 9508      	RET
                 
                 __CWD1:
0015b2 2f6f      	MOV  R22,R31
0015b3 0f66      	ADD  R22,R22
0015b4 0b66      	SBC  R22,R22
0015b5 2f76      	MOV  R23,R22
0015b6 9508      	RET
                 
                 __LNEGB1:
0015b7 23ee      	TST  R30
0015b8 e0e1      	LDI  R30,1
0015b9 f009      	BREQ __LNEGB1F
0015ba 27ee      	CLR  R30
                 __LNEGB1F:
0015bb 9508      	RET
                 
                 __MULW12U:
0015bc 9ffa      	MUL  R31,R26
0015bd 2df0      	MOV  R31,R0
0015be 9feb      	MUL  R30,R27
0015bf 0df0      	ADD  R31,R0
0015c0 9fea      	MUL  R30,R26
0015c1 2de0      	MOV  R30,R0
0015c2 0df1      	ADD  R31,R1
0015c3 9508      	RET
                 
                 __MULW12:
0015c4 d070      	RCALL __CHKSIGNW
0015c5 dff6      	RCALL __MULW12U
0015c6 f40e      	BRTC __MULW121
0015c7 dfcf      	RCALL __ANEGW1
                 __MULW121:
0015c8 9508      	RET
                 
                 __DIVB21U:
0015c9 2400      	CLR  R0
0015ca e098      	LDI  R25,8
                 __DIVB21U1:
0015cb 0faa      	LSL  R26
0015cc 1c00      	ROL  R0
0015cd 1a0e      	SUB  R0,R30
0015ce f410      	BRCC __DIVB21U2
0015cf 0e0e      	ADD  R0,R30
0015d0 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0015d1 60a1      	SBR  R26,1
                 __DIVB21U3:
0015d2 959a      	DEC  R25
0015d3 f7b9      	BRNE __DIVB21U1
0015d4 2fea      	MOV  R30,R26
0015d5 2da0      	MOV  R26,R0
0015d6 9508      	RET
                 
                 __DIVB21:
0015d7 d051      	RCALL __CHKSIGNB
0015d8 dff0      	RCALL __DIVB21U
0015d9 f40e      	BRTC __DIVB211
0015da 95e1      	NEG  R30
                 __DIVB211:
0015db 9508      	RET
                 
                 __DIVW21U:
0015dc 2400      	CLR  R0
0015dd 2411      	CLR  R1
0015de e190      	LDI  R25,16
                 __DIVW21U1:
0015df 0faa      	LSL  R26
0015e0 1fbb      	ROL  R27
0015e1 1c00      	ROL  R0
0015e2 1c11      	ROL  R1
0015e3 1a0e      	SUB  R0,R30
0015e4 0a1f      	SBC  R1,R31
0015e5 f418      	BRCC __DIVW21U2
0015e6 0e0e      	ADD  R0,R30
0015e7 1e1f      	ADC  R1,R31
0015e8 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0015e9 60a1      	SBR  R26,1
                 __DIVW21U3:
0015ea 959a      	DEC  R25
0015eb f799      	BRNE __DIVW21U1
0015ec 01fd      	MOVW R30,R26
0015ed 01d0      	MOVW R26,R0
0015ee 9508      	RET
                 
                 __DIVW21:
0015ef d045      	RCALL __CHKSIGNW
0015f0 dfeb      	RCALL __DIVW21U
0015f1 f40e      	BRTC __DIVW211
0015f2 dfa4      	RCALL __ANEGW1
                 __DIVW211:
0015f3 9508      	RET
                 
                 __DIVD21U:
0015f4 933f      	PUSH R19
0015f5 934f      	PUSH R20
0015f6 935f      	PUSH R21
0015f7 2400      	CLR  R0
0015f8 2411      	CLR  R1
0015f9 2744      	CLR  R20
0015fa 2755      	CLR  R21
0015fb e230      	LDI  R19,32
                 __DIVD21U1:
0015fc 0faa      	LSL  R26
0015fd 1fbb      	ROL  R27
0015fe 1f88      	ROL  R24
0015ff 1f99      	ROL  R25
001600 1c00      	ROL  R0
001601 1c11      	ROL  R1
001602 1f44      	ROL  R20
001603 1f55      	ROL  R21
001604 1a0e      	SUB  R0,R30
001605 0a1f      	SBC  R1,R31
001606 0b46      	SBC  R20,R22
001607 0b57      	SBC  R21,R23
001608 f428      	BRCC __DIVD21U2
001609 0e0e      	ADD  R0,R30
00160a 1e1f      	ADC  R1,R31
00160b 1f46      	ADC  R20,R22
00160c 1f57      	ADC  R21,R23
00160d c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00160e 60a1      	SBR  R26,1
                 __DIVD21U3:
00160f 953a      	DEC  R19
001610 f759      	BRNE __DIVD21U1
001611 01fd      	MOVW R30,R26
001612 01bc      	MOVW R22,R24
001613 01d0      	MOVW R26,R0
001614 01ca      	MOVW R24,R20
001615 915f      	POP  R21
001616 914f      	POP  R20
001617 913f      	POP  R19
001618 9508      	RET
                 
                 __MODB21:
001619 94e8      	CLT
00161a ffa7      	SBRS R26,7
00161b c002      	RJMP __MODB211
00161c 95a1      	NEG  R26
00161d 9468      	SET
                 __MODB211:
00161e fde7      	SBRC R30,7
00161f 95e1      	NEG  R30
001620 dfa8      	RCALL __DIVB21U
001621 2fea      	MOV  R30,R26
001622 f40e      	BRTC __MODB212
001623 95e1      	NEG  R30
                 __MODB212:
001624 9508      	RET
                 
                 __MODD21U:
001625 dfce      	RCALL __DIVD21U
001626 01fd      	MOVW R30,R26
001627 01bc      	MOVW R22,R24
001628 9508      	RET
                 
                 __CHKSIGNB:
001629 94e8      	CLT
00162a ffe7      	SBRS R30,7
00162b c002      	RJMP __CHKSB1
00162c 95e1      	NEG  R30
00162d 9468      	SET
                 __CHKSB1:
00162e ffa7      	SBRS R26,7
00162f c004      	RJMP __CHKSB2
001630 95a1      	NEG  R26
001631 f800      	BLD  R0,0
001632 9403      	INC  R0
001633 fa00      	BST  R0,0
                 __CHKSB2:
001634 9508      	RET
                 
                 __CHKSIGNW:
001635 94e8      	CLT
001636 fff7      	SBRS R31,7
001637 c002      	RJMP __CHKSW1
001638 df5e      	RCALL __ANEGW1
001639 9468      	SET
                 __CHKSW1:
00163a ffb7      	SBRS R27,7
00163b c006      	RJMP __CHKSW2
00163c 95a0      	COM  R26
00163d 95b0      	COM  R27
00163e 9611      	ADIW R26,1
00163f f800      	BLD  R0,0
001640 9403      	INC  R0
001641 fa00      	BST  R0,0
                 __CHKSW2:
001642 9508      	RET
                 
                 __GETW1P:
001643 91ed      	LD   R30,X+
001644 91fc      	LD   R31,X
001645 9711      	SBIW R26,1
001646 9508      	RET
                 
                 __GETD1P:
001647 91ed      	LD   R30,X+
001648 91fd      	LD   R31,X+
001649 916d      	LD   R22,X+
00164a 917c      	LD   R23,X
00164b 9713      	SBIW R26,3
00164c 9508      	RET
                 
                 __GETW1PF:
00164d 9005      	LPM  R0,Z+
00164e 91f4      	LPM  R31,Z
00164f 2de0      	MOV  R30,R0
001650 9508      	RET
                 
                 __GETD1S0:
001651 81e8      	LD   R30,Y
001652 81f9      	LDD  R31,Y+1
001653 816a      	LDD  R22,Y+2
001654 817b      	LDD  R23,Y+3
001655 9508      	RET
                 
                 __PUTD1S0:
001656 83e8      	ST   Y,R30
001657 83f9      	STD  Y+1,R31
001658 836a      	STD  Y+2,R22
001659 837b      	STD  Y+3,R23
00165a 9508      	RET
                 
                 __PUTPARD1:
00165b 937a      	ST   -Y,R23
00165c 936a      	ST   -Y,R22
00165d 93fa      	ST   -Y,R31
00165e 93ea      	ST   -Y,R30
00165f 9508      	RET
                 
                 __SWAPD12:
001660 2e18      	MOV  R1,R24
001661 2f86      	MOV  R24,R22
001662 2d61      	MOV  R22,R1
001663 2e19      	MOV  R1,R25
001664 2f97      	MOV  R25,R23
001665 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001666 2e1b      	MOV  R1,R27
001667 2fbf      	MOV  R27,R31
001668 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
001669 2e1a      	MOV  R1,R26
00166a 2fae      	MOV  R26,R30
00166b 2de1      	MOV  R30,R1
00166c 9508      	RET
                 
                 __EEPROMRDW:
00166d 9611      	ADIW R26,1
00166e d002      	RCALL __EEPROMRDB
00166f 2ffe      	MOV  R31,R30
001670 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
001671 99e1      	SBIC EECR,EEWE
001672 cffe      	RJMP __EEPROMRDB
001673 93ff      	PUSH R31
001674 b7ff      	IN   R31,SREG
001675 94f8      	CLI
001676 bbae      	OUT  EEARL,R26
001677 bbbf      	OUT  EEARH,R27
001678 9ae0      	SBI  EECR,EERE
001679 b3ed      	IN   R30,EEDR
00167a bfff      	OUT  SREG,R31
00167b 91ff      	POP  R31
00167c 9508      	RET
                 
                 __EEPROMWRW:
00167d d007      	RCALL __EEPROMWRB
00167e 9611      	ADIW R26,1
00167f 93ef      	PUSH R30
001680 2fef      	MOV  R30,R31
001681 d003      	RCALL __EEPROMWRB
001682 91ef      	POP  R30
001683 9711      	SBIW R26,1
001684 9508      	RET
                 
                 __EEPROMWRB:
001685 9be1      	SBIS EECR,EEWE
001686 c002      	RJMP __EEPROMWRB1
001687 95a8      	WDR
001688 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001689 b79f      	IN   R25,SREG
00168a 94f8      	CLI
00168b bbae      	OUT  EEARL,R26
00168c bbbf      	OUT  EEARH,R27
00168d 9ae0      	SBI  EECR,EERE
00168e b38d      	IN   R24,EEDR
00168f 17e8      	CP   R30,R24
001690 f019      	BREQ __EEPROMWRB0
001691 bbed      	OUT  EEDR,R30
001692 9ae2      	SBI  EECR,EEMWE
001693 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
001694 bf9f      	OUT  SREG,R25
001695 9508      	RET
                 
                 __CPD10:
001696 9730      	SBIW R30,0
001697 4060      	SBCI R22,0
001698 4070      	SBCI R23,0
001699 9508      	RET
                 
                 __CPW02:
00169a 2400      	CLR  R0
00169b 160a      	CP   R0,R26
00169c 060b      	CPC  R0,R27
00169d 9508      	RET
                 
                 __SAVELOCR6:
00169e 935a      	ST   -Y,R21
                 __SAVELOCR5:
00169f 934a      	ST   -Y,R20
                 __SAVELOCR4:
0016a0 933a      	ST   -Y,R19
                 __SAVELOCR3:
0016a1 932a      	ST   -Y,R18
                 __SAVELOCR2:
0016a2 931a      	ST   -Y,R17
0016a3 930a      	ST   -Y,R16
0016a4 9508      	RET
                 
                 __LOADLOCR6:
0016a5 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0016a6 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0016a7 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0016a8 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0016a9 8119      	LDD  R17,Y+1
0016aa 8108      	LD   R16,Y
0016ab 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 : 146 r1 :  51 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   2 r7 :   0 
r8 :  18 r9 :  10 r10:  14 r11:   8 r12:   2 r13:   1 r14:   0 r15:   4 
r16:  55 r17:  75 r18:  55 r19:  39 r20:  55 r21: 103 r22: 154 r23: 145 
r24: 136 r25: 100 r26: 502 r27: 334 r28:  67 r29:   1 r30:1393 r31: 738 
x  : 120 y  : 973 z  :  49 
Registers used: 31 out of 35 (88.6%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  68 add   :  63 
adiw  :  80 and   :  10 andi  :  15 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   1 break :   0 breq  :  62 
brge  :  24 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  28 
brlt  :  18 brmi  :  11 brne  :  99 brpl  :   9 brsh  :   8 brtc  :   7 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  : 393 
cbi   :  17 cbr   :   1 clc   :   4 clh   :   0 cli   :   4 cln   :   0 
clr   :  69 cls   :   0 clt   :   8 clv   :   0 clz   :   2 com   :  11 
cp    :  38 cpc   :  39 cpi   :  98 cpse  :   0 dec   :  28 des   :   0 
eor   :   9 fmul  :   0 fmuls :   0 fmulsu:   0 icall :  11 ijmp  :   0 
in    :   6 inc   :   8 jmp   :  36 ld    : 126 ldd   : 341 ldi   : 947 
lds   : 106 lpm   :  17 lsl   :  34 lsr   :   8 mov   : 116 movw  : 120 
mul   :  14 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 or    :   3 
ori   :   9 out   :  52 pop   :  28 push  :  28 rcall :  91 ret   :  81 
reti  :   4 rjmp  : 219 rol   :  54 ror   :  19 sbc   :  28 sbci  :  49 
sbi   :  22 sbic  :  18 sbis  :   3 sbiw  :  81 sbr   :   5 sbrc  :   7 
sbrs  :  27 sec   :   6 seh   :   0 sei   :   2 sen   :   0 ser   :   8 
ses   :   0 set   :   8 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 471 std   : 190 sts   : 100 sub   :  23 subi  :  82 swap  :   3 
tst   :  29 wdr   :   2 
Instructions used: 83 out of 116 (71.6%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002d58  11076    532  11608   16384  70.8%
[.dseg] 0x000060 0x0002b4      0    340    340    1119  30.4%
[.eseg] 0x000000 0x000054      0     84     84     512  16.4%

Assembly complete, 0 errors, 11 warnings
